[{"model": "midocs.page", "fields": {"hidden": false, "header": null, "page_type": 1, "text": "<p>In developing a {% intlink \"bacteria_growth_initial_model\" %}model of bacteria growth{%endintlink%}, we detailed every step of building the model from the data.  Since we assumed the change in the population size in one time step was a linear function of the population size, the model was so simple that we could even solve it.  We ended up with a fairly simple expression showing the {% intlink \"exponential_growth_decay_discrete\" %}exponential growth{%endintlink%} of the population size.</p>\r\n\r\n<p>Here we'll examine a situation that seems completely different.  We'll look at what happens when we give a patient a {% extlink \"http://en.wikipedia.org/wiki/Bolus_%28medicine%29\" %}bolus{%endextlink%} injection (a one-time injection) of penicillin.  In this case, of course, the penicillin won't start multiplying like bacteria in the patient.  Instead, the body (i.e., the kidneys) will start removing the penicillin from the body.  However, if we make a model where the amount of penicillin removed is a linear function of the amount penicillin in the blood, the model is starting to look a lot like the bacteria growth model.  In fact, we'll get {% intlink \"exponential_growth_decay_discrete\" %}exponential decay{%endintlink%} of the amount of penicillin in the blood.</p>\r\n\r\n<p>There's one more big difference between the {% intlink \"bacteria_growth_initial_model\" %}bacteria growth example{%endintlink%} and this page.  Here, we'll just get you started on the process, giving you background information about the drug clearance.  We then let you go {% intlink \"penicillin_clearance_model_project\" class=\"assessment\" %}make the model{% endintlink%} on your own.</p>\r\n\r\n{% navigation_tag \"background\" \"Background\" %}\r\n<h4>Background</h4>\r\n\r\n<p>When penicillin was first discovered, its usefulness was limited by the efficiency with which the kidney eliminates penicillin from the blood plasma (blood minus blood cells) passing through it.    The modifications that have been made to penicillin (leading to amphicillin, moxicillin, mezlocillin, etc.) have enhanced its ability to cross membranes and reach targeted infections and reduced the rate at which the kidney clears the plasma of penicillin.</p>\r\n\r\n<p>Even with these improvements in penicillin, the kidneys can still remove penicillin fairly rapidly.  In this project, you will build a mathematical model of penicillin clearance based on an assumption of how the kidneys operate.  The secret to your success will be to build into the model a key parameter that captures the speed of the penicillin clearance.  Then, you can estimate the model parameter by fitting predictions of the model to data.  Lastly, you will compare your model predictions to the data to see how well the model matches the data.</p>\r\n\r\n<p>The assumption behind the model is that the amount of penicillin removed by the kidneys in a five minute interval is proportional to the total amount of penicillin.  We can formulate this assumption as a word model for the renal (i.e., kidney) clearance of penicillin.</p>\r\n\r\n<section class=\"box info\"> \r\n<h5>Renal clearance of penicillin</h5>\r\n<p>\r\nIn each five minute interval following penicillin injection,\r\nthe kidneys remove a fixed fraction of the penicillin\r\nthat was in the plasma at the beginning of the five minute interval.</p>\r\n</section>\r\n\r\n<p>Your goal is to translate this word model into a mathematical model that has a parameter that determines how much penicillin the kidneys remove in each interval.  You can then use the below data to determine this parameter. </p>\r\n\r\n<p>The following table and graph contain data for serum penicillin concentrations at 5 minute intervals for the 20 minutes following a {% extlink \"http://en.wikipedia.org/wiki/Bolus_%28medicine%29\" %}bolus{%endextlink%} injection (a one-time injection) of 2 g into the serum of &ldquo;five healthy young volunteers&rdquo; (read &ldquo;medical students&rdquo;) taken from T. Bergans, Penicillins, in <em>Antibiotics and Chemotherapy</em>, Vol 25, H. Sch\u00f8onfeld, Ed., S. Karger, Basel, New York, 1978. We are interpreting serum in this case to be plasma.</p>\r\n\r\n<a class=\"anchor\" id=\"the_data\"></a>\r\n{% twocolumns %}\r\n<table class=\"basic centered compact\" style=\"width:50%\">\r\n  <tr><th>Time (min)</th><th>Penicillin Concentration (\u03bcg/ml)</th></tr>\r\n  <tr><td>0</td><td>200</td></tr>\r\n  <tr><td>5</td><td>152</td></tr>\r\n  <tr><td>10</td><td>118</td></tr>\r\n  <tr><td>15</td><td>93</td></tr>\r\n  <tr><td>20</td><td>74</td></tr>\r\n</table>\r\n{% nextcolumn %}\r\n{% image \"penicillin_concentration_versus_time_2_g_bolus\" %}\r\n{% endtwocolumns %}\r\n\r\n\r\n{% navigation_tag \"your_turn\" \"Your turn\" %}\r\n<h4>Your turn</h4>\r\n\r\n<p>Now its your turn to develop a mathematical model of penicillin clearance.  You can use a procedure similar to the one we used to developed the  {% intlink \"bacteria_growth_initial_model\" %}model of bacteria growth{%endintlink%}.  Your model should be based on\r\n<ul>\r\n<li>the above data, and</li>\r\n<li>the assumption that the drop in penicillin concentration each 5 minutes will depend linearly on the concentration.</li>\r\n</ul>\r\n</p>\r\n\r\n<p>If all goes well, you should be able to create a model that has an unknown parameter, fit the model to determine that parameter from the data, and then compare your model prediction to the data to see how well you did.</p>\r\n\r\n<p>When you are all finished, you can compare your results to some findings from the research literature.  Analysis of some numbers from the research literature seems to indicate that the all of the blood plasma of a human passes through the kidneys every 5 minutes and that the kidneys remove about 20% of the penicillin in the blood that passes through them.{% footnote \"clearance_rate\"  \"That all of the plasma passes through the kidney in 5 minutes is taken from Rodney A. Rhoades and George A. Tanner, Medical Physiology, Little, Brown and Company, Boston, 1995. &ldquo;In resting, healthy, young adult men, renal blood flow averages about 1.2 L/min&rdquo;, page 426, and &ldquo;The blood volume is normally 5-6 L in men and 4.5-5.5 L in women.&rdquo;, page 210. &ldquo;Hematocrit values of the blood of health adults are $47 \\pm 5\\%$ for men and $42 \\pm 5\\%$ for women&rdquo;, page 210 suggests that the amount of plasma in a male is about 6 L $\\times$ 0.53 = 3.18 L.  Moreover, J. A. Webber and W. J. Wheeler, Antimicrobial and pharmacokinetic properties, in Chemistry and Biology of &beta;-Lactin Antibiotics, Vol. 1, Robert B. Morin and Marvin Gorman, Eds. Academic Press, New York, 1982, page 408 report plasma renal clearances of penicillin ranging from 79 to 273 ml/min. Plasma (blood minus blood cells) is approximately 53% of the blood so plasma flow through the kidney is about 6 liters $\\times$ 0.53/5 min = 0.636 l/min. Clearance of 20% of the plasma yields plasma penicillin clearance of 0.636 = 0.2 = 0.127 l/min = 127 ml/min which is between 79 and 273 ml/min.\" %}  You can determine if your analysis of the above data yields a result close to that rate of clearance.</p>\r\n\r\n<p>Instructions from writing up the penicillin project are {% intlink \"penicillin_clearance_model_project\" class=\"assessment\" %}here{%endintlink%}.</p>\r\n\r\n<p>For more practice on building dynamical system models, try out the {% intlink \"penicillin_clearance_model_exercises\" %}exercises{%endintlink%}.</p>\r\n", "code": "penicillin_clearance_model", "date_created": "2012-08-03", "detailed_description": null, "related_videos": [], "keywords": [125], "date_modified": "2015-04-21T10:46:36Z", "publish_date": "2012-08-03", "description": "We give a word model for how penicillin should be cleared from the blood and allow you to construct a mathematical model to fit some data.", "javascript": null, "objectives": [], "notation_systems": [], "subjects": [], "author_copyright": true, "highlight": false, "title": "Constructing a mathematical model for penicillin clearance", "additional_credits": "<p>This page is based on <a href=\"http://cornette.public.iastate.edu/CLS.html\" class=\"external\">Calculus for the Life Sciences: A Modeling Approach</a> by James L. Cornette and Ralph A. Ackerman.  Modified under terms of a <a href=\"http://creativecommons.org/licenses/by-nc-sa/3.0/\" class=\"external\">Creative Commons Attribution-Noncommercial-ShareAlike 3.0 License.</a></p>", "notes": ""}, "pk": 329}, {"model": "midocs.page", "fields": {"hidden": false, "header": null, "page_type": 1, "text": "{% navigation_tag \"puretime\" \"Pure-time\" %}\r\n<h4>A pure-time differential equation</h4>\r\n\r\n<p>A pure-time differential equation is an equation of the form\r\n\\begin{align}\r\n  \\diff{y}{t} &= f(t)\\label{pure_time}\\\\\r\n  y(t_0) &= y_0, \\notag\r\n\\end{align}\r\nwhere the second equation is the initial condition.  We prescribe that $y(t_0)$ is the value $y_0$, and we need to determine $y(t)$ for $t > t_0$.  We can think of $f(t)$ as a measurement of the rate of change of $y(t)$ at the time $t$.  Given this measured rate of change, we want to &ldquo;add up&rdquo; all the changes that have happened to $y$ since the initial time $t_0$ in order to determine the value $y(t)$ at time $t$.</p>\r\n\r\n<p>If we can find an <em>antiderivative</em> $F(t)$ of $f(t)$, i.e., a function $F(t)$ such that $\\diff{F}{t}=f(t)$, then the solution to the differential equation \\eqref{pure_time} is simple.  We can use the {% intlink \"indefinite_integral_intuition\" %}indefinite integral{%endintlink%} to calculate $y(t)$.  We know that \r\n\\begin{align*}\r\n  y(t) = \\int f(t) dt = F(t) + c,\r\n\\end{align*}\r\nfor some arbitrary constant $c$.  The value of the constant is determined by the initial condition, i.e., $c$ is chosen so that\r\n\\begin{align*}\r\n  y_0=y(t_0) = F(t_0) + c\r\n\\end{align*}\r\nis satisfied, i.e., $c = y_0-F(t_0)$.  The solution to the pure-time differential equation is \r\n\\begin{align}\r\n  y(t)= F(t) + y_0 - F(t_0).\r\n  \\label{antidervative_solution}\r\n\\end{align}</p>\r\n\r\n<p>Finding an antiderivative $F(t)$ of $f(t)$, however, isn't always the simplest thing to do.  And, for some (most?) functions $f(t)$, it's an impossible task. Here we introduce an approximate method, the Forward Euler method, to determine the solution $y(t)$.  Now only does the Forward Euler method give us a way to estimate $y(t)$, it will also help us understand how an integral works.</p>\r\n\r\n{% navigation_tag \"basis\" \"Basis\" %}\r\n<h4>The basis of Forward Euler: keeping the rate of change constant</h4>\r\n\r\n<p>Given the differential equation \\eqref{pure_time}, we know what the initial rate of change of $y$ must be.  This initial slope of $y(t)$ is $f(t_0)$.  Unless $f(t)$ happens to be a constant function, $f(t)$ will change to different values for $t>t_0$.  But, let's not worry about such realities.  Let's close our eyes and pretend that $f(t)$ does not change and is frozen at the number $f(t_0)$.  If $\\diff{y}{t}$ is the constant $f(t_0)$, then $y(t)$ must be a line with slope $f(t_0)$.  The equation for this line is\r\n\\begin{align}\r\ny(t) \\approx y_0 + f(t_0)(t-t_0),\\label{tangentline_t0}\r\n\\end{align}\r\nwhich is actually the formula for the tangent line to $y(t)$ at $t=t_0$ (since $y'(t_0)=f(t_0)$).  By closing our eyes and pretending that $f(t)$ was a constant fixed at its initial value $f(t_0)$, we've replaced the true solution $y(t)$ with its tangent line calculated at $t=t_0$.  \r\n</p>\r\n\r\n<p>To be concrete, we'll think about the example differential equation\r\n\\begin{align}\r\n  \\diff{y}{t} &= t^2-10\\label{exampletsquared}\\\\\r\n  y(0) &= 50. \\notag\r\n\\end{align}\r\nStarting at $t=t_0=0$, the initial slope is $-10$, as $\\diff{y}{t}=f(t_0) = f(0)=-10$.  Its tangent line at $t=0$ is \r\n\\begin{align*}\r\n  y(t) &\\approx y_0 + f(0)(t-0)\\\\\r\n  &=50 -10t.\r\n\\end{align*}\r\nThis tangent line is shown thin gray line in the right panel of the below applet when it is first started.</p>\r\n\r\n<p>The tangent approximation will be a bad approximation of $y(t)$ for $t$ much larger than $t_0$.  But, if we choose a small enough $\\Delta t$ so that the slope $f(t)$ doesn't change much in the range $t_0 < t < t_0 + \\Delta t$, then the approximation shouldn't be too bad if we don't go past $t=t_0+\\Delta t$.  The idea is that we'll just close our eyes for a short period of time, pretending that $f(t)$ is constant.  After an interval of length $\\Delta t$, we are allowed to open our eyes again.</p>\r\n\r\n<p>When we open our eyes at time $t_0+\\Delta t$, we can take stock of the situation.  We had started at $y(t_0)= y_0$, and having followed the tangent line approximation \\eqref{tangentline_t0} for a time of $\\Delta t$, we see that we have arrived at\r\n\\begin{align}\r\n  y(t_0+\\Delta t) &\\approx y(t_0) + f(t_0)((t_0+\\Delta t)-t_0)\\notag\\\\\r\n  &= y(t_0) + f(t_0) \\Delta t.\r\n  \\label{step1}\r\n\\end{align}\r\n</p>\r\n\r\n<p>In terms of the example system \\eqref{exampletsquared}, we find ourselves at \\begin{align*}\r\n  y(0+\\Delta t) &\\approx y(0) + f(0)((0+\\Delta t)-t_0)\\\\\r\n  &= 50 -10 \\Delta.\r\n\\end{align*}\r\nWith $\\Delta t=1$, as in the default setting of the applet, we estimate that $y(1)$ is approximately $50-10\\cdot 1=40$.</p>\r\n\r\n\r\n{% boxedapplet \"forward_euler_pure_time_details\" %}\r\n\r\n<p>When we open our eyes after time $\\Delta t$, not only do we discover our new position $y(t_0+\\Delta t)$, but we also look and discover that $f(t)$ has changed during the interval we had our eyes closed.  We observe its new value of $f(t+\\Delta t)$ and realize we need to change our slope $\\diff{y}{t}$ to match the new information.  Rather than following the tangent line \\eqref{tangentline_t0} calculated at $t=t_0$, we instead will follow the tangent line based on our new position $y(t_0+\\Delta)$ and our new slope $f(t_0 + \\Delta t)$. This new tangent line is\r\n\\begin{align}\r\ny(t) \\approx y(t_0+\\Delta t) + f(t_0 + \\Delta t)(t-(t_0+\\Delta t)).\\label{tangentline_t1}\r\n\\end{align}\r\nWith this calculation, we close our eyes again and move along the tangent line for another time step of $\\Delta t$.  At the end of that interval, i.e., at time $t_0 + 2 \\Delta t$, we arrive at the position\r\n\\begin{align}\r\n  y(t_0+2\\Delta t) &\\approx y(t_0+\\Delta t) + f(t_0 + \\Delta t)(t_0+2\\Delta t-(t_0+\\Delta t))\\notag\\\\\r\n  &= y(t_0+\\Delta t) + f(t_0 + \\Delta t)\\Delta t\r\n  \\label{step2}\r\n\\end{align}\r\n</p>\r\n\r\n<p>In terms of our example system \\eqref{exampletsquared}, since $t_0=0$ and $\\Delta t=1$, the new slope is \r\n$$f(t_0+ \\Delta t)=f(1)= 1^2-10 = -9.$$\r\nSince our position at the end of the first step was $y(1) \\approx 40$, the new tangent line equation is\r\n\\begin{align*}\r\n  y(t) &\\approx y(t_0+\\Delta t) + f(t_0 + \\Delta t)(t-(t_0+\\Delta t))\\\\\r\n  &= y(1)+f(1)(t-1)\\\\\r\n  &=40 -9(t-1).\r\n\\end{align*}\r\nPlugging in  $t=t_0+2\\Delta t = 0 + 2\\cdot 1 = 2$, our new location is\r\n\\begin{align*}\r\n  y(2) &\\approx 40 -9(2-1) = 31.\r\n\\end{align*}\r\n</p>\r\n\r\n<p>By closing our eyes during each of these two steps, we were taking steps according the Forward Euler algorithm.  To write this algorithm more clearly, we combine step one \\eqref{step1} with step two \\eqref{step2} by substituting the estimate $y(t_0) + f(t_0) \\Delta t$ for $y(t_0 + \\Delta t)$ obtained in step one into the equation for step two.  The result is\r\n\\begin{align*}\r\n  y(t_0+2\\Delta t) &\\approx y(t_0+\\Delta t) + f(t_0 + \\Delta t)\\Delta t\\\\\r\n  &\\approx y(t_0) + f(t_0) \\Delta t + f(t_0 + \\Delta t)\\Delta t\r\n\\end{align*}\r\nThis equation shows that to go from $y(t_0)$ to $y(t_0+2\\Delta t)$, we add \r\n$f(t_0) \\Delta t$ from the first step plus  $f(t_0 + \\Delta t)\\Delta t$.</p>\r\n\r\n<p>We can continue this process. To go $t=t_0+3\\Delta t$, we take another step, closing our eyes for an interval of width $\\Delta t$.  During this interval, we fix the slope at $\\diff{y}{t}=f(t_0+2\\Delta t)$, the value of the slope before closing our eyes.  In this step we will add $f(t_0+2\\Delta t)\\Delta t$, and our estimate will be\r\n\\begin{align*}\r\n  y(t_0+3\\Delta t) &\\approx \r\n  y(t_0) + f(t_0) \\Delta t + f(t_0 + \\Delta t)\\Delta t + f(t_0+2\\Delta t)\\Delta t.\r\n\\end{align*}\r\n</p>\r\n\r\n<p>Do you see the pattern?  In the Forward Euler algorithm, to go from $y(t_0+i\\Delta t)$ to $y(t_0 + (i+1)\\Delta t)$, we add $f(t_0+i\\Delta t)\\Delta t$.  So far, we took  steps for $i=0$, $i=1$, and $i=2$.  You can follow this pattern and write out the Forward Euler formula to estimate $y(t_0+5\\Delta t)$ by taking two more steps.  The formula should be the same as the previous equation, only with two more terms added on the end. After writing the general formula, use it to compute $y(5)$ for the example system \\eqref{exampletsquared} with $\\Delta t=1$.  You answer should agree with the above applet.</p>\r\n\r\n{% navigation_tag \"summation\" \"Summation\"%}\r\n<h4>Summation notation</h4>\r\n\r\n<p>If we asked you to write out the formula for $y(t_0+20 \\Delta t)$, you could do it, but it'd be a pain and you might get writer's cramp.  You'd get a nice result that looked something like\r\n\\begin{gather*}\r\n  y(t_0+20\\Delta t) \\approx \r\n  y(t_0) + f(t_0) \\Delta t + f(t_0 + \\Delta t)\\Delta t + f(t_0+2\\Delta t)\\Delta t\r\n+ f(t_0+3\\Delta t)\\Delta t \r\n+ f(t_0+4\\Delta t)\\Delta t \r\n+ f(t_0+5\\Delta t)\\Delta t \r\n+ f(t_0+6\\Delta t)\\Delta t \r\n+ f(t_0+7\\Delta t)\\Delta t \r\n+ f(t_0+8\\Delta t)\\Delta t \r\n+ f(t_0+9\\Delta t)\\Delta t \r\n+ f(t_0+10\\Delta t)\\Delta t \r\n+ f(t_0+11\\Delta t)\\Delta t \r\n+ f(t_0+12\\Delta t)\\Delta t \r\n+ f(t_0+13\\Delta t)\\Delta t \r\n+ f(t_0+14\\Delta t)\\Delta t \r\n+ f(t_0+15\\Delta t)\\Delta t \r\n+ f(t_0+16\\Delta t)\\Delta t \r\n+ f(t_0+17\\Delta t)\\Delta t \r\n+ f(t_0+18\\Delta t)\\Delta t \r\n+ f(t_0+19\\Delta t)\\Delta t.\r\n\\end{gather*}\r\n</p>\r\n\r\n<p>To make writing such sums easier, we can use summation notation.  In summation notation, a capital Greek sigma, $\\Sigma$, is used to stand for &ldquo;sum.&rdquo;  An example of such a sum is\r\n$$\\sum_{i=1}^3 i^2 = 1^2+2^2+3^3$$\r\nThe $i=1$ below the $\\Sigma$ means that $i$ is the variable that we are going to sum over, and its first value is 1.  The 3 above the $\\Sigma$ means the last value of $i$ is 3.  The $i^2$ means for each value of $i=1,2,3$, we will add the term $i^2$.  Putting this together, we see that the sum represented above is $1^2+2^2+3^2$.</p>\r\n\r\n<p>Here are other such sums.\r\n\\begin{align*}\r\n  \\sum_{j=1}^5 \\frac{1}{j} &= 1 + \\frac{1}{2} + \\frac{1}{3} + \\frac{1}{4} + \\frac{1}{5}\\\\\r\n  \\sum_{k=0}^3 g(k) &= g(0) + g(1)+g(2) +g(3)\\\\\r\n  \\sum_{\\bigstar=5}^7 z^{\\bigstar} &= z^5 + z^6 + z^7\r\n\\end{align*}\r\nIn the last sum, the variable $z$ was not given as a variable to sum over, so we just leave it alone as a $z$.</p>\r\n\r\n<p>As a quick practice, write out the sums\r\n\\begin{gather*}\r\n  \\sum_{i=1}^5 i\\\\\r\n  \\sum_{j=2}^4 e^j\\\\\r\n  \\sum_{\\clubsuit = 0}^2 h(\\clubsuit y).\r\n\\end{gather*}\r\nCan you rewrite the $\\ln(x) + \\ln(2x) + \\ln(3x)$ in summation notation?</p>\r\n\r\n<h4>Forward Euler in summation notation</h4>\r\n\r\n<p>The Forward Euler algorithm can be written nicely using summation notation.  If we take three steps of size $\\Delta t$ starting at $t_0$, we showed the results was \r\n\\begin{align*}\r\n  y(t_0+3\\Delta t) &\\approx \r\n  y(t_0) + f(t_0) \\Delta t + f(t_0 + \\Delta t)\\Delta t + f(t_0+2\\Delta t)\\Delta t.\r\n\\end{align*}\r\nThe only thing that changes in these terms is the coefficient in front of the $\\Delta t$ inside $f$.  If we use $i$ to represent the coefficient, then each term is of the form $f(t_0 + i \\Delta t)\\Delta t$.  To estimate a solution for Forward Euler, you just start with $y(t_0)$ and sum up the steps you make with closed eyes, which we can write with summation notation:\r\n\\begin{align*}\r\n  y(t_0+3\\Delta t) &\\approx \r\n  y(t_0) + \\sum_{i=0}^2 f(t_0 + i\\Delta t)\\Delta t.\r\n\\end{align*}\r\nNow it's easy to write the formula for a fourth step.\r\n\\begin{align*}\r\n  y(t_0+4\\Delta t) &\\approx \r\n  y(t_0) + \\sum_{i=0}^3 f(t_0 + i\\Delta t)\\Delta t,\r\n\\end{align*}\r\nor even to go all way to an arbitrary number $n$ steps\r\n\\begin{align}\r\n  y(t_0+n\\Delta t) &\\approx \r\n  y(t_0) + \\sum_{i=0}^{n-1}f(t_0 + i\\Delta t)\\Delta t.\r\n  {% equation_tag \"fe_sum\" 8 %}\r\n\\end{align}\r\nWe just have to remember that the last value of the index $i$ is $n-1$, not $n$, as we don't need to evaluate the slope $f(t_0+n\\Delta t)$ if we aren't going past $t=t_0+n\\Delta t$.</p>\r\n\r\n<p>For the example system \\eqref{exampletsquared} with $\\Delta t=1$, write out the formula for using Forward Euler to estimate $y(10)$ using summation notation.  What should the top value of the summation index $i$ be? What is your estimate of $y(10)$? (The applet can help here, as it'd be a bit laborious to do by hand.) If you change $\\Delta t$ to 0.5, how does the formula change?  What's your new estimate of $y(10)$?</p>\r\n\r\n{% navigation_tag \"error\" \"Error analysis\" %}\r\n<h4>Error analysis</h4>\r\n\r\n<p>For a simple function $f(t)$ such as $f(t)=t^2-10$, it's easy to compute an antiderivative $F(t)$.  For this $f(t)$, what is one possibility for $F(t)$?  Using this value and the analytic solution \\eqref{antidervative_solution}, calculate the exact solution $y(t)$ to the example system \\eqref{exampletsquared} and the exact value of $y(10)$.  Your answer should agree with the exact solution calculated by the applet.</p>\r\n\r\n<p>With the exact solution in hand, it's a simple matter to calculate the error in the Forward Euler estimates.  Just subtract off the exact solution from the estimated solution and take the absolute value.  What errors did your Forward Euler estimates have for $y(10)$ with $\\Delta t=1$ and $\\Delta t=0.5$?</p>\r\n\r\n<p>When you cut the time step in half, going from $\\Delta t=1$ to $\\Delta t=0.5$, by approximately what factor did the error in $y(10)$ shrink?  (We are looking for a round answer here, not the exact ratio in the measured errors.)  Use this observation to predict the error if you cut $\\Delta t$ in half once again to $\\Delta t = 0.25$.  Is your prediction born out?  How small must you make $\\Delta t$ to get the error less than 1?</p>\r\n\r\n<p>Does it seem reasonable that as $\\Delta t$ shrinks to zero, the error in the estimate of $y(t)$ will shrink to zero?</p>\r\n\r\n{% navigation_tag \"lookingahead\" \"Ahead\" %}\r\n<h4>Looking ahead</h4>\r\n\r\n<p>A friend tells you that it's pretty stupid to close your eyes and fix the slope at $f(t_0 + i \\Delta t)$ when going from $t=i\\Delta t$ to $t=(i+1)\\Delta t$.  If you do this, you've fixed the slope to be the value at the beginning of the interval.  Why not, before you close you eyes, look ahead and see what the slope is at the end of the interval?  So, starting out, you'd use the slope $f(t_0 + \\Delta t)$ (rather than the slope $f(t_0)$) to take the first step to $f(t_0 + \\Delta t)$.  The resulting algorithm is called the Backward Euler algorithm or the Implicit Euler Algorithm.  We can write the formula as\r\n\\begin{align*}\r\n  y(t_0+n\\Delta t) &\\approx \r\n  y(t_0) + \\sum_{i=0}^{n-1}f(t_0 + (i+1)\\Delta t)\\Delta t.\r\n\\end{align*}\r\nwhere the only difference is that the slope is the ending slope $f(t_0 + (i+1) \\Delta t)$ rather than the beginning slope $f(t_0 + i \\Delta t)$.</p>\r\n\r\n<p>The following applet implements the Backward Euler algorithm.  You can see that it fixes the value of $f(t)$ over an interval using the value of $f$ from the right side of the interval.  Does this do any better than the Forward Euler algorithm?  How does the error compare?  We are particularly interested in what happens  if you cut the step size $\\Delta t$ in half.  What happens to the error in the estimate of $y(10)$ if you cut $\\Delta t$ from 1 to 0.5?  By what factor does the error go down?  How about if you cut $\\Delta t$ in half again?  If you make $\\Delta t=0.1$, how does the error compare to Forward Euler?</p>\r\n\r\n\r\n{% boxedapplet \"backward_euler_pure_time_details\" %}\r\n\r\n<p>Another friend says you are both stupid.  You shouldn't close your eyes and fix the slope to either the slope at the beginning or the slope at the end.  Instead, you should fix the slope to a value at the middle of the interval.  When taking a step from $t=t_0+i\\Delta t$ to $t=t_0+(i+1)\\Delta t$, take the slope at some intermediate time $t= t_0 + (i+p)\\Delta t$, where $p$ is a number between 0 and 1.  If $p=0$, you get Forward Euler, and if $p=1$, you get Backward Euler.  Maybe some intermediate value works better.</p>\r\n\r\n<p>The following modified scheme\r\n\\begin{align*}\r\n  y(t_0+n\\Delta t) &\\approx \r\n  y(t_0) + \\sum_{i=0}^{n-1}f(t_0 + (i+p)\\Delta t)\\Delta t.\r\n\\end{align*}\r\nis implemented in the following applet.  Verify that you get the same results as above when you set $p=0$ and $p=1$.</p>\r\n\r\n<p>Can you find a value of $p$ that is better than $p=0$ or $p=1$?   What would be really great would be to find a value of $p$ that reduces the error by a lot more when you cut the step size $\\Delta t$ in half.  Find a value of $p$ that reduces the error in $y(10)$ by the largest value when you cut $\\Delta t$ from 1 to 0.5.  Is the error further reduced by the same factor when you cut $\\Delta t$ in half again?  For the best value of $p$, if you make $\\Delta t=0.1$, how does the error compare to Forward Euler and Backward Euler?</p>\r\n\r\n{% boxedapplet \"modifying_euler_pure_time\" %}\r\n\r\n\r\n{% comment%}\r\n<h4>Using Forward Euler to predict change</h4>\r\n\r\n<p>For the pure-time dynamical system of equation \\eqref{pure_time}, we need an initial condition in order to know the value of $y(t)$.  For the analytic solution  \\eqref{antiderivative_solution} involving the antiderivative, the arbitrary constant was important so that we could match this initial condition.</p>\r\n\r\n<p>However, what if we just wanted to predict the change in $y(t)$ from the beginning point $t=t_0$ to some ending point $t_f$?  In this case, does the actual value of the initial condition $y(t_0)$ matter?  The change in $y$ over this interval is $y(t_f)-y(t_0)$.  According </p>\r\n\r\n<p>To be concrete, let's focus on our initial \r\n \r\n{% boxedapplet \"forward_euler_pure_time_differential_equation\" %}\r\n{%endcomment%}\r\n\r\n{% navigation_tag \"questions\" \"Questions\" %}\r\n<h4>Summary of questions</h4>\r\n\r\n<p>To aid you in writing up a report on your results, we summarize the main questions posed above that you should be able to answer and added a few more questions.</p>\r\n\r\n<ol>\r\n  <li><p><b>The basis of Forward Euler: keeping the rate of change constant</b></p>\r\n    <ol><li>Why does closing our eyes and pretending that $f(t)$ does not change equivalent to following the tangent line for $y(t)?</li>\r\n      <li>Follow the pattern outlined above and write out the general Forward Euler formula to estimate $y(t_0+5\\Delta t)$.</li>\r\n      <li>Using this formula, compute $y(5)$ for the example system \\eqref{exampletsquared} with $\\Delta t=1$.  Does your answer agree with the above applet?\r\n    </ol>\r\n  </li>\r\n  <li><p><b>Summation notation</b></p>\r\n    <ol><li>Write out the sums $\\displaystyle \\sum_{i=1}^5 i$, $\\displaystyle\\sum_{j=2}^4 e^j$, and $\\displaystyle\\sum_{\\clubsuit = 0}^2 h(\\clubsuit y)$.</li>\r\n      <li>Rewrite the $\\ln(x) + \\ln(2x) + \\ln(3x)$ in summation notation</li>\r\n    </ol>\r\n  </li>\r\n  <li><p><b>Forward Euler in summation notation</b></p>\r\n    <ol><li>For the example system \\eqref{exampletsquared} with $\\Delta t=1$, write out the formula for using Forward Euler to estimate $y(10)$ using summation notation.  What should the top value of the summation index $i$ be?</li>\r\n      <li>What is your estimate of $y(10)$? (The applet can help here.)</li>\r\n      <li>If you change $\\Delta t$ to 0.5, how does the formula change?  What's your new estimate of $y(10)$?</li>\r\n    </ol>\r\n  </li>\r\n  <li><p><b>Error analysis</b></p>\r\n    <ol><li>For $f(t)=t^2-10$, what is one possibility for $F(t)$?</li>\r\n      <li>Using this value and the analytic solution \\eqref{antiderivative_solution}, calculate the exact solution $y(t)$ to the example system \\eqref{exampletsquared} and the exact value of $y(10)$.  Your answer should agree with the exact solution calculated by the applet.</li>\r\n      <li>What errors did your Forward Euler estimates have for $y(10)$ with $\\Delta t=1$ and $\\Delta t=0.5$?</li>\r\n      <li>When you cut the time step in half, going from $\\Delta t=1$ to $\\Delta t=0.5$, by approximately what factor did the error in $y(10)$ shrink?  (We are looking for a round answer here, not the exact ratio in the measured errors.)</li>\r\n      <li>Use this observation to predict the error if you cut $\\Delta t$ in half once again to $\\Delta t = 0.25$.  Is your prediction born out?  How small must you make $\\Delta t$ to get the error less than 1?</li>\r\n      <li>Based on these observations, does it seem reasonable that as $\\Delta t$ shrinks to zero, the error in the estimate of $y(t)$ will shrink to zero?  Why or why not?</li>\r\n\r\n    </ol>\r\n  </li>\r\n  <li><p><b>Looking ahead</b></p>\r\n    <ol><li>Does the Backward Euler algorithm do any better than the Forward Euler algorithm?  How does the error compare?  Is it much better or much worse, or does it give approximately the same amount of error? (If their performances are with 10%-20% of each other, categorize as approximately the same.)</li>\r\n      <li>What happens to the error in the estimate of $y(10)$ if you cut $\\Delta t$ from 1 to 0.5 using Backward Euler?  By what factor does the error go down?  How about if you cut $\\Delta t$ in half again?</li>\r\n      <li>If you make $\\Delta t=0.1$, how does the error in Backward Euler compare to Forward Euler?</li>\r\n      <li>For the method where you can use the slope in the middle of the interval, were you able to reproduce Forward Euler and Backward Euler with $p=0$ and $p=1$?</li>\r\n      <li>Can you find a value of $p$ that is better than $p=0$ or $p=1$?</li>\r\n      <li>For what value of $p$ does the error in $y(10)$ get reduced by the largest value when you cut $\\Delta t$ from 1 to 0.5.  Is the error further reduced by the same factor when you cut $\\Delta t$ in half again?</li>\r\n      <li>For the best value of $p$, if you make $\\Delta t=0.1$, how does the error compare to Forward Euler and Backward Euler?  Is it much better or much worse, or does it give approximately the same amount of error? (If their performances are with 10%-20% of each other, categorize as approximately the same.)</li>\r\n    </ol>\r\n  </li>\r\n  \r\n</ol>", "code": "using_forward_euler_solve_pure_time_differential_equations", "date_created": "2012-11-01", "detailed_description": null, "related_videos": [], "keywords": [144, 39, 105], "date_modified": "2015-04-21T10:47:05Z", "publish_date": "2012-11-01", "description": "By pretending that the slope of a function is constant over small intervals, we following tangent lines to estimate the solution to pure-time differential equations.", "javascript": null, "objectives": [], "notation_systems": [], "subjects": [], "author_copyright": true, "highlight": false, "title": "Using the Forward Euler algorithm to solve pure-time differential equations", "additional_credits": "", "notes": ""}, "pk": 371}, {"model": "midocs.page", "fields": {"hidden": false, "header": null, "page_type": 1, "text": "{% image \"spruce_budworm\" width=400 css=\"float-right\" %}\r\n\r\n<p>The {% extlink \"http://en.wikipedia.org/wiki/Choristoneura_fumiferana#Eastern_Spruce_Budworm\"%}spruce budworm{%endextlink%} (<i>Choristoneura fumiferana</i>) is one of the most destructive native insects in the northern spruce and fir forests of the Eastern United States and Canada.  Most of the time, the number of budworms remains at a low level.  However, every forty years or so, the population of budworms explodes to huge numbers, devastating the forest and destroying many trees, before dropping back down to the previous low level.  Evidence suggests these outbreaks have been recurring regularly for hundreds, if not thousands, of years.</p>\r\n\r\n<p>As these outbreaks have caused the loss of millions of cords of spruce and fir, the wood products industry would like to understand the cycles of spruce budworm populations as a first step toward developing effective management of the problem.  Here, we investigate a model developed by D. Ludwig, D. D. Jones\r\nand C.S. Holling, scientists from the University of British Columbia, that explains some of the features of the budworm cycle.{% citation \"ludwig_et_al_jae_1978\" %}</p>\r\n\r\n<p>The model for budworm population size is a modification of the {% intlink \"from_discrete_to_continuous_dynamical_systems\" anchor=\"solution\" %}continuous logistic equation{%endintlink%}.  Let $t$ be time in some arbitrary scale and let $w(t)$ be the budworm population size at time $t$.  We model the evolution of $w(t)$ according to an autonomous differential equation of the form\r\n\\begin{align*}\r\n  \\diff{w}{t} = r w \\left(1 - \\frac{w}{a}\\right) - h(w),\r\n\\end{align*}\r\nwith low density growth rate $r$ and carrying capacity $a$.  The last term $h(w)$ models the mortality of budworms due to predatory birds.  This term is similar to the {% intlink \"harvest_natural_populations\" %}harvesting{%endintlink%} we added to the {% intlink \"environmental_carrying_capacity\" %}discrete logistic model{%endintlink%}.</p>\r\n\r\n<p>The rate of predation $h(w)$ depends on the budworm population in a special way.  First, if the spruce budworm population is small, the predation rate is very low, close to zero, since the birds will opt for some other types of prey.  The predation rate will grow as the budworms become more numerous.  But the second important feature is that the predation rate cannot grow to become too large.  Instead, if the budworm population is very large, the rate of predation reaches some maximum value.</p>\r\n\r\n<p>To be specific, we use the function\r\n\\begin{align*}\r\n  h(w)=\\frac{w^2}{1+w^2}\r\n\\end{align*}\r\nwhich is graphed below.  The function saturates for large population size $w$  to the maximum value of 1, and when the budworm population size is $w=1$, the predation level $h(1)$ is one-half.  This choice of $h(w)$ is a quite simplistic, and it has no parameters to adjust how fast the birds eat the budworms as the population size increases.  It turns out we can get away with this simple form, but it just means we have to be careful about how we interpret the growth rate $r$ and carrying capacity $a$, as well as the scale of our budworm population size $w$ and time $t$.{% footnote \"nondimensionalization\" \"We should have started with a more general form for $h(w)$ with a more realistic maximum rate of predation, and we should be able to adjust how large the budworm population size needs to be before the predation to gets close to the maximum rate.  However, it turns out we could have started with a more general form and done some clever <a href='http://en.wikipedia.org/wiki/Nondimensionalization' class='external'>nondimensionalization</a> to end up with our simplistic form.  When we start with the more complicated model and turn it into the simple form, the parameters $r$ and $a$ end up being combinations of parameters of the original model.  The variables $w$ and $t$ are also rescaled by parameters of the original model.\" %}  This means, for example, that a population size of $w=1$ does not mean that there is just one budworm.  Instead, $w=1$ indicates the budworm population size where the birds are eating budworms at half their maximum rate.  However, we aren't going to worry about such details here, as we just care about the qualitative behavior of this system.</p>\r\n \r\n{% image \"spruce_budworm_predation_function\" %}\r\n\r\n<p>The fact that the predation rate $h(w)$ saturates to the maximum value of 1 has an important consequence: the predators can't eat the budworms fast enough to stop an outbreak.  When there is an explosion of the spruce budworm population, the birds will eat the budworms at their maximal rate, but it won't be nearly enough to bring the population size back down.  Notice that $h(3)=0.9$, or 90% of the maximum.  Once the budworm population size reaches around $w=3$, the bird can't respond to additional population growth by eating much more.  If the birds can't bring down a huge population of budworms, how will the outbreak come to an end?  Let's see what the model tells us.</p>\r\n\r\n{% navigation_tag \"analysis\" \"Model Analysis\" %}\r\n<h4>Model analysis</h4>\r\n\r\n<p>Putting the predation rate into the model, the final form of our logistic model with predation is\r\n\\begin{align}\r\n  \\diff{w}{t} = r w \\left(1 - \\frac{w}{a}\\right) - \\frac{w^2}{1+w^2}.\r\n  \\label{logistic_predation}\r\n\\end{align}\r\nThis model is much too complicated to have a nice formula for the solution.  Instead, we will seek to understand the behavior of the spruce budworm population size $w(t)$ using {% intlink \"solving_single_autonomous_differential_equations_graphical\" %}graphical methods{%endintlink%}, as well as approximations to the solution using the {% intlink \"forward_euler_algorithm_autonomous_differential_equation\" %}Forward Euler algorithm{%endintlink%}.</p>\r\n\r\n<p>One challenge is that we don't have values for the parameters $r$ and $a$.  This may seem like an inconvenience, but it will turn out that allowing the parameters to take on different values will be key to understanding the behavior of the outbreaks.</p>\r\n\r\n<p>To begin, you can explore the behavior of the model using the following applet.  In the left panel, you can study the plot of the right hand side of equation \\eqref{logistic_predation}, i.e.,\r\n\\begin{align*}\r\n  f(w) = r w \\left(1 - \\frac{w}{a}\\right) - \\frac{w^2}{1+w^2}.\r\n\\end{align*}\r\nYou can explore how this function depends on the parameters $r$ and $a$.  \r\n\r\n{% boxedapplet \"spruce_budworm_nondimensionalized\" %}\r\n\r\n{% navigation_tag \"buildup\" \"Model analysis\" \"Build-up toward outbreak\"%}\r\n<h5>The build-up toward the insect outbreak</h5>\r\n\r\n<p>Let's explore some of the key features of the model that will help explain the spruce budworm outbreaks.  Set the parameters back to their initial values: $r=0.52$ and $a=3.6$.  How many equilibria does the equation have?  What are their values?  Are they stable or unstable?  For each stable equilibrium, determine the initial conditions for which the solution will converge to the equilibrium.</p>\r\n\r\n<p>This parameter regime should correspond to a low level of insects.  Since the carrying capacity $a$ is small, we could think of the forest as being small.    Looking at the above plot of $h(w)$, what is the rate of bird predation when the budworm population is at this stable equilibrium?  Have the birds gotten to their maximum predation level?  You should see that the birds are eating at a moderate level.  The birds are able to keep the budworm population in check.</p>\r\n\r\n<p>Now, let's imagine the forest is growing so that the carrying capacity for the budworms increases.  As you increase $a$, do you notice any big changes in the graph of $f(w)$?  What happens just as you bring $a$ above 7.1 or so?   When $a$ is around 7.5, how many equilibria does the equation have?   What are their values?  Are they stable or unstable?  For each stable equilibrium, determine the initial conditions for which the solution will converge to the equilibrium.</p>\r\n\r\n<p>In this parameter regime, you should see two stable equilibria.  One is at a low budworm population size, pretty close to the one we saw above.  But, there is a new stable equilibrium at a larger value of population size $w$.  That equilibrium corresponds to the outbreak of spruce budworms.  What is $h(w)$ at the upper equilibrium?  Have the predators pretty much reached their capacity at this population size?</p>\r\n\r\n<p>If we started with a small forest, which means a low spruce budworm population, and the forest then grew to this size ($a$ around 7.5), which equilibrium would you expect the budworm population size to converge to?  Would the budworms be at the lower equilibrium where they are controlled by the birds?  Or the upper equilibrium corresponding to the outbreak?  This question can be resolved from your knowledge about which initial conditions converge to which equilibrium.</p>\r\n\r\n<p>If you further increase the forest size to give a carrying capacity around $a=20$, you shouldn't see any qualitative differences from the $a=7.5$ case.  What quantitative difference do you observe?  In other words, what has changed about the location of the equilibria?   If one started with a low spruce budworm population size, would the population size be exploding or would the population size still be kept in check by the predators?</p>\r\n\r\n\r\n<aside class=\"sidenotelabeled\">\r\n<h5>A caution with using numerical tools</h5>\r\n\r\n<p>Since we cannot analytically find the solution to our model \\eqref{logistic_predation}, we are using the above applet, which employs numerical methods to estimate the solution.  Although these tools are important and powerful, we can't use them blindly.  We must understand their limitations and use what we know about the system to verify the results of such tools.</p>\r\n\r\n<p>The applet can easily give a bogus result.  It uses a primitive method (Forward Euler) to estimate the solution to the given initial conditions.  If, for example, you increase the growth rate $r$ to the largest value allowed by the applet, $r=1$, lower carrying capacity to around $a=1$, and set the initial condition to $w(0)$ near 30, it will show the solution jumping down past the equilibria to negative values.  In such a case, the time step (which is the total time divided by 1000) is too large.  The results shown by the applet are incorrect in this case.  You must use your knowledge of differential equations (a solution can't jump over an equilibrium) to realize you shouldn't believe the applet.</p>\r\n\r\n<p>You might also notice that the applet doesn't always catch all the equilibria when they are close together.</p>\r\n</aside>\r\n\r\n{% navigation_tag \"outbreak\" \"Model analysis\" \"The outbreak\"%}\r\n<h5>The outbreak</h5>\r\n\r\n<p>If the situation was precarious when $a=20$, it gets downright ugly when the forest grows much larger and increases the carrying capacity.  Something happens to the equilibria when the carrying capacity gets much larger than $a=27$.  Describe the situation when the carrying capacity is around $a=30$.  How many equilibria does the equation have?   What are their values?  Are they stable or unstable?  For each stable equilibrium, determine the initial conditions for which the solution will converge to the equilibrium.</p>\r\n\r\n<p>Don't blindly trust the Forward Euler approximation (blue curve) of the graph.  Use the Forward Euler approximation as a guide, but also estimate a solution using a {% intlink \"solving_single_autonomous_differential_equations_graphical\" %}graphical approach{%endintlink%} based on the graph of $f(w)$. If the blue curve seems to stop where it shouldn't (such as away from an equilibrium), you can try increasing the total time $t_f$ of the simulation to see if you can get the blue curve to behave like you know it should (based on the analysis of the graph of $f(w)$).</p>\r\n\r\n<p>When the forest is large enough for the carrying capacity to be around $a=30$ (and the growth rate is fixed at $r=0.52$), you should have discovered that there's no avoiding the population explosion in the spruce budworm.  The population skyrockets to nearly $w=30$.  There are budworms everywhere, and they are busy eating the leaves off the trees, decimating the forest.</p>\r\n\r\n<p>Are the birds doing much to control the situation?  What is $h(w)$ for the outbreak equilibrium?  Is it much larger than when the budworms population $w$ was a tenth this size?  The birds are enjoying their feast, but only putting a small dent into the budworm population size.</p>\r\n\r\n\r\n{% navigation_tag \"decline\" \"Model analysis\" \"The decline of the outbreak\"%}\r\n<h5>The decline of the outbreak</h5>\r\n\r\n<p>What finally puts an end to the outbreak?  What the birds couldn't do, the budworms do to themselves.  After a prolonged outbreak, the spruce budworms cause a vast defoliation of the fir and spruce trees.  This decreases the amount of food available for the budworms, effectively decreasing the carrying capacity of the forest.  If the available food can't support the huge population of budworms, many of them will die of starvation, decreasing the population size.  Let's investigate how the model predicts this starvation should end the outbreak.</p>\r\n\r\n<p>Imagine that the defoliation due to the budworm outbreak decreased the carrying capacity back down to $a=20$.  You don't need to analyze the equilibria for this value of $a$ again; you did all the work already.  For these parameters, you should have showed above that the birds could keep the population under control and the outbreak was prevented.  Therefore, when the carrying capacity gets back down to $a=20$, the outbreak should be ended, and we should be back to a small population of budworms, right?</p>\r\n\r\n<p>Do you agree with that last sentence?  If we start with a huge population of budworms and bring the carrying capacity down to $a=20$, which equilibrium should the budworm population size converge to?  Is the outbreak still occurring or has it ended?</p>\r\n\r\n<p>Assuming you determine that the outbreak is still occurring, then the budworms should continue their defoliation of the trees, dropping the carrying capacity even further.  Even when the carrying capacity drops all the way down to $a=7.5$, we still had two stable equilibria.  One corresponded to a small population size and one to the outbreak.  If the carrying capacity was brought down to $a=7.5$ by feasting budworms, which equilibrium should the system be approaching?  Is the outbreak still occurring or has it ended?</p>\r\n\r\n<p>Another qualitative change occurs by the time the carrying capacity drops below $a=7$.  What is the dramatic difference between the situation when $a$ is around 7.5 and the situation when $a$ is around 6.5?  Describe what is different about the equilibria.  When a large population brings the carrying capacity down to this level, what must finally happen to the budworm population size?</p>\r\n\r\n<p>The idea is that when the carrying capacity gets this low, most of the budworms that don't die from starvation can be taken care of by the birds.  The budworms managed to defoliate a large portion of the forest, but have finally been brought down to a small population where they don't do much damage.  That is, at least until the forest grows back large enough so that the population can explode again.  But that will take 40 or so more years.</p>\r\n\r\n{% navigation_tag \"summaryfigure\" \"Summary figure\" %}\r\n<h4>A summary figure</h4>\r\n\r\n<p>To present your results to foresters and folks in the wood products industry, you need a way to nicely summarize your results.  One way to do this would be to make a movie using the above applet.  You could set the initial condition $w_0$ to a small value and the time $t$ to some large number so that $w$ is always at the lower stable equilibrium.  As the forest grows and the carrying capacity $a$ slowly increases, the budworm population size would track the lower stable equilibrium until that equilibrium suddenly disappears, and the population explodes to the upper equilibrium. For the second half of the movie, set the initial condition to a large value so that $w$ is at the upper stable equilibrium.  As forest dies and $a$ decreases, the population size stays at the upper equilibrium until that equilibrium suddenly disappears and the population drops back down to low levels.</p>\r\n\r\n<p>An example of such a movie is shown below.  Click the play button (at lower left of one of panels) to get it started.  The right panel plots a graph of the population size versus time.  (The $T$ from the movie is slower time scale than the $t$ in the first applet.)</p>\r\n\r\n{% boxedapplet \"spruce_budworm_outbreak_movie\" %}\r\n\r\n<p>You like this movie but realize that you need a simpler way to communicate the results.  You decide it would be better to have something just on a piece of paper that you can hand out to people and that allows folks to see the whole situation with just one glance.  Your idea is that you could capture the essence of the whole movie with a plot of $w$ versus the carrying capacity $a$.</p>\r\n\r\n<p>The crux of the idea is the following.  Imagine that you turn off the view of the function (and the vector field) in the first applet and just show the equilibria on the $w$ phase line.  The summary figure will just show how the equilibria on the $w$-axis change as you change $a$.  Flip the $w$-axis so it becomes the vertical axis.  Make the horizontal axis be the $a$-axis.  Above each value of $a$, plot the values of the equilibria.  Above some values of $a$ (such as $a=3$), you would just plot two circles, corresponding to the positions of the two equilibria.  Above other values of $a$ (such as $a=7.5$), you would put four circles.  Since the location of the circles change smoothly as you change $a$, the track of the circles would trace out smooth curves as you moved from left to right (moved from small values of $a$ to large values of $a$).</p>\r\n\r\n<p>In fact, the plot would be even clear if, rather than plotting the individual circles, you just drew the smooth curves showing how the equilibria change as $a$ changes.  You would use solid lines for stable equilibria and dash lines for unstable equilibria. For example, you would have a straight dashed line across the whole diagram at $w=0$, since that unstable equilibrium is there for all values of $a$.  The other equilibria move around as you change $a$, so they would be represented by curves.  This plot is a {% intlink \"bifurcations_differential_equation_introduction\"%}bifurcation diagram{%endintlink%}. Don't use that term in front of the foresters, though, or they may get nervous and get scared of the mathematics.</p>\r\n\r\n<p>Once you have created a nice bifurcation diagram representing how the equilibria depends on $a$, the last part is to show the foresters what happens to the spruce worm population $w(t)$.  The population size will never approach an unstable equilibria, of course.  But, it will stay close to different stable equilibria depending on the situation.  Since this diagram doesn't show time, you can draw how $a$ and $w$ evolved in the movie using a curve (a different color?) with arrows on it.  The arrows will distinguish when $a$ is increasing and when $a$ is decreasing.  If you start at a small value of $a$ and $w$, increase $a$ through the catastrophic outbreak.  Then, once $w$ jumps up to the outbreak level, bring $a$ back down until $w$ jumps down to a low level.  The curve with arrows representing this sequence of events should trace out a loop, and the curve should be on the stable equilibria from the bifurcation diagram except at the points where it jumps and and down.  This loop is how you'll explain the outbreak to the foresters.  (It's called a hysteresis loop, but again, keep the fancy lingo to yourself.)  The hysteresis loop, when drawn on top of the bifurcation diagram, succinctly tells the story of the above movie in one diagram.</p>\r\n\r\n<p>When you make this summary diagram, with $a$ on the horizontal axis and $w$ on the vertical axis, be sure to label everything clearly so the foresters can understand what your model is telling them.  You could include labels from the movie, if you like.  Use this diagram to tell the story of how the model predicts how the spruce budworm outbreak initiates and is terminated.  Remember, the foresters may not understand mathematics very well, so include enough description so that they can follow what you did.</p>\r\n\r\n{% navigation_tag \"project\" \"Project\" %}\r\n<h4>Project</h4>\r\n\r\n<p>The {% intlink \"spruce_budworm_outbreak_project\" class=\"assessment\" %}spruce budworm outbreak project page{%endintlink%} gives instructions for writing up a project report based on this analysis.</p>\r\n", "code": "spruce_budworm_outbreak_model", "date_created": "2012-11-15", "detailed_description": null, "related_videos": [], "keywords": [149, 67, 125, 68], "date_modified": "2015-04-21T10:46:50Z", "publish_date": "2012-11-15", "description": "A graphical analysis of a differential equation model reveals how the spruce budworm could devastate forests every 40 years.", "javascript": null, "objectives": [], "notation_systems": [], "subjects": [7, 10, 11], "author_copyright": true, "highlight": false, "title": "Spruce budworm outbreak model", "additional_credits": "", "notes": ""}, "pk": 374}, {"model": "midocs.page", "fields": {"hidden": false, "header": null, "page_type": 1, "text": "{% navigation_tag \"background\" \"Background\" %}\r\n<h4>Background</h4>\r\n<p>It all started innocently enough.  A family let loose a few rabbits on Foxless Island, thinking the rabbits would be happier outside than inside being rough handled by their children.  Without predators on the island, though, the rabbits became a little too happy, and soon the island became overrun by rabbits.</p>\r\n\r\n<p>The ability for rabbits to multiply has turned into a big headache for you, the head the Foxless animal control team (FACT).  In your {% intlink \"controlling_rabbit_population\" %}first attempt to control the rabbit population{% endintlink%}, you and your team tried &ldquo;harvesting&rdquo; each month a fixed fraction of the rabbit population, hoping to reach a steady population of around a thousand rabbits.  The effort turned into a colossal failure, as no matter what fraction you tried, you seemed to be either harvesting too many or too few rabbits.  You couldn't get the balance right.</p>\r\n\r\n<p>Then, you tried being smarter, counting the number of rabbits on the island each month, and adjusting the fraction of rabbits harvested based on that count.  This effort seemed promising, but it was much too difficult for you and your small team to keep up.  For one thing, counting rabbits is hard work, and FACT simply doesn't have enough resources to keep up the monthly count.  You can't push your team members any harder, as they have begun to rebel against your demands for frequent rabbit counting.  Moreover, your &ldquo;rabbit harvesting&rdquo; activities have made your solution increasingly unpopular among key segments of Foxless residents.  To keep the situation from spinning further out of control, you must devise a new method for rabbit control.</p>\r\n\r\n<p>While brooding about the incorrigible nature of Foxless human and animal populations, you realize the perfect solution to your woes.  Introducing foxes to the island will provide a natural way to control the rabbit population.   Foxes don't need to count rabbits each month in order to decide how many rabbits to eat. They can respond naturally to fluctuations in the rabbit population size, reproducing to yield more foxes should more rabbits need to be eaten.  The best part is that the foxes will do their work for free and without complaining.</p>\r\n\r\n<p>Before you propose this radical change to the Foxless community, you better do your homework well.  You can already hear the objections.  &ldquo;The fox population will explode, and soon we'll have a bigger problem with the foxes than we had with the rabbits.&rdquo;  &ldquo;The foxes will eat all the rabbits and we won't have any rabbits left to watch.&rdquo;  You'll make sure you are prepared to address all these concerns before you propose your fox solution.</p>\r\n\r\n\r\n{% navigation_tag \"model\" \"Model\" %}\r\n<h4>The mathematical model</h4>\r\n\r\n<p>The best way to have a persuasive argument in factor of your proposal, you believe, is to have it backed by a mathematical model.  You decide to make some important changes from your  {% intlink \"controlling_rabbit_population\" %}initial rabbit model{%endintlink%}.  The first change is to move from discrete time to continuous time.  That way, you'll have a more impressive sounding <em>differential equation</em> model.  You let $t$ represent time in years, denoting the rabbit population size at time $t$ by $r(t)$ and the fox population size at time $t$ by $p(t)$ ($p$ for predator).</p>\r\n\r\n<p>As {% intlink \"controlling_rabbit_population\" %}you've discovered{%endintlink%}, the rabbits population will grow exponentially without foxes to control them. You imagine that Greek letters will make the model look sophisticated and choose $\\alpha$ (alpha) for the growth rate parameter of the rabbits, modeling their fox-free evolution with the differential equation \r\n\\begin{align}\r\n  \\diff{r}{t} = \\alpha r.\r\n  {% equation_tag \"rabbits_alone\" \"1\" %}\r\n\\end{align}\r\n</p>\r\n\r\n<p>You model the rabbit-free foxes a bit differently.  Assuming that they depend on rabbits for food, their population size should shrink in the absence of rabbits.  Using $\\gamma > 0$ (gamma) for this rate of decay, you can model the hungry, rabbitless, fox population as\r\n\\begin{align}\r\n  \\diff{p}{t} = - \\gamma p.\r\n  {% equation_tag \"foxes_alone\" \"2\" %}\r\n\\end{align}\r\n</p>\r\n\r\n<p>As a warm up, solve the foxless rabbit equation \\eqref{rabbits_alone} and the rabbitless fox equation \\eqref{foxes_alone}, to obtain an expression for these separate populations.  (Guessing the solution is an OK method.)  What happens to the rabbit population as time increases?  What happens to the fox population as time increases?</p>\r\n\r\n<p>Your main goal for your modeling effort is to show how the foxes will decrease the rabbit population.  To model the harvesting of rabbits by foxes, you subtract a harvesting term off the rabbit-change equation, (i.e., the $\\diff{r}{t}$ equation \\eqref{rabbits_alone}).  Letting the rate of rabbit kills be proportional to the number of rabbits and the number of foxes, you write the harvesting term as $\\beta r p$, where the Greek letter $\\beta$ (beta) is a parameter that indicates how quickly a fox can reduce the rabbit population.  The rabbit equation becomes\r\n\\begin{align}\r\n  \\diff{r}{t} = \\alpha r - \\beta r p.\r\n   {% equation_tag \"rabbits_with_foxes\" \"3\" %}\r\n\\end{align}\r\n</p>\r\n\r\n<p>If the fox population size $p$ remained constant, this harvesting by the foxes is strikingly similar to your {% intlink \"controlling_rabbit_population\" anchor=\"fixednumber\" %}initial harvesting strategy{% endintlink%}, where a fixed fraction were harvested each month.  The new feature is that the foxes can increase their population size when there are plenty of rabbits around.  Again, to keep everything as simple as possible, you model the addition to the fox population as being proportional to the rate that rabbits are eaten.  You add a term to the fox equation of the form $\\delta r p$, where $\\delta$ (delta) captures how efficiently the eaten rabbits are turned into new foxes.  (Since each rabbit consumed doesn't lead to a new fox, you expect that $\\delta$ should be quite a bit smaller than $\\beta$.)  The fox equation becomes\r\n\\begin{align}\r\n  \\diff{p}{t} = - \\gamma p + \\delta rp.\r\n  {% equation_tag \"foxes_with_rabbits\" \"4\" %}\r\n\\end{align}\r\n</p>\r\n<p>Equations \\eqref{rabbits_with_foxes} and \\eqref{foxes_with_rabbits} form a system of two autonomous differential equations for the joint evolution of the rabbit and fox populations.  This equations, known as the {% extlink \"http://en.wikipedia.org/wiki/Lotka%E2%80%93Volterra_equation\" %}Lotka-Volterra equations{%endextlink%}, are a simple example of predator-prey equations that model the interactions among these two populations.</p>\r\n\r\n{% navigation_tag \"solving\" \"Solving\" %}\r\n<h4>Solving the model</h4>\r\n\r\n<p>The next step is to determine what the equations predict about the future of the rabbit and fox population in the event that you add some foxes to the island.  Having these four unknown parameters $\\alpha$, $\\beta$, $\\gamma$, and $\\delta$ is too confusing, so you realize you better give them specific values.  Based on your intuition on animal behavior, you decide to set the parameters to $\\alpha=1$, $\\beta=0.01$, $\\gamma=0.5$, and $\\delta = 0.0005$.  Since you aren't certain these are exactly the right values, you'll have to check out the effect of changing them later.</p>\r\n\r\n<p>You are left with the system of equations\r\n\\begin{align}\r\n  \\diff{r}{t} &=  r - 0.01 r p\\notag\\\\\r\n  \\diff{p}{t} &= - 0.5 p + 0.0005 rp.\r\n  {% equation_tag \"system_with_parameters\" \"5\" %}\r\n\\end{align}\r\nThey look simple enough, but you don't know how to solve them.  To determine what they predict about the future of the rabbits and foxes, you'll need to somehow estimate the solution.</p>\r\n\r\n{% navigation_tag \"visualization\" \"Solving\" \"Computer visualization\" %}\r\n<h5>Computer visualization</h5>\r\n\r\n<p>As best as you can tell, the rabbit population has grown to about 3000 rabbits.  Your plan is to introduce 70 foxes to Foxless Island.  You'll use those values as your initial conditions.  By plugging those values, you calculate that the initial rates of change are\r\n\\begin{align*}\r\n  \\diff{r}{t}\\bigg|_{t=0} &=  3000 - 0.01 (3000)(70)=900\\notag\\\\\r\n  \\diff{p}{t}\\bigg|_{t=0} &= - 0.5(70) + 0.0005 (3000)(70)= 70.\r\n\\end{align*}\r\nOh no, $\\diff{r}{t}$ is positive.  This means the change in the number of rabbits is positive: the rabbit population is still growing!  Aren't the foxes doing their job?  It looks like 70 foxes isn't enough to keep the rabbits in check.  But, the fact that the fox population is growing at a healthy rate is promising.  Once the fox population gets larger, you hope they'll start to bring down the rabbit population.</p>\r\n\r\n<p>You realize it would be too difficult to estimate this evolution yourself, using an algorithm like the Forward Euler algorithm. You doubt you could do all the required calculations accurately yourself (and you don't feel like spending all day crunching numbers) and decide to hire a computer programmer to create a tool to let you see the solution to the differential equations.  You figure the programmer will be worth the expense, as such a tool will also be useful in persuading others that you have a good solution.</p>\r\n\r\n<p>The programmer scoffs at your suggestion of using of the Forward Euler algorithm.  Why are you using an algorithm from the 1700's, he asks, when you can at least get into the 1900's with the {% extlink \"http://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods\" %}Runge-Kutta algorithm{%endextlink%}?  You have no idea what he is talking about, but you like the solution he made for you,  which is shown in the following applet.</p>  \r\n\r\n<p>Use the applet to investigate what happens to the rabbits and foxes when you use the above parameters and start with 3000 rabbits and 70 foxes.  Describe the behavior of the system as time evolves.  Using the model equation, explain why this occurs.  Does this make sense for the biological system?  Do you expect the evolution of the rabbit and fox populations to have this type of behavior?</p>\r\n\r\n<div class=\"info\">\r\n<p>Since the applet is slow to load, we just include a link here.</p>\r\n<ul>\r\n<li>\r\n{% intlink \"lotka_volterra_phase_plane_versus_time_population_display\" class=\"applet\" %}{% endintlink %}</li>\r\n</ul>\r\n</div>\r\n\r\n<p>You find the oscillatory behavior of the solution to your system of equations a bit surprising.  You wonder if maybe the result was just a strange coincidence given that you started with 3000 rabbits and 70 foxes.  If you try different initial conditions, do you get similar behavior?  Does the solution still oscillate? </p>\r\n\r\n<p>Maybe the oscillations are just an artifact of the value of the four parameters that you chose.  Change the parameters $(\\alpha$, $\\beta$, $\\gamma$, and $\\delta$) by small amounts, and see if the behavior of the system is roughly similar or has dramatically different behavior.</p>\r\n\r\n<p>Not only does the above applet show the plots of $r$ and $p$ versus time, but it also shows a representation of the state $(r,p)$ of the system as a phase plane plot of $p$ versus $r$.  In the phase plane, the oscillation looks like loop.  The phase plane visualization helps you better see how the oscillations work and what controls the size of the oscillations.  By dragging the initial condition point $(r(0),p(0))$ around the phase plane, you can see how the initial conditions influence the oscillations.  What initial conditions lead to the largest oscillations in the population sizes?  What initial conditions lead to the smallest oscillations?  Can you find an initial condition where the oscillations are essentially eliminated (using the original parameters $\\alpha=1$, $\\beta=0.01$, $\\gamma=0.5$, and $\\delta=0.0005$)?</p>\r\n\r\n\r\n\r\n{% navigation_tag \"equilibria\" \"Solving\" \"Equilibria\" %}\r\n<h5>Equilibria</h5>\r\n\r\n<p>As always, equilibria are an important feature of a dynamical system and can be used to understand the behavior of the system.  For the two-dimensional system \\eqref{system_with_parameters}, an equilibrium is a point $(r_e, p_e)$ in the phase plane where both derivatives $\\diff{r}{t}$ and $\\diff{p}{t}$ are zero.  If you start with an initial condition that is an equilibrium, the system will stay at the value forever.</p>\r\n\r\n<p>Show that the system \\eqref{system_with_parameters} has the trivial equilibrium $(0,0)$ with no rabbits or foxes.  You just need to plug in $(r,p)=(0,0)$ into the right hand sides for $\\diff{r}{t}$ and $\\diff{p}{t}$ to show you get zero for both derivatives.  This makes sense, as we shouldn't get rabbits or foxes materializing out of nowhere.</p>\r\n\r\n<p>Is there another equilibrium to the system?  When you were exploring the behavior of the system for different initial conditions in the phase plane, did you find a point where the oscillations are essentially eliminated?  If you found a point where the system did not change at all, then you found an equilibrium.  You should be able to get an idea of its value by exploring the phase plane.  From that, you may be able to guess what are the values of $r$ and $p$ at the non-zero equilibrium.</p>\r\n\r\n<p>You can also calculate the equilibria analytically from the equations \\eqref{system_with_parameters}.  If you set both $\\diff{r}{t}$ and $\\diff{p}{t}=0$, you obtain a system of two equations and two unknowns:\r\n\\begin{align*}\r\n   r - 0.01 r p &=0\\\\\r\n  - 0.5 p + 0.0005 rp &=0.\r\n\\end{align*}\r\nAt an equilibrium, both equations have to be zero.  To find the equilibrium points, you can easily factor both equations.  You should be able to find two equilibria, confirming the results that you obtained when you were exploring the phase plane.</p>\r\n\r\n<p>Are the equilibria stable or unstable?  If you start with any initial condition close to the equilibrium, does the solution stay close to that equilibrium or even converge to the equilibrium?  In that case, it is stable.  Can you find an initial condition close to the equilibrium for which the solution diverges away from the equilibrium?  In that case, the equilibrium is unstable.  Classify both equilibria as stable or unstable.</p>\r\n\r\n<p>For the trivial equilibrium (0,0), we know that if we start without any rabbits, the system will evolve toward to the equilibrium.  However, that is not enough to state that the equilibrium is stable.  If you can find any other initial conditions close to (0,0) from which the solution moves away from (0,0), that's enough to conclude that the equilibrium is unstable.</p>\r\n\r\n\r\n{% navigation_tag \"stupidity\" \"Stupidity\" %}\r\n<h4>Model stupidity</h4>\r\n\r\n<p>What does the model predict will happen if you introduced only two foxes rather than 70?  Look closely at the values of $r(t)$ after the rabbit population size is brought down from its initial peak.  Does that value make any sense?  Or, more importantly, does it make sense that the rabbit population eventually recovers from that value to shoot upward again?  What should have happened to the rabbit population if it got that low?  Also, does it make any sense that the fox population survives for many years on so few rabbits?  (The model isn't suppose to be including other food sources for the foxes.)  If you want people to believe your model, you probably shouldn't focus on such initial conditions.</p>\r\n\r\n{% navigation_tag \"conclusion\" \"Conclusion\" %}\r\n<h4>Conclusion</h4>\r\n\r\n<p>What can you conclude from your model analysis?  Can you make a convincing case that introducing foxes to Foxless Island will help control the rabbit population?  Even if it doesn't show that one will get good results in all cases, can you use the model to develop a strategy that will lead to a more or less stable population of around a thousand rabbits?</p>\r\n\r\n<p>If we estimate that Foxless Island currently has around 3000 rabbits, can you get to a more or less stable population of a thousand rabbits just by introducing an appropriate number of foxes?  In other words, if you set the initial condition for rabbits to be $r(0)=3000$, can you find a solution (by changing the number of foxes $f(0)$ introduced) where $r(t)$ eventually stays close to 1000?</p>\r\n\r\n<p>Can you improve your result if you help the foxes out by initially harvesting some rabbits yourself?  In other words, if you lower the initial condition $r(0)=3000$ to a smaller number, can you find a solution (by changing the number of foxes $f(0)$ introduced) where $r(t)$ eventually stays close to 1000?</p>\r\n\r\n<p>Does the model help you address the two objections that you envisioned people making?  Why or why not?</p>\r\n\r\n\r\n{% navigation_tag \"project\" \"Project\" %}\r\n<h4>Project</h4>\r\n\r\n<p>The {% intlink \"introducing_rabbit_predators_project\" class=\"assessment\" %}introducing rabbit predators project page{%endintlink%} gives instructions for writing up a project report based on this analysis.</p>\r\n", "code": "introducing_rabbit_predators", "date_created": "2012-11-29", "detailed_description": null, "related_videos": [], "keywords": [], "date_modified": "2015-04-21T10:46:11Z", "publish_date": "2012-11-29", "description": "Exploring the interactions between fox and rabbit populations when foxes are introduced to an exploding population of rabbits.", "javascript": null, "objectives": [], "notation_systems": [], "subjects": [], "author_copyright": true, "highlight": false, "title": "Introducing rabbit predators", "additional_credits": "", "notes": ""}, "pk": 381}, {"model": "midocs.page", "fields": {"hidden": false, "header": null, "page_type": 1, "text": "{% navigation_tag \"video_introduction\" \"Video introduction\" %}\n<h4>Video introduction</h4>\n{% boxedvideo \"quotient_rule_differentiation\" %}\n\n{% navigation_tag \"summary\" \"Summary\" %}\n<h4>Summary</h4>\n\n<p>The quotient rule for differentiation follows directly from the {% intlink \"product_rule_idea\" %}product rule{%endintlink%} with just a few manipulations.  Let $f$ be the quotient of $g$ and $h$,\n\\begin{align*}\nf(x) = \\frac{g(x)}{h(x)},\n\\end{align*}\nwhere $h(x) \\ne 0$.  We want a formula for $f'(x)$ in terms of $g$, $h$, and their derivatives.  We can find a relationship among $f$, $g$, $h$, and their derivatives by multiplying through by $h$\n\\begin{align*}\nf(x)h(x) = g(x)\n\\end{align*}\nand then applying the {% intlink \"product_rule_idea\" %}product rule{%endintlink%}\n\\begin{align*}\nf'(x)h(x) + f(x)h'(x) = g'(x)\n\\end{align*}\nto get the derivative of $g$ in terms of $f$, $h$, and their derivatives.  We subtract $f(x)h'(x)$ and divide by $h(x)$ to solve for $f'(x)$,\n\\begin{align*}\nf'(x)= \\frac{g'(x) -f(x)h'(x)}{h(x)}.\n\\end{align*}\n</p>\n\n<p>We are getting closer, but we want a formula for $f'$ just in terms of $g$, $h$, and their derivatives.  We can get rid of the $f(x)$ on the right hand side by substituting the definition $f(x)=g(x)/h(x)$,\n\\begin{align*}\nf'(x)= \\frac{g'(x) -\\frac{g(x)}{h(x)}h'(x)}{h(x)},\n\\end{align*}\nand eliminate the fraction in the numerator by multiplying numerator and denominator by $h(x)$,\n\\begin{align*}\nf'(x)= \\frac{h(x)g'(x) -g(x)h'(x)}{[h(x)]^2}.\n\\end{align*}\nWe have derived the quotient rule for the differentiation.\nWe could rewrite it explicitly as the derivative of a quotient,\n\\begin{align}\n\\left(\\frac{g(x)}{h(x)}\\right)'= \\frac{h(x)g'(x) -g(x)h'(x)}{[h(x)]^2}\n  \\label{quotient_rule1}\n\\end{align}\nor\n\\begin{align}\n\\diff{}{x}\\left(\\frac{g}{h}\\right)= \\frac{h\\diff{g}{x} -g\\diff{h}{x}}{h^2}.\n  \\label{quotient_rule2}\n\\end{align}", "code": "quotient_rule_differentiation", "date_created": "2013-03-02", "detailed_description": null, "related_videos": [], "keywords": [27, 92, 94, 147], "date_modified": "2015-04-21T10:46:41Z", "publish_date": "2013-03-02", "description": "The quotient rule is derived from the product rule for differentiation.", "javascript": null, "objectives": [], "notation_systems": [], "subjects": [9], "author_copyright": true, "highlight": false, "title": "The quotient rule for differentiation", "additional_credits": "", "notes": ""}, "pk": 400}, {"model": "midocs.page", "fields": {"hidden": false, "header": null, "page_type": 1, "text": "{% boxedvideo \"maximization_minimization\" %}", "code": "maximization_minimization", "date_created": "2013-03-28", "detailed_description": null, "related_videos": [], "keywords": [65, 95, 96], "date_modified": "2015-04-21T10:46:23Z", "publish_date": "2013-03-28", "description": "How to calculate the maxima and minima of a differentiable function.", "javascript": null, "objectives": [], "notation_systems": [], "subjects": [9], "author_copyright": true, "highlight": false, "title": "Maximization and minimization", "additional_credits": "", "notes": ""}, "pk": 406}, {"model": "midocs.page", "fields": {"hidden": false, "header": null, "page_type": 1, "text": "{% navigation_tag \"video\" \"Video\" %}\r\n<h4>Video</h4>\r\n\r\n{% boxedvideo \"model_infectious_disease_without_immunity\" %}\r\n\r\n\r\n{% boxedvideo \"model_infectious_disease_without_immunity_analysis\" %}\r\n\r\n{% boxedapplet \"sis_infectious_disease_model\" %}", "code": "model_infectious_disease_without_immunity", "date_created": "2013-04-19", "detailed_description": null, "related_videos": [], "keywords": [], "date_modified": "2015-04-21T10:46:25Z", "publish_date": "2013-04-19", "description": "", "javascript": null, "objectives": [], "notation_systems": [], "subjects": [], "author_copyright": true, "highlight": false, "title": "Model of an infectious disease without immunity", "additional_credits": "", "notes": ""}, "pk": 415}, {"model": "midocs.page", "fields": {"hidden": false, "header": null, "page_type": 1, "text": "{% boxedvideo \"simple_spiking_neuron_model_biological_background\" %}\r\n\r\n{% boxedvideo \"simple_spiking_neuron_model_sodium_channels_alone\" %}\r\n\r\n{% boxedapplet \"neuron_model_sodium_channels\" %}\r\n\r\n{% boxedvideo \"simple_spiking_neuron_model_sodium_potassium_channels\" %}\r\n\r\n{% intlink \"fitzhugh_nagumo_neuron_model_versus_time_phase_plane\" class=\"applet\" %}An applet demonstrating the neuron model with sodium and potassium channels{%endintlink%}", "code": "simple_spiking_neuron_model", "date_created": "2013-05-02", "detailed_description": null, "related_videos": [], "keywords": [152, 67, 125, 151], "date_modified": "2015-04-21T10:46:46Z", "publish_date": "2013-05-02", "description": "An introduction to the Fitzhugh Nagumo model of a spiking neuron, including basic phase plane analysis.", "javascript": null, "objectives": [], "notation_systems": [], "subjects": [7, 10, 11], "author_copyright": true, "highlight": false, "title": "A simple spiking neuron model", "additional_credits": "", "notes": ""}, "pk": 419}, {"model": "midocs.page", "fields": {"hidden": false, "header": "<style>\r\n.axis path,\r\n.axis line {\r\n    fill: none;\r\n    stroke: black;\r\n    shape-rendering: crispEdges;\r\n    stroke-width: 2;\r\n}\r\n\r\n.axis text {\r\n    font-family: sans-serif;\r\n    font-size: 20px;\r\n}\r\n\r\n.reveal .graphtitle {\r\n  font-size: 25px;\r\n  text-align: center;\r\n  margin-bottom: -0.5em;\r\n}\r\n\r\n.reveal table.blank th, .reveal table.blank td {\r\n  border-bottom: none; }\r\n\r\n.reveal table.centertext th, .reveal table.centertext td {\r\n  text-align: center;\r\n}\r\n\r\n</style>\r\n", "page_type": 4, "text": "<section style=\"margin-top: -20px;\">\r\n<h3>Graphical solution to pure-time differential equations</h3>\r\n\r\n<div class=\"ym-grid\">\r\n<div class=\"ym-g33 ym-gl\"><div class=\"ym-gbox-left\">\r\n<p style=\"margin-top: 70px;\">Recall facts about derivative</p></div></div>\r\n<div class=\"ym-g66 ym-gr\"><div class=\"ym-gbox-right\">\r\n<table>\r\n<tr><th style=\"width: 380px\">Sign of derivative</th><th style=\"width: 380px\">Behavior of function</th></tr>\r\n<tr class=\"fragment\" data-fragment-index=\"1\" id=\"fragment1\"><td><span class=\"fragment highlight-current-blue\" data-fragment-index=\"1\">Derivative positive</span></td><td><span class=\"fragment highlight-current-blue\" data-fragment-index=\"1\">Function increasing</span></td></tr>\r\n<tr class=\"fragment\" data-fragment-index=\"2\" id=\"fragment2\"><td><span class=\"fragment highlight-current-blue\" data-fragment-index=\"2\">Derivative negative</span></td><td><span class=\"fragment highlight-current-blue\" data-fragment-index=\"2\">Function decreasing</span></td></tr>\r\n<tr class=\"fragment\" data-fragment-index=\"3\" id=\"fragment3\"><td><span class=\"fragment highlight-current-blue\" data-fragment-index=\"3\">Derivative zero</span></td><td><span class=\"fragment highlight-current-blue\" data-fragment-index=\"3\">Function constant</span></td></tr>\r\n</table>\r\n</div></div>\r\n</div>\r\n\r\n<table class=\"blank fragment\"  data-fragment-index=\"1\" style=\"margin-top: 0.5em;\">\r\n<tr><td rowspan=\"2\"><br/><p class=\"fragment\" data-fragment-index=\"4\" id=\"fragment4\">How do we do this in general?<br/ style=\"margin-bottom: 1em;\">How to determine $\\smash{f(x)}$<br/> from graph of $\\smash{f'(x)}$?</p></td><td><div class=\"graphtitle\">$f'(x)$</div></td><td><div class=\"graphtitle\">$f(x)$</div></td></tr>\r\n<tr><td><svg id=\"derivgraph\"></svg></td><td><svg id=\"functiongraph\"></svg></td></tr>\r\n</table>\r\n\r\n</section>\r\n\r\n\r\n\r\n<section style=\"margin-top: -20px;\">\r\n<p>Use derivative facts to sketch solution of pure-time differential equation</p>\r\n\r\n<table class=\"blank\">\r\n<tr><td style=\"width: 350px; text-align: right;\" class=\"fragment\" data-fragment-index=\"24\" id=\"fragment24\" >\r\n<span class=\"fragment fade-out\" data-fragment-index=\"25\" id=\"fragment25\">\r\n<svg width=\"68\" height=\"24\" style=\"margin-top: 0px; margin-bottom: -30px;\">\r\n  <defs>\r\n    <marker refX=\"0\" refY=\"0\" orient=\"auto\" id=\"Arrow1Mend\" style=\"overflow:visible\">\r\n      <path d=\"M 0,0 5,-5 -12.5,0 5,5 0,0 z\"\r\n         transform=\"matrix(-0.4,0,0,-0.4,-4,0)\"\r\n         style=\"fill:red;fill-rule:evenodd;stroke:red;stroke-width:1pt\" />\r\n    </marker>\r\n  </defs>\r\n  <g>\r\n    <path d=\"m 0,12 60,0\"\r\n       style=\"fill:none;stroke:red;stroke-width:5;marker-end:url(#Arrow1Mend)\" />\r\n  </g>\r\n</svg>\r\n</span></td>\r\n<td>\\begin{align*}\r\n  y'(t) &= 0.5t-3\\\\\r\n y(0) &= 4\r\n\\end{align*}\r\n</td>\r\n<td style=\"width: 350px; vertical-align: bottom;\"><span class=\"fragment\" data-fragment-index=\"20\">(Initial condition)</span></td>\r\n</tr>\r\n</table>\r\n\r\n<table class=\"blank fragment\"  data-fragment-index=\"21\" style=\"margin-top: 0.5em; margin-bottom: -0.5em;\" id=\"fragment21\">\r\n<tr><td rowspan=\"2\" style=\"padding: 0\"><p>Sketch graph of $y'(t)$.</p>\r\n<p class=\"fragment\" data-fragment-index=\"22\" id =\"fragment22\">When $t=0$, what is sign of $y'(t)$?  <span class=\"fragment\" data-fragment-index=\"23\" id=\"fragment23\">Negative.</span></p>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"23\">$y(t)$ decreases at $t=0$.</p>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"25\" >As $t \\uparrow$ , $y'(t) \\to 0$.<br/>$\\Rightarrow$ graph of $y(t)$ flattens. </p>\r\n\r\n</td><td><div class=\"graphtitle\">$y'(t)$</div></td><td><div class=\"graphtitle\">$y(t)$</div></td></tr>\r\n<tr><td style=\"padding: 0\"><svg id=\"ex1grapha\"></svg></td><td style=\"padding:0\"><svg id=\"ex1graphb\"></svg></td></tr>\r\n</table>\r\n\r\n\r\n<p class=\"fragment\" data-fragment-index=\"26\" id=\"fragment26\" style=\"text-align: left;\">$y'(6)=0 \\Rightarrow$ graph of $y(t)$ is horizontal at $t=6$. </p>\r\n<div class=\"ym-grid\">\r\n<div class=\"ym-g50 ym-gl\"><div class=\"ym-gbox-left fragment \" style=\"text-align: left;\" data-fragment-index=\"27\" id=\"fragment27\">\r\nFor $t>6$, $y'(t)>0 \\Rightarrow$ $y(t)$ increases.\r\n</div></div>\r\n<div class=\"ym-g50 ym-gr\"><div class=\"ym-gbox-right fragment\" style=\"text-align: right;\" data-fragment-index=\"28\" id=\"fragment28\">\r\nGraph of $y(t)$ represents solution.<svg width=\"50\" height=\"34\" viewbox=\"0 0 192 133\">\r\n  <g><path d=\"M 10,61 42,117 182,10\" style=\"fill:none;stroke:#29cb2a;stroke-width:20;stroke-linecap:round;\" /></g>\r\n</svg>\r\n</div></div></div>\r\n\r\n</section>\r\n\r\n\r\n\r\n<section style=\"margin-top: -20px;\">\r\n<p>Second example: Solve the pure-time differential equation  </p>\r\n\r\n<div style=\"margin-bottom: 40px;\">\r\n<table>\r\n<tr><td style=\"width: 40%\">{% applet_object \"equationText\" applet=\"pure_time_differential_equation_graphical_example\" math=\"display\" %}</td>\r\n<td style=\"vertical-align:top;\"><p style=\"margin-top: 15px;\">where $f(t)$ is plotted below.</p></td></tr>\r\n</table>\r\n</div>\r\n\r\n<div style=\"float: right; padding-left: 20px; margin-bottom:-10px; margin-top:-10px\">{% applet \"pure_time_differential_equation_graphical_example\" iframe=1 showstep=1 step=1 showstep=0 y0=2 height=400 width=600 %}</div>\r\n\r\n<div style=\"text-align: left\">\r\n<p class=\"fragment\" data-fragment-index=\"31\" id=\"fragment31\">Step 1: Find $t$ where $f(t)=0$. </p>\r\n<div class=\"fragment no-space-out\" data-fragment-index=\"34\" id=\"fragment34\"><p class=\"fragment\" data-fragment-index=\"32\" id=\"fragment32\">$f(t)=0$ when $t=1, 3, 6$</p>\r\n<p class=\"fragment\" data-fragment-index=\"33\" id=\"fragment33\">The graph of $y(t)$ must be horizontal at these points.</p>\r\n</div>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"34\">Step 2: Determine sign of $f(t)$ in between.</p>\r\n\r\n<div class=\"fragment\" data-fragment-index=\"35\" id=\"fragment35\"><div class=\"fragment no-space-out\" data-fragment-index=\"36\" id=\"fragment36\">\r\n<ul>\r\n<li>$f(t) \\lt 0$ for $t \\lt 1$</li>\r\n<li>$f(t) \\gt 0$ for $1 \\lt t \\lt 3$</li>\r\n<li>$f(t) \\lt 0$ for $3 \\lt t \\lt 6$</li>\r\n<li>$f(t) \\gt 0$ for $t \\gt 6$</li>\r\n</ul>\r\n</div>\r\n</div>\r\n\r\n<div class=\"fragment no-space\" data-fragment-index=\"36\"><p>Step 3: Start at initial condition.</p>\r\n<span class=\"fragment no-space\" data-fragment-index=\"37\" id=\"fragment37\">Step 4: Sketch solution that moves in the correct directions.</p>\r\n<div class=\"fragment no-space\" data-fragment-index=\"38\" id=\"fragment38\" style=\"clear: both; margin-top: 40px;\"><p>(If change initial condition, graph just shifts up or down.)</div>\r\n\r\n</div>\r\n</section>\r\n\r\n", "code": "pure_time_differential_equation_graphical", "date_created": "2015-04-21", "detailed_description": "", "related_videos": [], "keywords": [], "date_modified": "2015-07-25T00:57:22Z", "publish_date": "2015-04-21", "description": "", "javascript": "", "objectives": [], "notation_systems": [], "subjects": [], "author_copyright": true, "highlight": false, "title": "Graphical solution of pure-time differential equations", "additional_credits": "", "notes": ""}, "pk": 439}, {"model": "midocs.page", "fields": {"hidden": false, "header": "<style>\r\n.axis path,\r\n.axis line {\r\n    fill: none;\r\n    stroke: black;\r\n    shape-rendering: crispEdges;\r\n    stroke-width: 2;\r\n}\r\n\r\n.axis text {\r\n    font-family: sans-serif;\r\n    font-size: 20px;\r\n}\r\n\r\n.reveal .graphtitle {\r\n  font-size: 25px;\r\n  text-align: center;\r\n  margin-bottom: -0.5em;\r\n}\r\n\r\n\r\n</style>\r\n", "page_type": 4, "text": "<section style=\"margin-top: -20px; text-align: left;\">\r\n<h3 style=\"text-align: center;\">Solving pure-time differential equations with the Forward-Euler algorithm</h3>\r\n\\begin{align*}\r\n   x'(t) &= t^3 -5t - 2\\\\\r\n   x(0) &=10\r\n\\end{align*}\r\n\r\n<div class=\"ym-grid\">\r\n<div class=\"ym-g60 ym-gl\"><div class=\"ym-gbox-left\">\r\n<p>Goal: estimate the solution $x(t)$.</p>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"1\">What is the initial slope of the function $x(t)$?<br/>\r\n <span class=\"fragment\" data-fragment-index=\"2\">$x'(0) = (0)^3-5(0)-2 = -2$</span></p>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"3\">If pretend slope didn't change, would get linear approximation:\r\n<span class=\"fragment no-space-out\" data-fragment-index=\"4\">$L_0(t) = x(0) + x'(0)t = 10 -2t$.</span>\r\n<span class=\"fragment\" data-fragment-index=\"4\">$L_\\color{red}{0}(t) = x(\\color{red}{0}) + x'(\\color{red}{0})t = 10 -2t$.</span></p>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"6\">Solution $L_0(t)$ fine if $x'(t)=-2$ always.</p>\r\n\r\n</div></div>\r\n<div class=\"ym-g40 ym-gr\"><div class=\"ym-gbox-right fragment\" data-fragment-index=\"5\" id=\"fragment5\">\r\n<svg id=\"fesketch1\"></svg>\r\n</div></div>\r\n</div>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"7\" id=\"fragment7\" style=\"margin-top: -20px;\">But $x'(t)$ changes with time.  <span class=\"fragment\" data-fragment-index=\"8\" id=\"fragment8\">$L_0(t)$ is OK only for a short time.</span></p>\r\n\r\n</section>\r\n\r\n\r\n\r\n\r\n<section style=\"margin-top: -20px; text-align: left;\">\r\n<div class=\"ym-grid\">\r\n<div class=\"ym-g60 ym-gl\"><div class=\"ym-gbox-left\">\r\n\\begin{align*}\r\n   x'(t) &= t^3-5t-2\\\\\r\n    x(0) &= 10\r\n\\end{align*}\r\n\r\n<p>$L_0(t) = 10-2t$ &nbsp;&nbsp;(OK for $t$ near zero.)</p>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"21\">Forward Euler: use $L_0(t)$ for time interval $\\Delta t$.<br/>\r\nThen find new linear approximation.</p>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"22\" id=\"fragment22\">Choose $\\Delta t = 1$.</p>\r\n<p class=\"fragment\" data-fragment-index=\"23\" id=\"fragment23\">Approximate $x(1) \\approx L_0(1)=10-2(1)=8$.</p>\r\n\r\n</div></div>\r\n\r\n<div class=\"ym-g40 ym-gr\"><div class=\"ym-gbox-right\" style=\"text-align: right;\">\r\n<svg id=\"fesketch2\"></svg>\r\n</div></div>\r\n</div>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"24\" id=\"fragment24\">Repeat.  Linear approximation at $t=1$:\r\n$L_\\color{\\red}{1}(t) = x(\\color{red}{1}) + x'(\\color{red}{1})(t-\\color{red}{1}) $</p>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"25\" id=\"fragment25\">Calculate $x'(1) = (1)^3-5(1)-2 = -6$</p>\r\n<p class=\"fragment\" data-fragment-index=\"26\" id=\"fragment26\">For $t > 1$, approximate $x(t) \\approx L_1(t) = 8-6(t-1)$</p>\r\n<div class=\"fragment\" data-fragment-index=\"27\" id=\"fragment27\"></div>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"28\" id=\"fragment28\">Approximate $x(2) \\approx L_1(2) = 8-6(2-1) = 2.$</p>\r\n\r\n</section>\r\n\r\n<section style=\"margin-top: -20px; text-align: left;\">\r\n<div class=\"ym-grid\">\r\n<div class=\"ym-g50 ym-gl\"><div class=\"ym-gbox-left\">\r\n\\begin{align*}\r\n   x'(t) &= t^3-5t-2\\\\\r\n    x(0) &= 10\r\n\\end{align*}\r\n\r\n<p>Summarize:</p>\r\n\r\n<p>$x(1) \\approx L_0(1) = x(0) + x'(0)(1-0) = 8$</p>\r\n<p>$x(2) \\approx L_1(2) = x(1) + x'(1)(2-1) = 2$</p>\r\n\r\n</div></div>\r\n\r\n<div class=\"ym-g50 ym-gr\"><div class=\"ym-gbox-right\" style=\"text-align: right;\">\r\n<svg id=\"fesketch3\"></svg>\r\n</div></div>\r\n</div>\r\n\r\n<div class=\"ym-grid\">\r\n<div class=\"ym-g50 ym-gl\"><div class=\"ym-gbox-left\">\r\n\r\n<p class=\"fragment\" data-fragment-index=\"31\">Continue: <br/>\r\n<span class=\"fragment\" data-fragment-index=\"32\" id=\"fragment32\">$L_2(t) = x(2) + x'(2)(t-2)$<br/>\r\n$x'(2) = (2)^3-5(2)-2 = $ <span class=\"fragment no-space-out\" data-fragment-index=\"33\" id=\"fragment33\">$-4$</span>\r\n<span class=\"fragment no-space\" data-fragment-index=\"33\">$\\color{red}{\\underline{\\color{black}{-4}}}$</span><br/>\r\n$L_2(t) = 2 - 4(t-2)$</span><br/>\r\n<span class=\"fragment\" data-fragment-index=\"34\" id=\"fragment34\"></span><span class=\"fragment\" data-fragment-index=\"35\" id=\"fragment35\">$x(3) \\approx L_2(3) = 2-4(3-2) = -2$</span></p>\r\n\r\n</div></div>\r\n\r\n<div class=\"ym-g50 ym-gr\"><div class=\"ym-gbox-right\">\r\n\r\n<p class=\"fragment\" data-fragment-index=\"36\">One more step: <br/>\r\n<span class=\"fragment\" data-fragment-index=\"37\" id=\"fragment37\">$L_3(t) = x(3) + x'(3)(t-3)$<br/>\r\n$x'(3) = (3)^3-5(3)-2 =$ <span class=\"fragment no-space-out\" data-fragment-index=\"38\" id=\"fragment38\">$10$</span>\r\n<span class=\"fragment no-space\" data-fragment-index=\"38\" >$\\color{red}{\\underline{\\color{black}{10}}}$</span><br/>\r\n$L_3(t) = -2 +10(t-3)$</span><br/>\r\n<span class=\"fragment\" data-fragment-index=\"39\" id=\"fragment39\"></span><span class=\"fragment\" data-fragment-index=\"40\" id=\"fragment40\">$x(4) \\approx L_3(4) = -2+10(4-3) = 8$</span></p>\r\n\r\n</div></div>\r\n</div>\r\n\r\n</section>\r\n\r\n\r\n\r\n\r\n\r\n<section style=\"margin-top: -20px; text-align: left;\">\r\n<div class=\"ym-grid\">\r\n<div class=\"ym-g50 ym-gl\"><div class=\"ym-gbox-left\">\r\n\\begin{align*}\r\n   x'(t) &= t^3-5t-2\\\\\r\n    x(0) &= 10\r\n\\end{align*}\r\n\r\n<p>Summarize:</p>\r\n<div class=\"fragment no-space-out\" data-fragment-index=\"41\">\r\n<p>$x(1) \\approx L_0(1) = x(0) + x'(0)(1-0) = 8$</p>\r\n<p>$x(2) \\approx L_1(2) = x(1) + x'(1)(2-1) = 2$</p>\r\n<p>$x(3) \\approx L_2(3) = x(2) + x'(2)(3-2) = -2$</p>\r\n<p>$x(4) \\approx L_3(4) = x(3) + x'(3)(4-3) = 8$</p>\r\n</div>\r\n\r\n<div class=\"fragment no-space\" data-fragment-index=\"41\"><div class=\"fragment no-space-out\" data-fragment-index=\"42\">\r\n<p>$x(1) \\approx x(0) + x'(0)(1-0)$</p>\r\n<p>$x(2) \\approx x(1) + x'(1)(2-1)$</p>\r\n<p>$x(3) \\approx x(2) + x'(2)(3-2)$</p>\r\n<p>$x(4) \\approx x(3) + x'(3)(4-3)$</p>\r\n</div></div>\r\n\r\n<div class=\"fragment no-space\" data-fragment-index=\"42\"><div class=\"fragment no-space-out\" data-fragment-index=\"44\">\r\n<p>$x(1) \\approx x(0) + x'(0)\\Delta t$</p>\r\n<p>$x(2) \\approx x(1) + x'(1)\\Delta t$</p>\r\n<p>$x(3) \\approx x(2) + x'(2)\\Delta t$</p>\r\n<p>$x(4) \\approx x(3) + x'(3)\\Delta t$</p>\r\n</div></div>\r\n\r\n<div class=\"fragment no-space\" data-fragment-index=\"44\">\r\n<p>$x(t_1) \\approx x(t_0) + x'(t_0)\\Delta t$</p>\r\n<p>$x(t_2) \\approx x(t_1) + x'(t_1)\\Delta t$</p>\r\n<p>$x(t_3) \\approx x(t_2) + x'(t_2)\\Delta t$</p>\r\n<p>$x(t_4) \\approx x(t_3) + x'(t_3)\\Delta t$</p>\r\n</div>\r\n\r\n<div class=\"fragment\" data-fragment-index=\"43\"><div class=\"fragment no-space-out\" data-fragment-index=\"45\">Define time points: <br/>\r\n\\begin{align*}\r\nt_0 &= 0\\Delta t= 0  & t_1 &=\\Delta t=1\\\\\r\nt_2&=2\\Delta t =2  &  t_3 &=3\\Delta t=3\\\\\r\nt_4&=4\\Delta t=4\r\n\\end{align*}\r\n</div></div>\r\n\r\n<div class=\"fragment\" data-fragment-index=\"45\">$t_0=0, ~t_1=\\Delta t, ~t_2=\\Delta t, ~t_3=3\\Delta t, \\ldots$</div>\r\n\r\n<div class=\"fragment\" data-fragment-index=\"46\" style=\"margin-top: 60px\">\r\nForward Euler formula<br/>\r\n$x(t_{i+1}) \\approx x(t_i) + x'(t_i)\\Delta t$\r\n<div style=\"text-align: right; margin-right: 40px; margin-top: 10px;\">for $i=0,1,2, \\ldots$</div>\r\n\r\n</div>\r\n\r\n</div></div>\r\n\r\n<div class=\"ym-g50 ym-gr\"><div class=\"ym-gbox-right\" style=\"text-align: right\">\r\n<svg id=\"fesketch4\"></svg>\r\n\r\n<div class=\"fragment\" data-fragment-index=\"47\" style=\"border: solid; text-align: center; padding: 20px; margin-left: 10px; margin-top: 50px;\">\r\n<b>Idea of Forward Euler Algorithm</b>\r\n<ol>\r\n<li>Calculate slope from differential equation.</li>\r\n<li>Take step of size $\\Delta t$ with slope.</li>\r\n<li>Repeat.</li>\r\n</ol>\r\n<div>\r\n\r\n</div></div>\r\n</div>\r\n\r\n\r\n</section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<section style=\"margin-top: -20px; text-align: left;\">\r\n<div class=\"ym-grid\" style=\"margin-bottom: -10px;\" >\r\n<div class=\"ym-g60 ym-gl\"><div class=\"ym-gbox-left\">\r\n\\begin{align*}\r\n   x'(t) &= t^3-5t-2\\\\\r\n    x(0) &= 10\r\n\\end{align*}\r\n\r\n<p style=\"margin-top: 50px;\">Forward Euler formula<br/>\r\n$x(t_{i+1}) \\approx x(t_i) + x'(t_i)\\Delta t$ &nbsp;&nbsp;&nbsp;&nbsp;for $i=0,1,2, \\ldots$</p>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"51\">Is our Forward Euler solution accurate?<br/>\r\n<span class=\"fragment\" data-fragment-index=\"52\">How improve it?</span>  <span class=\"fragment\" data-fragment-index=\"53\">Smaller time step $\\Delta t$.</span></p>\r\n\r\n<p class=\"fragment\" data-fragment-index=\"54\">Try $\\Delta t = 0.5$.  Twice as many steps.</p>\r\n\r\n</div></div>\r\n\r\n<div class=\"ym-g40 ym-gr\"><div class=\"ym-gbox-right\" style=\"text-align: right\">\r\n<svg id=\"fesketch5\"></svg>\r\n\r\n\r\n</div></div>\r\n</div>\r\n\r\n\r\n<div class=\"ym-grid fragment\" data-fragment-index=\"55\">\r\n<div class=\"ym-g60 ym-gl\"><div class=\"ym-gbox-left\" style=\"font-size: 70%\">\r\n<p>$x'(0)=-2 \\Rightarrow x(0.5) \\approx 10 -2 \\cdot 0.5=9$<br/>\r\n$x'(0.5) = -4.375 \\Rightarrow x(1) \\approx 9 - 4.375(0.5) = 6.8125$<br/>\r\n$x'(1) = -6 \\Rightarrow x(1.5) \\approx 6.8125 - 6(0.5) = 3.8125$<br/>\r\n$x'(1.5) = -6.125 \\Rightarrow x(2) \\approx 3.8125 - 6.125(0.5) = 0.75$<br/>\r\n$x'(2) = -4 \\Rightarrow x(2.5) \\approx 0.75 - 4(0.5) = -1.25$<br/>\r\n$x'(2.5) = 1.125 \\Rightarrow x(3) \\approx -1.25 + 1.125(0.5) = -0.6875$<br/>\r\n$x'(3) = 10 \\Rightarrow x(3.5) \\approx -0.6875 + 10(0.5) = 4.3125$<br/>\r\n$x'(3.5) = 23.375 \\Rightarrow x(4) \\approx 4.3125 + 23.375(0.5) = 16$\r\n</div></div>\r\n\r\n\r\n<div class=\"fragment\" data-fragment-index=\"56\" id=\"fragment56\"></div>\r\n<div class=\"fragment\" data-fragment-index=\"57\" id=\"fragment57\"></div>\r\n<div class=\"fragment\" data-fragment-index=\"59\" id=\"fragment59\"></div>\r\n<div class=\"fragment\" data-fragment-index=\"61\" id=\"fragment61\"></div>\r\n<div class=\"fragment\" data-fragment-index=\"62\" id=\"fragment62\"></div>\r\n<div class=\"fragment\" data-fragment-index=\"63\" id=\"fragment63\"></div>\r\n<div class=\"fragment\" data-fragment-index=\"64\" id=\"fragment64\"></div>\r\n<div class=\"fragment\" data-fragment-index=\"65\" id=\"fragment65\"></div>\r\n<div class=\"fragment\" data-fragment-index=\"66\" id=\"fragment66\"></div>\r\n\r\n<div class=\"ym-g40 ym-gr\"><div class=\"ym-gbox-right fragment\" data-fragment-index=\"67\">\r\n<p>$\\Delta t=0.5$: more accurate<br/>\r\n &bull; adjusts direction more often</p>\r\n\r\n<p>But twice as much work.</p>\r\n<p class=\"fragment\" data-fragment-index=\"68\">Computer program: smaller $\\Delta t$.<br/>\r\n<span class=\"fragment\" data-fragment-index=\"69\" id=\"fragment69\">For example: $\\Delta t = \\frac{1}{4}$ <span class=\"fragment\" data-fragment-index=\"70\" id=\"fragment70\">, &nbsp; $\\Delta t=\\frac{1}{8}$</span></span><span class=\"fragment\" data-fragment-index=\"71\" id=\"fragment71\"></span>\r\n</div></div>\r\n</div>\r\n\r\n</p>\r\n</section>\r\n", "code": "pure_time_differential_equation_forward_euler", "date_created": "2015-05-18", "detailed_description": "", "related_videos": [], "keywords": [], "date_modified": "2015-07-25T00:56:55Z", "publish_date": "2015-05-18", "description": "", "javascript": "", "objectives": [], "notation_systems": [], "subjects": [], "author_copyright": true, "highlight": false, "title": "Solving pure-time differential equations with the Forward-Euler algorithm", "additional_credits": "", "notes": ""}, "pk": 440}, {"model": "midocs.pagetype", "fields": {"name": "Content", "default": true, "code": "content"}, "pk": 1}, {"model": "midocs.pagetype", "fields": {"name": "A simple definition of a term.", "default": false, "code": "definition"}, "pk": 3}, {"model": "midocs.pagetype", "fields": {"name": "Slides", "default": false, "code": "slides"}, "pk": 4}, {"model": "midocs.image", "fields": {"hidden": false, "thumbnail_height": 148, "thumbnail_width": 200, "code": "penicillin_concentration_versus_time_2_g_bolus", "keywords": [], "original_file": "image/source/penicillin_concentration_versus_time_2_g_bolus.ggb", "auxiliary_files": [], "width": 421, "subjects": [], "thumbnail": "image/thumbnail/penicillin_concentration_versus_time_2_g_bolus.png", "imagefile": "image/image/penicillin_concentration_versus_time_2_g_bolus.png", "date_created": "2012-08-03", "date_modified": "2015-04-21T10:47:11Z", "publish_date": "2012-08-03", "original_file_type": 2, "description": "Graph of how the penicillin concentration in the blood plasma decays after a 2 g bolus injection.", "notation_specific": false, "height": 311, "author_copyright": true, "in_pages": [329], "title": "Penicillin concentration versus time", "additional_credits": "<p>This page is based on <a href=\"http://cornette.public.iastate.edu/CLS.html\" class=\"external\">Calculus for the Life Sciences: A Modeling Approach</a> by James L. Cornette and Ralph A. Ackerman.  Modified under terms of a <a href=\"http://creativecommons.org/licenses/by-nc-sa/3.0/\" class=\"external\">Creative Commons Attribution-Noncommercial-ShareAlike 3.0 License.</a></p>", "detailed_description": "<p>This graph shows data for serum penicillin concentrations at 5 minute intervals for the 20 minutes following a <a href=\"http://en.wikipedia.org/wiki/Bolus_%28medicine%29\" class=\"external\">bolus</a> injection (a one-time injection) of 2 g into the serum of &ldquo;five healthy young volunteers&rdquo; (read &ldquo;medical students&rdquo;) taken from T. Bergans, Penicillins, in <em>Antibiotics and Chemotherapy</em>, Vol 25, H. Sch"}, "pk": 202}, {"model": "midocs.image", "fields": {"hidden": false, "thumbnail_height": 128, "thumbnail_width": 192, "code": "spruce_budworm", "keywords": [], "original_file": "", "auxiliary_files": [], "width": 768, "subjects": [], "thumbnail": "image/thumbnail/spruce_budworm.jpg", "imagefile": "image/image/spruce_budworm.jpg", "date_created": "2012-11-15", "date_modified": "2015-04-21T10:47:12Z", "publish_date": "2012-11-15", "original_file_type": null, "description": "Spruce budworm, <i>Choristoneura fumiferana</i>, adult and pupa.", "notation_specific": false, "height": 512, "author_copyright": false, "in_pages": [374], "title": "Spruce budworm", "additional_credits": "<p>This image is by the  <a href=\"http://www.forestryimages.org/browse/orgimages.cfm?org=25\" class=\"external\">USDA Forest Service</a>  - Northeastern Area Archive, USDA Forest Service, <a href=\"http://bugwood.org/\" class=\"external\">Bugwood.org</a>.  The image was copied under a <a href=\"http://creativecommons.org/licenses/by/3.0/us/\" class=\"external\">Creative Commons Attribution</a> license.  The original image can be found <a href=\"http://www.forestryimages.org/browse/detail.cfm?imgnum=1396002\" class=\"external\">here</a>.</p>\r\n", "detailed_description": "<p>Spruce budworm, <i>Choristoneura fumiferana</i>, adult and pupa.</p>\r\n"}, "pk": 239}, {"model": "midocs.image", "fields": {"hidden": false, "thumbnail_height": 111, "thumbnail_width": 200, "code": "spruce_budworm_predation_function", "keywords": [], "original_file": "", "auxiliary_files": [], "width": 454, "subjects": [], "thumbnail": "image/thumbnail/spruce_budworm_predation_function.png", "imagefile": "image/image/spruce_budworm_predation_function.png", "date_created": "2012-11-15", "date_modified": "2013-05-23T14:33:33Z", "publish_date": "2012-11-15", "original_file_type": null, "description": "", "notation_specific": false, "height": 253, "author_copyright": true, "in_pages": [374], "title": "Spruce budworm predation function", "additional_credits": "", "detailed_description": ""}, "pk": 240}, {"model": "midocs.imagetype", "fields": {"description": "Inkscape Scalable Vector Graphics format", "name": "Inkscape SVG", "code": "inkscape"}, "pk": 1}, {"model": "midocs.imagetype", "fields": {"description": "Geogebra file", "name": "Geogebra", "code": "geogebra"}, "pk": 2}, {"model": "midocs.imagetype", "fields": {"description": "Mathematica notebook", "name": "Mathematica", "code": "mathematica"}, "pk": 3}, {"model": "midocs.imagetype", "fields": {"description": "Python file", "name": "Python", "code": "python"}, "pk": 4}, {"model": "midocs.applet", "fields": {"hidden": false, "image2_height": null, "thumbnail_height": 160, "thumbnail_width": 200, "code": "forward_euler_pure_time_details", "keywords": [], "image_width": 860, "default_inline_caption": "Illustration of how the Forward Euler algorithm estimates the solution to a pure time differential equation $\\diff{y}{t}=f(t)$ with initial condition $y(t_0)=y_0$.  The function $f(t)$ is plotted by the blue curve in the left panel.  In the Forward Euler algorithm, the function $f(t)$ is approximated as though it were constant on intervals of length $\\Delta t$, as illustrated by the horizontal length segments coming from the graph of $f$.  The height of each line segment is determined by the value of $f(t)$ at its left  (green dots).  When we assume $f(t)$ is a constant, the solution to $\\diff{y}{t}=f(t)$ is a line whose slope is the value of $f$.  The approximate solution is illustrated by the green curve in the right panel.  Each segment of the green curve has a slope given by the height of the corresponding line segment in the left panel.  To see this correspondence, you can move the pink points in either panel.  The matching segments of the approximated $f(t)$ (at left) and estimate of $y(t)$ (at right) are highlighted in pink.  Gray lines emphasize how we are are viewing $y(t)$ as a line with slope given by the constant value of $f(t)$, i.e., we make $y(t)$ be a tangent line to what the true solution would be. The calculation for the value of $y(t)$ at the end of the highlighted segment can be seen by opening the <em>step details</em> section.  The calculation is based on the tangent line formula using the slope $f$.  If you check the &ldquo;exact&rdquo; box, the exact solution computed by the antiderivative is $f$ is shown in red (assuming $f(t)$ is simple enough for its antiderivative to be computed).  The <em>error estimate</em> section shows the approximate and exact value of $y(t)$ at the position of the pink point along with the error between them. Clearing the &ldquo;details&rdquo; box hides the points indicating the endpoints, as well as the line segments and pink point in the left panel.  This view reduces the clutter when $\\Delta t$ is small and the number of segments is large. You can change the function $f(t)$, the initial condition $y_0$, and other parameters by typing values in the corresponding boxes in the <em>control panel</em> section.  You can also change the initial condition $y_0$ by dragging the blue point in the right panel and the axes bound by holding down <tt>Shift</tt> and dragging.  (Shift-dragging on an axis stretches that axes; shift-dragging on the background moves the entire graph.)", "applet_type": 7, "encoded_content": "", "image2": "", "image_height": 397, "overwrite_thumbnail": 1, "child_applet": null, "publish_date": "2012-11-01", "image": "applet/image/large/forward_euler_pure_time_details.png", "child_applet_parameters": "", "iframe": false, "features": [2], "applet_file": "", "thumbnail": "applet/image/small/forward_euler_pure_time_details.png", "date_created": "2012-11-01", "applet_file2": "", "date_modified": "2015-07-25T00:39:21Z", "child_applet_percent_width": 50, "description": "Illustration of how the Forward Euler algorithm fixes the slope from the beginning of each interval to estimate the solution via a tangent line approximation.", "notation_specific": false, "image2_width": null, "additional_credits": "", "subjects": [], "author_copyright": true, "highlight": false, "in_pages": [371], "title": "Details of the Forward Euler approximation to a pure time differential equation", "javascript": "", "detailed_description": "<p>Illustration of how the Forward Euler algorithm estimates the solution to a pure time differential equation $\\diff{y}{t}=f(t)$ with initial condition $y(t_0)=y_0$.  The function $f(t)$ is plotted by the blue curve in the left panel.  In the Forward Euler algorithm, the function $f(t)$ is approximated as though it were constant on intervals of length $\\Delta t$, as illustrated by the horizontal length segments coming from the graph of $f$.  The height of each line segment is determined by the value of $f(t)$ at its left  (green dots).  When we assume $f(t)$ is a constant, the solution to $\\diff{y}{t}=f(t)$ is a line whose slope is the value of $f$.  The approximate solution is illustrated by the green curve in the right panel.  Each segment of the green curve has a slope given by the height of the corresponding line segment in the left panel.  To see this correspondence, you can move the pink points in either panel.  The matching segments of the approximated $f(t)$ (at left) and estimate of $y(t)$ (at right) are highlighted in pink.  Gray lines emphasize how we are are viewing $y(t)$ as a line with slope given by the constant value of $f(t)$, i.e., we make $y(t)$ be a tangent line to what the true solution would be.</p>\r\n\r\n<p>The calculation for the value of $y(t)$ at the end of the highlighted segment can be seen by opening the <em>step details</em> section.  The calculation is based on the tangent line formula using the slope $f$.  </p>\r\n\r\n<p>If you check the &ldquo;exact&rdquo; box, the exact solution computed by the antiderivative is $f$ is shown in red (assuming $f(t)$ is simple enough for its antiderivative to be computed).  The <em>error estimate</em> section shows the approximate and exact value of $y(t)$ at the position of the pink point along with the error between them.</p>\r\n\r\n<p>Clearing the &ldquo;details&rdquo; box hides the points indicating the endpoints, as well as the line segments and pink point in the left panel.  This view reduces the clutter when $\\Delta t$ is small and the number of segments is large.</p>\r\n\r\n<p>You can change the function $f(t)$, the initial condition $y_0$, and other parameters by typing values in the corresponding boxes in the <em>control panel</em> section.  You can also change the initial condition $y_0$ by dragging the blue point in the right panel and the axes bound by holding down <tt>Shift</tt> and dragging.  (Shift-dragging on an axis stretches that axes; shift-dragging on the background moves the entire graph.)</p>"}, "pk": 231}, {"model": "midocs.applet", "fields": {"hidden": false, "image2_height": null, "thumbnail_height": 163, "thumbnail_width": 200, "code": "backward_euler_pure_time_details", "keywords": [], "image_width": 794, "default_inline_caption": "Illustration of how the Backward Euler algorithm estimates the solution to a pure time differential equation $\\diff{y}{t}=f(t)$ with initial condition $y(t_0)=y_0$.  The function $f(t)$ is plotted by the blue curve in the left panel.  In the Backward Euler algorithm, the function $f(t)$ is approximated as though it were constant on intervals of length $\\Delta t$, as illustrated by the horizontal length segments coming from the graph of $f$.  The height of each line segment is determined by the value of $f(t)$ at its right  (green dots).  When we assume $f(t)$ is a constant, the solution to $\\diff{y}{t}=f(t)$ is a line whose slope is the value of $f$.  The approximate solution is illustrated by the green curve in the right panel.  Each segment of the green curve has a slope given by the height of the corresponding line segment in the left panel.  To see this correspondence, you can move the pink points in either panel.  The matching segments of the approximated $f(t)$ (at left) and estimate of $y(t)$ (at right) are highlighted in pink.  Gray lines emphasize how we are are viewing $y(t)$ as a line with slope given by the constant value of $f(t)$. The calculation for the value of $y(t)$ at the end of the highlighted segment is shown in the upper right corner, which is based on the equation for a line with slope $f$.  The estimate of the value of $y$ at the pink point is also shown. If you check the &ldquo;exact&rdquo; box, the exact solution computed by the antiderivative is $f$ is shown in red (assuming $f(t)$ is simple enough for its antiderivative to be computed).  In addition, the exact value of $y(t)$ at the position of the pink point is displayed along with the error between the approximate and exact values.  Clearing the &ldquo;details&rdquo; box hides the points indicating the endpoints, as well as the line segments and pink point in the left panel.  This view reduces the clutter when $\\Delta t$ is small and the number of segments is large. You can change the function $f(t)$ and other parameters by typing values in the corresponding boxes.  You can also change the initial condition $y_0$ by dragging the blue point in the right panel.", "applet_type": 7, "encoded_content": "", "image2": "", "image_height": 395, "overwrite_thumbnail": 1, "child_applet": null, "publish_date": "2012-11-02", "image": "applet/image/large/backward_euler_pure_time_details.png", "child_applet_parameters": "", "iframe": false, "features": [2], "applet_file": "", "thumbnail": "applet/image/small/backward_euler_pure_time_details.png", "date_created": "2012-11-02", "applet_file2": "", "date_modified": "2015-07-25T00:37:14Z", "child_applet_percent_width": 50, "description": "Illustration of how the Backward Euler algorithm fixes the slope from the end of each interval to estimate the solution.", "notation_specific": false, "image2_width": null, "additional_credits": "", "subjects": [], "author_copyright": true, "highlight": false, "in_pages": [371], "title": "Details of the Backward Euler approximation to a pure time differential equation", "javascript": "", "detailed_description": "<p>Illustration of how the Backward Euler algorithm estimates the solution to a pure time differential equation $\\diff{y}{t}=f(t)$ with initial condition $y(t_0)=y_0$.  The function $f(t)$ is plotted by the blue curve in the left panel.  In the Backward Euler algorithm, the function $f(t)$ is approximated as though it were constant on intervals of length $\\Delta t$, as illustrated by the horizontal length segments coming from the graph of $f$.  The height of each line segment is determined by the value of $f(t)$ at its right  (green dots).  When we assume $f(t)$ is a constant, the solution to $\\diff{y}{t}=f(t)$ is a line whose slope is the value of $f$.  The approximate solution is illustrated by the green curve in the right panel.  Each segment of the green curve has a slope given by the height of the corresponding line segment in the left panel.  To see this correspondence, you can move the pink points in either panel.  The matching segments of the approximated $f(t)$ (at left) and estimate of $y(t)$ (at right) are highlighted in pink.  Gray lines emphasize how we are are viewing $y(t)$ as a line with slope given by the constant value of $f(t)$.</p>\r\n\r\n<p>The calculation for the value of $y(t)$ at the end of the highlighted segment is shown in the upper right corner, which is based on the equation for a line with slope $f$.  The estimate of the value of $y$ at the pink point is also shown.</p>\r\n\r\n<p>If you check the &ldquo;exact&rdquo; box, the exact solution computed by the antiderivative is $f$ is shown in red (assuming $f(t)$ is simple enough for its antiderivative to be computed).  In addition, the exact value of $y(t)$ at the position of the pink point is displayed along with the error between the approximate and exact values.  Clearing the &ldquo;details&rdquo; box hides the points indicating the endpoints, as well as the line segments and pink point in the left panel.  This view reduces the clutter when $\\Delta t$ is small and the number of segments is large.</p>\r\n\r\n<p>You can change the function $f(t)$ and other parameters by typing values in the corresponding boxes.  You can also change the initial condition $y_0$ by dragging the blue point in the right panel.</p>"}, "pk": 232}, {"model": "midocs.applet", "fields": {"hidden": false, "image2_height": null, "thumbnail_height": 168, "thumbnail_width": 200, "code": "modifying_euler_pure_time", "keywords": [], "image_width": 792, "default_inline_caption": "Illustration of modifications of Euler algorithm to estimate the solution to a pure time differential equation $\\diff{y}{t}=f(t)$ with initial condition $y(t_0)=y_0$.  The function $f(t)$ is plotted by the blue curve in the left panel.  Like the forward and backward Euler algorithms, the function $f(t)$ is approximated as though it were constant on intervals of length $\\Delta t$, as illustrated by the horizontal length segments coming from the graph of $f$.  In this modification, the height of each line segment is determined by the value of $f(t)$ at a fraction $p$ from the left of the interval (green dots).  In this way, $p=0$ corresponds to Forward Euler and $p=1$ corresponds to Backward Euler.  When we assume $f(t)$ is a constant, the solution to $\\diff{y}{t}=f(t)$ is a line whose slope is the value of $f$.  The approximate solution is illustrated by the green curve in the right panel.  Each segment of the green curve has a slope given by the height of the corresponding line segment in the left panel.  To see this correspondence, you can move the pink points in either panel.  The matching segments of the approximated $f(t)$ (at left) and estimate of $y(t)$ (at right) are highlighted in pink.  Gray lines emphasize how we are are viewing $y(t)$ as a line with slope given by the constant value of $f(t)$. The calculation for the value of $y(t)$ at the end of the highlighted segment is shown in the upper right corner, which is based on the equation for a line with slope $f$.  The estimate of the value of $y$ at the pink point is also shown. If you check the &ldquo;exact&rdquo; box, the exact solution computed by the antiderivative is $f$ is shown in red (assuming $f(t)$ is simple enough for its antiderivative to be computed).  In addition, the exact value of $y(t)$ at the position of the pink point is displayed along with the error between the approximate and exact values.  Clearing the &ldquo;details&rdquo; box hides the points indicating the endpoints, as well as the line segments and pink point in the left panel.  This view reduces the clutter when $\\Delta t$ is small and the number of segments is large. You can change the function $f(t)$ and other parameters by typing values in the corresponding boxes.  You can also change the initial condition $y_0$ by dragging the blue point in the right panel.", "applet_type": 7, "encoded_content": "", "image2": "", "image_height": 402, "overwrite_thumbnail": 1, "child_applet": null, "publish_date": "2012-11-02", "image": "applet/image/large/modifying_euler_pure_time.png", "child_applet_parameters": "", "iframe": false, "features": [2], "applet_file": "", "thumbnail": "applet/image/small/modifying_euler_pure_time.png", "date_created": "2012-11-02", "applet_file2": "", "date_modified": "2015-07-25T00:37:23Z", "child_applet_percent_width": 50, "description": "Illustration of modifications of the Euler algorithm fixes the slope from the different points of each interval to estimate the solution.", "notation_specific": false, "image2_width": null, "additional_credits": "", "subjects": [], "author_copyright": true, "highlight": false, "in_pages": [371], "title": "Modifying the Euler approximation to a pure time differential equation", "javascript": "", "detailed_description": "<p>Illustration of modifications of Euler algorithm to estimate the solution to a pure time differential equation $\\diff{y}{t}=f(t)$ with initial condition $y(t_0)=y_0$.  The function $f(t)$ is plotted by the blue curve in the left panel.  Like the forward and backward Euler algorithms, the function $f(t)$ is approximated as though it were constant on intervals of length $\\Delta t$, as illustrated by the horizontal length segments coming from the graph of $f$.  In this modification, the height of each line segment is determined by the value of $f(t)$ at a fraction $p$ from the left of the interval (green dots).  In this way, $p=0$ corresponds to Forward Euler and $p=1$ corresponds to Backward Euler.  When we assume $f(t)$ is a constant, the solution to $\\diff{y}{t}=f(t)$ is a line whose slope is the value of $f$.  The approximate solution is illustrated by the green curve in the right panel.  Each segment of the green curve has a slope given by the height of the corresponding line segment in the left panel.  To see this correspondence, you can move the pink points in either panel.  The matching segments of the approximated $f(t)$ (at left) and estimate of $y(t)$ (at right) are highlighted in pink.  Gray lines emphasize how we are are viewing $y(t)$ as a line with slope given by the constant value of $f(t)$.</p>\r\n\r\n<p>The calculation for the value of $y(t)$ at the end of the highlighted segment is shown in the upper right corner, which is based on the equation for a line with slope $f$.  The estimate of the value of $y$ at the pink point is also shown.</p>\r\n\r\n<p>If you check the &ldquo;exact&rdquo; box, the exact solution computed by the antiderivative is $f$ is shown in red (assuming $f(t)$ is simple enough for its antiderivative to be computed).  In addition, the exact value of $y(t)$ at the position of the pink point is displayed along with the error between the approximate and exact values.  Clearing the &ldquo;details&rdquo; box hides the points indicating the endpoints, as well as the line segments and pink point in the left panel.  This view reduces the clutter when $\\Delta t$ is small and the number of segments is large.</p>\r\n\r\n<p>You can change the function $f(t)$ and other parameters by typing values in the corresponding boxes.  You can also change the initial condition $y_0$ by dragging the blue point in the right panel.</p>"}, "pk": 233}, {"model": "midocs.applet", "fields": {"hidden": false, "image2_height": null, "thumbnail_height": null, "thumbnail_width": null, "code": "spruce_budworm_nondimensionalized", "keywords": [], "image_width": null, "default_inline_caption": "Illustration of the dynamical system modeling an outbreak of the spruce budworm population.  The evolution of the budworm population $w(t)$ is modeled by the autonomous differential equation $\\diff{w}{t}=f(w)$, where\r\n\\begin{align*}\r\n  f(w)= r w \\left(1 - \\frac{w}{a}\\right) - \\frac{w^2}{1+w^2}.\r\n\\end{align*}\r\nThe left panel shows a plot of $f(w)$ (black curve), which changes depending on the value of the parameters $r$ and $b$ (changeable via sliders).  If you click the play button in the lower left corner of one of the panels or increase $t$ manually via the red slider in the right panel, the evolution of $w(t)$ from the initial condition $w(t_0)=w_0$ is shown by the blue curves.  In the left panel, $w(t)$ is a line on the horizontal axis.  In the right panel, $w(t)$ is plotted versus time $t$.  The direction of $w(t)$ can be determined by the sign of $f(w)$ or by turning on the vector field (with check box).  Equilibria are displayed by circles in the left panel and horizontal lines in the right panel if you check the box.", "applet_type": 7, "encoded_content": "", "image2": "", "image_height": null, "overwrite_thumbnail": 1, "child_applet": null, "publish_date": "2012-11-15", "image": "", "child_applet_parameters": "", "iframe": false, "features": [1, 2], "applet_file": "", "thumbnail": "", "date_created": "2012-11-15", "applet_file2": "", "date_modified": "2015-07-25T00:38:05Z", "child_applet_percent_width": 50, "description": "Illustration of the dynamical system modeling an outbreak of the spruce budworm population.", "notation_specific": false, "image2_width": null, "additional_credits": "", "subjects": [], "author_copyright": true, "highlight": false, "in_pages": [374], "title": "Spruce budworm model", "javascript": "", "detailed_description": "<p>Illustration of the dynamical system modeling an outbreak of the spruce budworm population.  The evolution of the budworm population $w(t)$ is modeled by the autonomous differential equation $\\diff{w}{t}=f(w)$, where\r\n\\begin{align*}\r\n  f(w)= r w \\left(1 - \\frac{w}{a}\\right) - \\frac{w^2}{1+w^2}.\r\n\\end{align*}\r\nThe left panel shows a plot of $f(w)$ (black curve), which changes depending on the value of the parameters $r$ and $b$ (changeable via sliders).  If you click the play button in the lower left corner of one of the panels or increase $t$ manually via the red slider in the right panel, the evolution of $w(t)$ from the initial condition $w(t_0)=w_0$ is shown by the blue curves.  In the left panel, $w(t)$ is a line on the horizontal axis.  In the right panel, $w(t)$ is plotted versus time $t$.  The direction of $w(t)$ can be determined by the sign of $f(w)$ or by turning on the vector field (with check box).  Equilibria are displayed by circles in the left panel and horizontal lines in the right panel if you check the box.</p>"}, "pk": 239}, {"model": "midocs.applet", "fields": {"hidden": false, "image2_height": null, "thumbnail_height": null, "thumbnail_width": null, "code": "spruce_budworm_outbreak_movie", "keywords": [], "image_width": null, "default_inline_caption": "This movie illustrates how the spruce budworm population size initially stays low as the forest grows, until finally the population explodes into a outbreak of the budworms which decimates the forest.  Click the play button in the lower left corner of one of the panels to start the animation.  The left panel shows a plot of $f(w)=rw(1-r/a)-w^2/(1+w^2)$, which is the right hand side of the spruce budworm model $w'(t)=f(w)$.  The movie does not show the evolution of this differential equation, but just sets that the budworm size to be a stable equilibrium of the model.  (The movie assumes that the evolution to the equilibrium happens faster than the time scale represented.)   The right panel shows how the population size $w$ and the carrying capacity $a$ of the forest evolve with time $T$.  When the budworm population is low, the forest grows so that the carrying capacity $a$ increases steadily.  Then, when the outbreak occurs, the forest dies and the carrying capacity $a$ decreases steadily.  The rate of increase and decrease of $a$ is arbitrary; the time $T$ is some slow time scale over which the forest evolves.", "applet_type": 7, "encoded_content": "", "image2": "", "image_height": null, "overwrite_thumbnail": 1, "child_applet": null, "publish_date": "2013-11-13", "image": "", "child_applet_parameters": "", "iframe": false, "features": [1], "applet_file": "", "thumbnail": "", "date_created": "2013-11-13", "applet_file2": "", "date_modified": "2015-07-25T00:37:04Z", "child_applet_percent_width": 50, "description": "", "notation_specific": false, "image2_width": null, "additional_credits": "", "subjects": [], "author_copyright": true, "highlight": false, "in_pages": [374], "title": "Spruce budworm outbreak movie", "javascript": "", "detailed_description": "<p>This movie illustrates how the spruce budworm population size initially stays low as the forest grows, until finally the population explodes into a outbreak of the budworms which decimates the forest.  Click the play button in the lower left corner of one of the panels to start the animation.  The left panel shows a plot of $f(w)=rw(1-r/a)-w^2/(1+w^2)$, which is the right hand side of the spruce budworm model $w'(t)=f(w)$.  The movie does not show the evolution of this differential equation, but just sets that the budworm size to be a stable equilibrium of the model.  (The movie assumes that the evolution to the equilibrium happens faster than the time scale represented.) </p>\r\n\r\n<p>  The right panel shows how the population size $w$ and the carrying capacity $a$ of the forest evolve with time $T$.  When the budworm population is low, the forest grows so that the carrying capacity $a$ increases steadily.  Then, when the outbreak occurs, the forest dies and the carrying capacity $a$ decreases steadily.  The rate of increase and decrease of $a$ is arbitrary; the time $T$ is some slow time scale over which the forest evolves.</p>"}, "pk": 296}, {"model": "midocs.applet", "fields": {"hidden": false, "image2_height": null, "thumbnail_height": null, "thumbnail_width": null, "code": "sis_infectious_disease_model", "keywords": [], "image_width": null, "default_inline_caption": "", "applet_type": 7, "encoded_content": "", "image2": "", "image_height": null, "overwrite_thumbnail": 1, "child_applet": null, "publish_date": "2013-11-15", "image": "", "child_applet_parameters": "", "iframe": false, "features": [1, 2], "applet_file": "", "thumbnail": "", "date_created": "2013-11-15", "applet_file2": "", "date_modified": "2015-07-25T00:37:53Z", "child_applet_percent_width": 50, "description": "", "notation_specific": false, "image2_width": null, "additional_credits": "", "subjects": [], "author_copyright": true, "highlight": false, "in_pages": [415], "title": "SIS infectious disease model", "javascript": "", "detailed_description": ""}, "pk": 297}, {"model": "midocs.applet", "fields": {"hidden": false, "image2_height": null, "thumbnail_height": null, "thumbnail_width": null, "code": "neuron_model_sodium_channels", "keywords": [], "image_width": null, "default_inline_caption": "", "applet_type": 7, "encoded_content": "", "image2": "", "image_height": null, "overwrite_thumbnail": 1, "child_applet": null, "publish_date": "2014-06-25", "image": "", "child_applet_parameters": "", "iframe": false, "features": [], "applet_file": "", "thumbnail": "", "date_created": "2014-06-25", "applet_file2": "", "date_modified": "2015-07-25T00:37:30Z", "child_applet_percent_width": 50, "description": "", "notation_specific": false, "image2_width": null, "additional_credits": "", "subjects": [], "author_copyright": true, "highlight": false, "in_pages": [419], "title": "Explore neuron model with just sodium channels", "javascript": "", "detailed_description": ""}, "pk": 320}, {"model": "midocs.applet", "fields": {"hidden": false, "image2_height": null, "thumbnail_height": null, "thumbnail_width": null, "code": "pure_time_differential_equation_graphical_example", "keywords": [], "image_width": null, "default_inline_caption": "", "applet_type": 7, "encoded_content": "", "image2": "", "image_height": null, "overwrite_thumbnail": 1, "child_applet": null, "publish_date": "2015-05-07", "image": "", "child_applet_parameters": "", "iframe": false, "features": [], "applet_file": "", "thumbnail": "", "date_created": "2015-05-07", "applet_file2": "", "date_modified": "2015-07-25T00:37:45Z", "child_applet_percent_width": 50, "description": "", "notation_specific": false, "image2_width": null, "additional_credits": "", "subjects": [], "author_copyright": true, "highlight": false, "in_pages": [439], "title": "Pure time differential equation graphical example", "javascript": "", "detailed_description": ""}, "pk": 365}, {"model": "midocs.applettype", "fields": {"description": "LiveGraphics3D Java applet", "help_text": "<p class=\"pre_ul\">This applet was created using <a href=\"http://www.vis.uni-stuttgart.de/%7Ekraus/LiveGraphics3D/index.html\" class=\"external\">LiveGraphics3D</a>.  To manipulate it, you can</p>\r\n<ul>\r\n<li>click and drag to rotate in any direction,</li>\r\n<li>shift + click and drag up/down to zoom out/in,</li>\r\n<li>shift + click and drag left/right to rotate around an axis coming out of the screen, and</li>\r\n<li>press Home to reset to the original view.</li>\r\n</ul>\r\n<p>Most of the LiveGraphics3D applets have parameters that you can change.  In general, you can click and drag points or balls around to change the parameters.</p>\r\n\r\n<p>Since these applets use Java, you must have Java installed and properly configured in your browser for the them to display.  You can <a href=\"http://www.java.com/getjava\" class=\"external\">get Java here.</a> If you have trouble getting them to display in your browser, you can visit <a href=\"http://www.vis.uni-stuttgart.de/%7Ekraus/LiveGraphics3D/documentation.html#subsection:%20User-Trouble\" class=\"external\">the LiveGraphics3D troubleshooting page</a> for information on how to get the Java applets to work.</p>\r\n\r\n<p>On occasion, even when Java is configured correctly, the Java applets don't load the first time and one instead sees an error message.  You can wait a few moments to see if the applet will eventually load itself anyway. You can also reload the page to see if the applet will properly load.  Sometimes, one needs to do this multiple times.</p>\r\n", "name": "LiveGraphics3D", "code": "LiveGraphics3D", "error_string": "<p>The Java applet did not load, and the above is only a static image representing one view of the applet.  The applet was created with <a href=\"http://www.vis.uni-stuttgart.de/%7Ekraus/LiveGraphics3D/index.html\" class=\"external\">LiveGraphics3D</a>.  The applet is not loading because it looks like you do not have Java installed.  You can <a href=\"http://www.java.com/getjava/\" class=\"external\">click here</a> to get Java.</p>"}, "pk": 3}, {"model": "midocs.applettype", "fields": {"description": "Two LiveGraphics3D applets combined in a single page", "help_text": "<p class=\"pre_ul\">This applet was created using <a href=\"http://www.vis.uni-stuttgart.de/%7Ekraus/LiveGraphics3D/index.html\" class=\"external\">LiveGraphics3D</a>.  To manipulate it, you can</p>\r\n<ul>\r\n<li>click and drag to rotate in any direction,</li>\r\n<li>shift + click and drag up/down to zoom out/in,</li>\r\n<li>shift + click and drag left/right to rotate around an axis coming out of the screen, and</li>\r\n<li>press Home to reset to the original view.</li>\r\n</ul>\r\n<p>Most of the LiveGraphics3D applets have parameters that you can change.  In general, you can click and drag points or balls around to change the parameters.</p>\r\n\r\n<p>Since these applets use Java, you must have Java installed and properly configured in your browser for the them to display.  You can <a href=\"http://www.java.com/getjava\" class=\"external\">get Java here.</a> If you have trouble getting them to display in your browser, you can visit <a href=\"http://www.vis.uni-stuttgart.de/%7Ekraus/LiveGraphics3D/documentation.html#subsection:%20User-Trouble\" class=\"external\">the LiveGraphics3D troubleshooting page</a> for information on how to get the Java applets to work.</p>\r\n\r\n<p>On occasion, even when Java is configured correctly, the Java applets don't load the first time and one instead sees an error message.  You can wait a few moments to see if the applet will eventually load itself anyway. You can also reload the page to see if the applet will properly load.  Sometimes, one needs to do this multiple times.</p>\r\n", "name": "LiveGraphics3D", "code": "DoubleLiveGraphics3D", "error_string": "<p>The Java applet did not load, and the above is only a static image representing one view of the applet.  The applet was created with <a href=\"http://www.vis.uni-stuttgart.de/%7Ekraus/LiveGraphics3D/index.html\" class=\"external\">LiveGraphics3D</a>.  The applet is not loading because it looks like you do not have Java installed.  You can <a href=\"http://www.java.com/getjava/\" class=\"external\">click here</a> to get Java.</p>"}, "pk": 4}, {"model": "midocs.applettype", "fields": {"description": "A Java applet using Geogebra", "help_text": "<p>This applet was created using <a href=\"http://www.geogebra.org/\" class=\"external\">Geogebra</a>.  In most Geogebra applets, you can move objects by dragging them with the mouse.  In some, you can enter values with the keyboard.  To reset the applet to its original view, click the icon in the upper right hand corner.</p>\r\n\r\n<p>Since these applets use Java, you must have Java installed and properly configured in your browser for the them to display.  You can <a href=\"http://www.java.com/getjava\" class=\"external\">get Java here.</a> </p>\r\n\r\n<p>You can download the applet onto your own computer so you can use it outside this web page or even modify it to improve it.  You simply need to download the above <a href=\"#applet_file\">applet file</a> and <a href=\"http://www.geogebra.org/cms/en/download\" class=\"external\">download the Geogebra program</a> onto your own computer.</p>", "name": "Geogebra", "code": "Geogebra", "error_string": "<p>The Java applet did not load, and the above is only a static image representing one view of the applet.  The applet was created with <a href=\"http://www.geogebra.org/\" class=\"external\">Geogebra</a>.   The applet is not loading because it looks like you do not have Java installed.  You can <a href=\"http://www.java.com/getjava/\" class=\"external\">click here</a> to get Java.</p>"}, "pk": 6}, {"model": "midocs.applettype", "fields": {"description": "Geogebra HTML5 applet", "help_text": "<p>This applet was created using <a href=\"http://www.geogebra.org/\" class=\"external\">Geogebra</a>.  In most Geogebra applets, you can move objects by dragging them with the mouse.  In some, you can enter values with the keyboard.  To reset the applet to its original view, click the icon in the upper right hand corner.</p>\r\n\r\n<p>You can download the applet onto your own computer so you can use it outside this web page or even modify it to improve it.  You simply need to download the above <a href=\"#applet_file\">applet file</a> and <a href=\"http://www.geogebra.org/cms/en/download\" class=\"external\">download the Geogebra program</a> onto your own computer.</p>", "name": "Geogebra Web", "code": "GeogebraWeb", "error_string": "NA"}, "pk": 7}, {"model": "midocs.applettype", "fields": {"description": "A geogebra applet hosted on Geogebra tube", "help_text": "<p>This applet was created using <a href=\"http://www.geogebra.org/\" class=\"external\">Geogebra</a>.  In most Geogebra applets, you can move objects by dragging them with the mouse.  In some, you can enter values with the keyboard.  To reset the applet to its original view, click the icon in the upper right hand corner.</p>\r\n\r\n<p>Since these applets use Java, you must have Java installed and properly configured in your browser for the them to display.  You can <a href=\"http://www.java.com/getjava\" class=\"external\">get Java here.</a> </p>\r\n\r\n<p>You can download the applet onto your own computer so you can use it outside this web page or even modify it to improve it.  You simply need to download the above <a href=\"#applet_file\">applet file</a> and <a href=\"http://www.geogebra.org/cms/en/download\" class=\"external\">download the Geogebra program</a> onto your own computer.</p>", "name": "Geogebra Tube", "code": "GeogebraTube", "error_string": " "}, "pk": 8}, {"model": "midocs.applettype", "fields": {"description": "Applets based on three.js", "help_text": "<p>The applet was made using <a href=\"http://threejs.org/\">three.js</a> and requires Javascript as well as a browser that supports <a href=\"http://get.webgl.org/\">WebGL</a>.  For most three.js applets, you can drag with the mouse to rotate the view, drag with the right button to pan, and zoom in/out with the mouse wheel.  Many applets contain points that you can drag to change values of variables.</p>", "name": "three.js", "code": "Three", "error_string": "The applet did not load, and the above is only a static image representing one view of the applet. "}, "pk": 9}, {"model": "midocs.appletfeature", "fields": {"description": "Applet contains an animation", "code": "Animation"}, "pk": 1}, {"model": "midocs.appletfeature", "fields": {"description": "Applet allows user interactions.", "code": "Interactive"}, "pk": 2}, {"model": "midocs.appletobjecttype", "fields": {"object_type": "Point"}, "pk": 1}, {"model": "midocs.appletobjecttype", "fields": {"object_type": "Line"}, "pk": 2}, {"model": "midocs.appletobjecttype", "fields": {"object_type": "Text"}, "pk": 3}, {"model": "midocs.appletobjecttype", "fields": {"object_type": "Boolean"}, "pk": 4}, {"model": "midocs.appletobjecttype", "fields": {"object_type": "Number"}, "pk": 5}, {"model": "midocs.appletobjecttype", "fields": {"object_type": "Function"}, "pk": 6}, {"model": "midocs.appletobjecttype", "fields": {"object_type": "List"}, "pk": 7}, {"model": "midocs.appletobjecttype", "fields": {"object_type": "Function2D"}, "pk": 8}, {"model": "midocs.appletobjecttype", "fields": {"object_type": "Array"}, "pk": 9}, {"model": "midocs.appletobjecttype", "fields": {"object_type": "Vector"}, "pk": 10}, {"model": "midocs.appletparameter", "fields": {"parameter": 67, "value": "700", "applet": 231}, "pk": 633}, {"model": "midocs.appletparameter", "fields": {"parameter": 66, "value": "350", "applet": 231}, "pk": 634}, {"model": "midocs.appletparameter", "fields": {"parameter": 67, "value": "700", "applet": 232}, "pk": 635}, {"model": "midocs.appletparameter", "fields": {"parameter": 66, "value": "400", "applet": 232}, "pk": 636}, {"model": "midocs.appletparameter", "fields": {"parameter": 67, "value": "700", "applet": 233}, "pk": 637}, {"model": "midocs.appletparameter", "fields": {"parameter": 66, "value": "400", "applet": 233}, "pk": 638}, {"model": "midocs.appletparameter", "fields": {"parameter": 67, "value": "800", "applet": 239}, "pk": 649}, {"model": "midocs.appletparameter", "fields": {"parameter": 66, "value": "350", "applet": 239}, "pk": 650}, {"model": "midocs.appletparameter", "fields": {"parameter": 67, "value": "600", "applet": 296}, "pk": 789}, {"model": "midocs.appletparameter", "fields": {"parameter": 66, "value": "300", "applet": 296}, "pk": 790}, {"model": "midocs.appletparameter", "fields": {"parameter": 67, "value": "700", "applet": 297}, "pk": 791}, {"model": "midocs.appletparameter", "fields": {"parameter": 66, "value": "300", "applet": 297}, "pk": 792}, {"model": "midocs.appletparameter", "fields": {"parameter": 67, "value": "750", "applet": 320}, "pk": 841}, {"model": "midocs.appletparameter", "fields": {"parameter": 66, "value": "350", "applet": 320}, "pk": 842}, {"model": "midocs.appletparameter", "fields": {"parameter": 67, "value": "600", "applet": 365}, "pk": 1013}, {"model": "midocs.appletparameter", "fields": {"parameter": 66, "value": "400", "applet": 365}, "pk": 1014}, {"model": "midocs.appletparameter", "fields": {"parameter": 83, "value": "false", "applet": 365}, "pk": 1015}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "tiEquation", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1896}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "yiApprox", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1897}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "ftiEquation", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1898}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "DeltatEquation", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1899}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "yiPlus1Word", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1900}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "yiPlus1Steps", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1901}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "tiPlus1Equation", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1902}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "f", "name_for_changes": "", "state_variable": true, "object_type": 6, "applet": 231, "function_input_variable": "t", "capture_changes": true}, "pk": 1903}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "t0", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1904}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "tFinal", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1905}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "n", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1906}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "dt", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1907}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "y0", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1908}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "tiPlusFractionEquation", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1909}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "yiPlusFractionApprox", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1910}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "yiPlusFractionExactEquation", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1911}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "yiPlusFractionErrorEquation", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1912}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "xmin1", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1913}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "xmax1", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1914}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "ymin1", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1915}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "ymax1", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1916}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "xmin2", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1917}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "xmax2", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1918}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "ymin2", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1919}, {"model": "midocs.appletobject", "fields": {"default_value": null, "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "ymax2", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 231, "function_input_variable": "", "capture_changes": true}, "pk": 1920}, {"model": "midocs.appletobject", "fields": {"default_value": "8.5", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "xmax1", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2192}, {"model": "midocs.appletobject", "fields": {"default_value": "8.5", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "xmax2", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2193}, {"model": "midocs.appletobject", "fields": {"default_value": "-0.5", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "xmin1", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2194}, {"model": "midocs.appletobject", "fields": {"default_value": "-0.5", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "xmin2", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2195}, {"model": "midocs.appletobject", "fields": {"default_value": "-3", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "ymin1", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2196}, {"model": "midocs.appletobject", "fields": {"default_value": "5", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "ymax1", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2197}, {"model": "midocs.appletobject", "fields": {"default_value": "-3", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "ymin2", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2198}, {"model": "midocs.appletobject", "fields": {"default_value": "6", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "ymax2", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2199}, {"model": "midocs.appletobject", "fields": {"default_value": "", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "showstep", "name_for_changes": "", "state_variable": false, "object_type": 4, "applet": 365, "function_input_variable": "", "capture_changes": false}, "pk": 2200}, {"model": "midocs.appletobject", "fields": {"default_value": "", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "step", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2201}, {"model": "midocs.appletobject", "fields": {"default_value": "", "related_objects": "", "category_for_capture": "", "change_from_javascript": false, "name": "equationText", "name_for_changes": "", "state_variable": false, "object_type": 3, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2202}, {"model": "midocs.appletobject", "fields": {"default_value": "", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "y0", "name_for_changes": "", "state_variable": true, "object_type": 5, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2203}, {"model": "midocs.appletobject", "fields": {"default_value": "", "related_objects": "", "category_for_capture": "", "change_from_javascript": true, "name": "Y0pt", "name_for_changes": "", "state_variable": true, "object_type": 1, "applet": 365, "function_input_variable": "", "capture_changes": true}, "pk": 2204}, {"model": "midocs.applettypeparameter", "fields": {"default_value": null, "parameter_name": "INDEPENDENT_VARIABLES", "applet_type": 3}, "pk": 6}, {"model": "midocs.applettypeparameter", "fields": {"default_value": null, "parameter_name": "DEPENDENT_VARIABLES", "applet_type": 3}, "pk": 7}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_WIDTH", "applet_type": 3}, "pk": 9}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_HEIGHT", "applet_type": 3}, "pk": 10}, {"model": "midocs.applettypeparameter", "fields": {"default_value": null, "parameter_name": "MOUSE_DRAG_ACTION", "applet_type": 3}, "pk": 11}, {"model": "midocs.applettypeparameter", "fields": {"default_value": null, "parameter_name": "MOUSE_DRAG_ACTION2", "applet_type": 4}, "pk": 12}, {"model": "midocs.applettypeparameter", "fields": {"default_value": null, "parameter_name": "MOUSE_DRAG_ACTION1", "applet_type": 4}, "pk": 13}, {"model": "midocs.applettypeparameter", "fields": {"default_value": null, "parameter_name": "INDEPENDENT_VARIABLES2", "applet_type": 4}, "pk": 14}, {"model": "midocs.applettypeparameter", "fields": {"default_value": null, "parameter_name": "INDEPENDENT_VARIABLES1", "applet_type": 4}, "pk": 15}, {"model": "midocs.applettypeparameter", "fields": {"default_value": null, "parameter_name": "DEPENDENT_VARIABLES2", "applet_type": 4}, "pk": 16}, {"model": "midocs.applettypeparameter", "fields": {"default_value": null, "parameter_name": "DEPENDENT_VARIABLES1", "applet_type": 4}, "pk": 17}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "325", "parameter_name": "DEFAULT_WIDTH", "applet_type": 4}, "pk": 18}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "325", "parameter_name": "DEFAULT_HEIGHT", "applet_type": 4}, "pk": 19}, {"model": "midocs.applettypeparameter", "fields": {"default_value": null, "parameter_name": "INITIAL_ROTATION", "applet_type": 3}, "pk": 20}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "1.3", "parameter_name": "MAGNIFICATION", "applet_type": 3}, "pk": 41}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "", "parameter_name": "BGCOLOR", "applet_type": 3}, "pk": 42}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "", "parameter_name": "BGCOLOR1", "applet_type": 4}, "pk": 43}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "", "parameter_name": "BGCOLOR2", "applet_type": 4}, "pk": 44}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "1.3", "parameter_name": "MAGNIFICATION1", "applet_type": 4}, "pk": 45}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "1.3", "parameter_name": "MAGNIFICATION2", "applet_type": 4}, "pk": 46}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "", "parameter_name": "SPIN_X", "applet_type": 3}, "pk": 47}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "", "parameter_name": "SPIN_Y", "applet_type": 3}, "pk": 48}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "-Xmx512m -Djnlp.packEnabled=true", "parameter_name": "java_arguments", "applet_type": 6}, "pk": 49}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_HEIGHT", "applet_type": 6}, "pk": 50}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_WIDTH", "applet_type": 6}, "pk": 51}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "showAlgebraInput", "applet_type": 6}, "pk": 52}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "framePossible", "applet_type": 6}, "pk": 53}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "showResetIcon", "applet_type": 6}, "pk": 54}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "showAnimationButton", "applet_type": 6}, "pk": 55}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "enableRightClick", "applet_type": 6}, "pk": 56}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "errorDialogsActive", "applet_type": 6}, "pk": 57}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "enableLabelDrags", "applet_type": 6}, "pk": 58}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "showMenuBar", "applet_type": 6}, "pk": 59}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "showToolBar", "applet_type": 6}, "pk": 60}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "showToolBarHelp", "applet_type": 6}, "pk": 61}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "useBrowserForJS", "applet_type": 6}, "pk": 62}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "allowRescaling", "applet_type": 6}, "pk": 63}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "geogebra.jar, geogebra_main.jar, geogebra_gui.jar, geogebra_cas.jar, geogebra_algos.jar, geogebra_export.jar, geogebra_javascript.jar, jlatexmath.jar, jlm_greek.jar, jlm_cyrillic.jar, geogebra_properties.jar", "parameter_name": "cache_archive", "applet_type": 6}, "pk": 64}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "4.2.60.0, 4.2.60.0, 4.2.60.0, 4.2.60.0, 4.2.60.0, 4.2.60.0, 4.2.60.0, 4.2.60.0, 4.2.60.0, 4.2.60.0, 4.2.60.0", "parameter_name": "cache_version", "applet_type": 6}, "pk": 65}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_HEIGHT", "applet_type": 7}, "pk": 66}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_WIDTH", "applet_type": 7}, "pk": 67}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_WIDTH", "applet_type": 8}, "pk": 68}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_HEIGHT", "applet_type": 8}, "pk": 69}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "rc", "applet_type": 8}, "pk": 70}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "ld", "applet_type": 8}, "pk": 71}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "sri", "applet_type": 8}, "pk": 72}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "sdz", "applet_type": 8}, "pk": 73}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "smb", "applet_type": 8}, "pk": 74}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "stb", "applet_type": 8}, "pk": 75}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "ai", "applet_type": 8}, "pk": 76}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "", "parameter_name": "code", "applet_type": 8}, "pk": 77}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_WIDTH", "applet_type": 9}, "pk": 78}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_HEIGHT", "applet_type": 9}, "pk": 79}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "showToolbar", "applet_type": 7}, "pk": 80}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "showMenubar", "applet_type": 7}, "pk": 81}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "showAlgebraicInput", "applet_type": 7}, "pk": 82}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "showResetIcon", "applet_type": 7}, "pk": 83}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "enableLabelDrags", "applet_type": 7}, "pk": 84}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "enableShiftDragZoom", "applet_type": 7}, "pk": 85}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "enableRightClick", "applet_type": 7}, "pk": 86}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "false", "parameter_name": "showToolBarHelp", "applet_type": 7}, "pk": 87}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "errorDialogsActive", "applet_type": 7}, "pk": 88}, {"model": "midocs.applettypeparameter", "fields": {"default_value": "true", "parameter_name": "useBrowserForJS", "applet_type": 7}, "pk": 89}, {"model": "midocs.video", "fields": {"thumbnail": "video/image/small/quotient_rule_differentiation.png", "hidden": false, "detailed_description": "", "transcript": "", "video_type": 1, "code": "quotient_rule_differentiation", "associated_applet": null, "keywords": [], "default_inline_caption": "", "date_modified": "2013-05-29T11:47:16Z", "publish_date": "2013-03-02", "date_created": "2013-03-02", "description": "", "subjects": [], "thumbnail_height": 112, "author_copyright": true, "highlight": false, "in_pages": [400], "title": "The quotient rule for differentiation", "additional_credits": "", "thumbnail_width": 200}, "pk": 33}, {"model": "midocs.video", "fields": {"thumbnail": "", "hidden": false, "detailed_description": "", "transcript": "", "video_type": 1, "code": "maximization_minimization", "associated_applet": null, "keywords": [], "default_inline_caption": "", "date_modified": "2013-03-29T11:00:36Z", "publish_date": "2013-03-28", "date_created": "2013-03-28", "description": "", "subjects": [], "thumbnail_height": null, "author_copyright": true, "highlight": false, "in_pages": [406], "title": "Maximization and minimization", "additional_credits": "", "thumbnail_width": null}, "pk": 43}, {"model": "midocs.video", "fields": {"thumbnail": "", "hidden": false, "detailed_description": "", "transcript": "", "video_type": 1, "code": "model_infectious_disease_without_immunity", "associated_applet": null, "keywords": [], "default_inline_caption": "", "date_modified": "2013-04-22T20:31:41Z", "publish_date": "2013-04-19", "date_created": "2013-04-19", "description": "", "subjects": [], "thumbnail_height": null, "author_copyright": true, "highlight": false, "in_pages": [415], "title": "Model of an infectious disease without immunity", "additional_credits": "", "thumbnail_width": null}, "pk": 58}, {"model": "midocs.video", "fields": {"thumbnail": "", "hidden": false, "detailed_description": "", "transcript": "", "video_type": 1, "code": "model_infectious_disease_without_immunity_analysis", "associated_applet": null, "keywords": [], "default_inline_caption": "", "date_modified": "2013-04-22T20:31:53Z", "publish_date": "2013-04-21", "date_created": "2013-04-21", "description": "", "subjects": [], "thumbnail_height": null, "author_copyright": true, "highlight": false, "in_pages": [415], "title": "Analysis of a model of an infectious disease without immunity", "additional_credits": "", "thumbnail_width": null}, "pk": 59}, {"model": "midocs.video", "fields": {"thumbnail": "", "hidden": false, "detailed_description": "", "transcript": "", "video_type": 1, "code": "simple_spiking_neuron_model_biological_background", "associated_applet": null, "keywords": [152, 67, 125, 151], "default_inline_caption": "", "date_modified": "2013-05-05T12:49:48Z", "publish_date": "2013-05-02", "date_created": "2013-05-02", "description": "", "subjects": [7, 10, 11], "thumbnail_height": null, "author_copyright": true, "highlight": false, "in_pages": [419], "title": "A simple spiking neuron model: biological background", "additional_credits": "", "thumbnail_width": null}, "pk": 64}, {"model": "midocs.video", "fields": {"thumbnail": "", "hidden": false, "detailed_description": "", "transcript": "<p>In the previous video that gave the biological background for a simple neuron model, we learned three important properties of the sodium channels.  First, since the concentration of sodium ions is higher outside the cell, sodium rushes into the cell when the sodium channels open, increasing the voltage inside the cell.  Second, since sodium channels tend to open when the voltage increases, they create a positive feedback loop.  Increasing the voltage leads to more sodium channels opening, which leads to an increased voltage, etc.  This positive feedback loop is fast, which can lead to the voltage shooting up rapidly.  However, there is a threshold voltage which the voltage must cross before the positive feedback loop is triggered.  If the voltage starts below the threshold, it will stay low or even decrease.  Only if the voltage is somehow kicked above threshold, say due to input from other neurons, is the positive feedback loop engaged, and the voltage shoots up fast.</p>\r\n\r\n<p>Using the three properties of the sodium channels, let's create a dynamical system model of a neuron in the form an autonomous differential equation. For simplicity, we won't model the sodium channels directly, but just model the resulting dynamics of the neuron's voltage.</p>\r\n\r\n<p>For now, our dynamical system model will have one state variable $v(t)$, which will be the voltage of the neuron at time $t$.  Well, let's not make it exactly the real voltage of the neuron, but a fake voltage to make the equation easier.  Here's why we'll use a fake voltage.</p>\r\n\r\n<p>When a neuron is at rest, its voltage is near a resting potential, which could be something like -70 mV.  The negative value means that the voltage inside the neuron is lower than the voltage outside.  But, to make the model simpler, let's forget about this fact, and just pretend the resting voltage is zero.</p>\r\n\r\n</p>Also, if the sodium channels were all the way open, the voltage would go to some high value (something like positive 40 mV).  But, let's pretend that this voltage is 1.  That way, our voltage will live between 0 and 1.  It isn't the real voltage but just a rescaled voltage that tells us where we are between the minimum and maximum voltage.</p>\r\n\r\n</p>There's one more voltage we need to add to our model: the threshold voltage.  It is somewhere between the resting potential and the maximum voltage. (In real life, it's much closer to the resting potential).  Let's leave it as an unspecified parameter and call the threshold voltage $a$.  </p>\r\n\r\n<p>To model the influence of the sodium channels on the voltage, here's what we want our model to do.  If the voltage is below $a$, then the voltage should decrease back down to the resting potential 0.  However, if the voltage somehow gets kicked above $v=a$, then the voltage should increase to 1.</p>\r\n\r\n<p>If we write the differential equation model in the form \r\n\\begin{align*}\r\n  \\diff{v}{t} = f(v),\r\n\\end{align*}\r\nwhat should the function $f(v)$ look like to have these properties?  For starters, what should the phase line look like?</p>\r\n\r\n<p>We definitely want stable equilibria at $v=0$ and $v=1$.  The threshold voltage $v=a$ should be an unstable equilibrium between them.  We want the vector field, or direction arrows pointing away from $a$ and toward both 0 and 1.  In this way, the voltage will move upward if it is above $a$ and downward otherwise (assuming we stay between 0 and 1).</p>\r\n\r\n<p>To get this behavior in the phase line, what should the function $f$ look like?  $f$ should be positive in the interval where $v$ is between $a$ and $1$ and should be negative elsewhere.  The simplest form of such an $f$ is a cubic $$f(v) = -v(v-a)(v-1).$$ In this case, the graph of the function $f$ looks like this.</p>\r\n\r\n<p>With this function $f$, the differential equation is \r\n\\begin{align*}\r\n \\diff{v}{t} = -v(v-a)(v-1).  \r\n\\end{align*}\r\n</p>\r\n\r\n<p>For this model, can you verify that the equilibria are $0$, $a$, and $1$, that the equilibria $0$ and $1$ are stable and the equilibrium $v=a$ is unstable?</p>\r\n\r\n<p>The neuron model has the required behavior.  Let's imagine that the neuron starts at rest.  If it then receivews an input that bumps its voltage upward, but the voltage stays below $a$, what happens?  The voltage decays back down to zero. (Since we aren't modeling the inputs, just imagine that you change the voltage by hand and start it at a new value.)</p>\r\n\r\n<p>If the neuron receives a larger input, so that its voltage is kicked above $a$, what happens?  The voltage increases toward 1.  In this way, the neuron responds with a large deflection of its voltage only if it receives a big enough input.</p>\r\n\r\n<p>According to this model, the neuron's voltage will stay at a high value forever, approaching the value of 1 as time increases, since $v=1$ is a stable equilibrium.</p>\r\n\r\n<p>In reality, though, the voltage should just go up briefly and then come back down.  We want it to go back down so that it can respond to future inputs.  </p>\r\n\r\n<p>Unfortunately, we cannot get this behavior with our one-dimensional autonomous differential equation model.  In such a model, the state variable can never turn around, as it can only move in one direction at each point in the phase line.</p>\r\n\r\n<p>The secret to bringing the voltage back down lies with the potassium channels, which we have ignored so far.  When we add the potassium channels to our model, we will add a second variable and a second differential equation.  With such a two-dimensional state space, we will be able to make the voltage turn around and go back down, and maybe even have other behaviors.</p>\r\n\r\n<p>In the next video, we'll show how to create such a model.</p>\r\n", "video_type": 1, "code": "simple_spiking_neuron_model_sodium_channels_alone", "associated_applet": null, "keywords": [152, 67, 125, 151], "default_inline_caption": "", "date_modified": "2013-05-05T16:52:52Z", "publish_date": "2013-05-04", "date_created": "2013-05-04", "description": "", "subjects": [7, 10, 11], "thumbnail_height": null, "author_copyright": true, "highlight": false, "in_pages": [419], "title": "A simple spiking neuron model: sodium channels alone", "additional_credits": "", "thumbnail_width": null}, "pk": 65}, {"model": "midocs.video", "fields": {"thumbnail": "", "hidden": false, "detailed_description": "", "transcript": "<p>So far, we've built a one-dimensional autonomous differential equation model that just incorporates the effects of sodium.  In the model,\r\n\\begin{align*}\r\n\\diff{v}{t} = -v(v-a)(v-1),\r\n\\end{align*}\r\nthe voltage lives between zero and one.  If it starts below the threshold $v=a$, the voltage decays to zero.  If it somehow gets kicked above the threshold, such as via receiving enough input from other neurons, then the voltage rises to one and stays there.</p>\r\n\r\n<p>We want to bring the voltage back down so that the neuron can be ready to listen to more input.  To allow the voltage to turn around, we must add another state variable so that we have a two-dimensional differential equation.  We'll add a variable that represents the state of potassium channels.</p>\r\n\r\n<p>Since the concentration of potassium is higher inside the cell than outside, when the potassium channels open, potassium rushes out of the cell and the voltage inside goes down.  Hodgkin and Huxley determined that the potassium channels share an important property with the sodium channels: potassium channels tend to open when the voltage inside the cell increases.  In this case, since potassium channels bring the voltage down, the potassium channels act as a negative feedback.  If the voltage increases, potassium channels will open, which will counteract the voltage change, lowering the voltage.</p>\r\n\r\n<p>There's another way in which potassium channels differ from sodium channels.  Sodium channels are fast, opening quickly in response to increased voltage.  Potassium channels are a bit more sluggish.  When the voltage increases, potassium channels take their time in opening, allowing the fast positive feedback of the sodium channels to cause the voltage to shoot up quickly.  But then, after a delay -- those lazy potassium channels take a whole millisecond or so to wake up -- the potassium channels get their act together and open up.  The result is that they can finally overpower the sodium channels and bring the voltage back down.  (The potassium channels actually get some help from the sodium channels tiring out and closing back up, but we aren't modeling that.)</p>\r\n\r\n<p>Let's see if we can add this effect of potassium channels to our model so that, by the combination of sodium and potassium, we can get this transient upward and downward excursion of voltage, that is a spike, in response to an input.</p>\r\n\r\n<p>First, we need another state variable to represent the state of the potassium channels.  We'll use the variable $w(t)$ to indicate how many potassium channels are open at time $t$.  Let's not be precise about what the actual values of $w$ are; we could say it's proportional to the number of open potassium channels.</p>\r\n\r\n<p>Next, we need to come up with a reasonable form for the change in $w$, i.e., $\\diff{w}{t}$.  $\\diff{w}{t}$ should depend on voltage, so that $w$ will increase when $v$ gets large.  For simplicity, let's make the equation for $w$ be a linear differential equation that depends on both $w$ and $v$.  As a first stab, let's try an equation of the form\r\n\\begin{align*}\r\n \\diff{w}{t} = v-\\gamma w\r\n\\end{align*}\r\nwhere $\\gamma$ is a positive parameter.</p>\r\n\r\n<p>If we pretend for a moment that $v$ is a constant number, we can analyze this equation.  It has one equilibrium: $w = v/\\gamma$.  Do you know how to show that this equilibrium is stable?  (Remember $\\gamma$ is positive, so the derivative of the right hand side with respect to $w$ will always be $-\\gamma$, a negative number.)</p>\r\n\r\n<p>What the equation $\\diff{w}{t}=v-\\gamma w$ does is make $w(t)$ evolve toward the number $v(t)/\\gamma$.  You can think of $v/\\gamma$ as a target for $w$ that $w$ is chasing.  Since $v$ is not really a fixed number, but instead evolves with time, this target will be a moving target for $w(t)$.</p>\r\n\r\n<p>Another property of the potassium channels is that they are slow.  To make $w(t)$ slow, we need $\\diff{w}{t}$ to be small.  How do we make it small?  We can simply multiply the expression for $\\diff{w}{t}$ by a small number.  If we call that small number $\\varepsilon$, then we can write the equation for $w$ as\r\n\\begin{align*}\r\n  \\diff{w}{t} = \\varepsilon (v-\\gamma w).\r\n\\end{align*}\r\nWith this addition of $\\varepsilon$, $w(t)$ still chases $v(t)/\\gamma$, but it just chases it more slowly.</p>\r\n\r\n<p>We've introduced two positive parameters.  $\\varepsilon$ controls the speed of $w(t)$, and $\\gamma$ controls how strongly the potassium channels depend on voltage.</p>\r\n\r\n<p>The model now captures how potassium channels respond to an increased voltage by slowly opening.  To complete the negative feedback effect of the potassium channels, we have to include in our equations the influence of potassium on voltage.  Remember, when the potassium channels open, they cause the voltage to go down.  In other words, they have a negative effect on the change in voltage $\\diff{v}{t}$.  Consistent with our simple-minded manner in deriving these equations, let's just subtract off $w$ from the $\\diff{v}{t}$ equation. The equation for $v$ becomes\r\n\\begin{align*}\r\n \\diff{v}{t} = -v(v-a)(v-1) -w.\r\n\\end{align*}\r\n</p>\r\n\r\n<p>Combining the $\\diff{v}{t}$ equation with the $\\diff{w}{t}$ equation, we now have a coupled system of two autonomous differential equations for our state variables $v$ and $w$.  They are coupled because the equation for $v$ depends on $w$ and the equation for $w$ depend on $v$.  These equations for the activity of a neuron are called the Fitzhugh-Nagumo equations, which are a simplified version of the Hodgkin-Huxley equations for a spiking neuron.</p>\r\n\r\n<p>Our remaining task is to analyze this two-dimensional system of equations and see what kind of behavior we'll get from it.  We can show how, for example, you can get a single spike of voltage from an input, where the voltage shoots up and then goes back down.  But, we'll stop here for now.</p>\r\n\r\n", "video_type": 1, "code": "simple_spiking_neuron_model_sodium_potassium_channels", "associated_applet": null, "keywords": [152, 67, 125, 151], "default_inline_caption": "", "date_modified": "2013-05-05T16:52:14Z", "publish_date": "2013-05-05", "date_created": "2013-05-05", "description": "", "subjects": [7, 10, 11], "thumbnail_height": null, "author_copyright": true, "highlight": false, "in_pages": [419], "title": "A simple spiking neuron model: sodium and potassium channels", "additional_credits": "", "thumbnail_width": null}, "pk": 66}, {"model": "midocs.videotype", "fields": {"description": "A video that is hosted on YouTube", "name": "YouTube video", "code": "youtube"}, "pk": 1}, {"model": "midocs.videotypeparameter", "fields": {"default_value": "", "parameter_name": "youtubecode", "video_type": 1}, "pk": 1}, {"model": "midocs.videotypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_WIDTH", "video_type": 1}, "pk": 2}, {"model": "midocs.videotypeparameter", "fields": {"default_value": "500", "parameter_name": "DEFAULT_HEIGHT", "video_type": 1}, "pk": 3}, {"model": "midocs.videoparameter", "fields": {"parameter": 1, "value": "52DCuZFysJU", "video": 33}, "pk": 91}, {"model": "midocs.videoparameter", "fields": {"parameter": 2, "value": "640", "video": 33}, "pk": 92}, {"model": "midocs.videoparameter", "fields": {"parameter": 3, "value": "360", "video": 33}, "pk": 93}, {"model": "midocs.videoparameter", "fields": {"parameter": 1, "value": "Ot3bDjmP2A4", "video": 43}, "pk": 121}, {"model": "midocs.videoparameter", "fields": {"parameter": 2, "value": "640", "video": 43}, "pk": 122}, {"model": "midocs.videoparameter", "fields": {"parameter": 3, "value": "360", "video": 43}, "pk": 123}, {"model": "midocs.videoparameter", "fields": {"parameter": 1, "value": "GqOgEjfJhlc", "video": 58}, "pk": 166}, {"model": "midocs.videoparameter", "fields": {"parameter": 2, "value": "640", "video": 58}, "pk": 167}, {"model": "midocs.videoparameter", "fields": {"parameter": 3, "value": "360", "video": 58}, "pk": 168}, {"model": "midocs.videoparameter", "fields": {"parameter": 1, "value": "DYhZWXdOoJ0", "video": 59}, "pk": 169}, {"model": "midocs.videoparameter", "fields": {"parameter": 2, "value": "640", "video": 59}, "pk": 170}, {"model": "midocs.videoparameter", "fields": {"parameter": 3, "value": "360", "video": 59}, "pk": 171}, {"model": "midocs.videoparameter", "fields": {"parameter": 1, "value": "rn-QNO09nsA", "video": 64}, "pk": 184}, {"model": "midocs.videoparameter", "fields": {"parameter": 2, "value": "640", "video": 64}, "pk": 185}, {"model": "midocs.videoparameter", "fields": {"parameter": 3, "value": "360", "video": 64}, "pk": 186}, {"model": "midocs.videoparameter", "fields": {"parameter": 1, "value": "H9yxE9yrH5w", "video": 65}, "pk": 187}, {"model": "midocs.videoparameter", "fields": {"parameter": 2, "value": "640", "video": 65}, "pk": 188}, {"model": "midocs.videoparameter", "fields": {"parameter": 3, "value": "360", "video": 65}, "pk": 189}, {"model": "midocs.videoparameter", "fields": {"parameter": 1, "value": "NueQZyzAz1w", "video": 66}, "pk": 190}, {"model": "midocs.videoparameter", "fields": {"parameter": 2, "value": "640", "video": 66}, "pk": 191}, {"model": "midocs.videoparameter", "fields": {"parameter": 3, "value": "360", "video": 66}, "pk": 192}, {"model": "micourses.assessmentcategory", "fields": {"name": "Exams"}, "pk": 1}, {"model": "micourses.assessmentcategory", "fields": {"name": "Quizzes"}, "pk": 2}, {"model": "micourses.assessmentcategory", "fields": {"name": "Projects"}, "pk": 3}, {"model": "micourses.assessmentcategory", "fields": {"name": "Homework"}, "pk": 4}, {"model": "micourses.assessmentcategory", "fields": {"name": "Groupwork"}, "pk": 5}, {"model": "micourses.assessmentcategory", "fields": {"name": "Problem sets"}, "pk": 6}, {"model": "micourses.assessmentcategory", "fields": {"name": "Participation"}, "pk": 7}, {"model": "micourses.assessmentcategory", "fields": {"name": "Gateway"}, "pk": 8}, {"model": "micourses.course", "fields": {"attendance_threshold_percent": 75, "semester": "Fall 2014", "short_name": "Math 1241", "code": "math_1241_fall_14", "end_date": "2014-12-10", "last_attendance_date": "2014-09-12", "attendance_end_of_week": "F", "sort_order": 6.0, "adjust_due_date_attendance": true, "track_attendance": true, "description": "Topics covered in the course Math 1241, <em>Calculus and Dynamical Systems in Biology</em> at the University of Minnesota.", "name": "Math 1241, Fall 2014", "days_of_week": "W, F", "active": true, "start_date": "2014-09-02", "numbered": true}, "pk": 5}, {"model": "micourses.courseassessmentcategory", "fields": {"rescale_factor": 1.0, "course": 5, "assessment_category": 1, "sort_order": 0.0, "number_count_for_grade": null}, "pk": 11}, {"model": "micourses.courseassessmentcategory", "fields": {"rescale_factor": 1.0, "course": 5, "assessment_category": 2, "sort_order": 0.0, "number_count_for_grade": 10}, "pk": 12}, {"model": "micourses.courseassessmentcategory", "fields": {"rescale_factor": 1.0, "course": 5, "assessment_category": 6, "sort_order": 0.0, "number_count_for_grade": 30}, "pk": 13}, {"model": "micourses.courseassessmentcategory", "fields": {"rescale_factor": 1.0, "course": 5, "assessment_category": 3, "sort_order": 0.0, "number_count_for_grade": 4}, "pk": 14}, {"model": "micourses.courseassessmentcategory", "fields": {"rescale_factor": 0.0, "course": 5, "assessment_category": 8, "sort_order": -1.0, "number_count_for_grade": null}, "pk": 15}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Initial bacteria growth model", "parent": 128, "sort_order": 1.0}, "pk": 127}, {"model": "micourses.threadsection", "fields": {"course": 5, "name": "Penicillin clearance model", "parent": null, "sort_order": 0.0}, "pk": 128}, {"model": "micourses.threadsection", "fields": {"course": 5, "name": "The derivative", "parent": null, "sort_order": 2.0}, "pk": 133}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Differentiation rules", "parent": 133, "sort_order": 3.0}, "pk": 137}, {"model": "micourses.threadsection", "fields": {"course": 5, "name": "Applications of differentiation", "parent": null, "sort_order": 4.0}, "pk": 140}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Minimization and maximization", "parent": 140, "sort_order": 5.0}, "pk": 145}, {"model": "micourses.threadsection", "fields": {"course": 5, "name": "Autonomous differential equations", "parent": null, "sort_order": 6.0}, "pk": 147}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Solution methods", "parent": 147, "sort_order": 7.0}, "pk": 149}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Solution to linear equations", "parent": 149, "sort_order": 8.0}, "pk": 150}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Graphical methods", "parent": 149, "sort_order": 9.0}, "pk": 151}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Stability of equilibria", "parent": 149, "sort_order": 10.0}, "pk": 152}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Bifurcations", "parent": 147, "sort_order": 11.0}, "pk": 154}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "An infectious disease model", "parent": 147, "sort_order": 12.0}, "pk": 155}, {"model": "micourses.threadsection", "fields": {"course": 5, "name": "Two dimensional autonomous differential equations", "parent": null, "sort_order": 13.0}, "pk": 157}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Biological models", "parent": 157, "sort_order": 14.0}, "pk": 158}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "An infectious disease model", "parent": 158, "sort_order": 15.0}, "pk": 159}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Dynamics of competition", "parent": 158, "sort_order": 16.0}, "pk": 160}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Predator-prey dynamics", "parent": 158, "sort_order": 17.0}, "pk": 161}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "A spiking neuron", "parent": 158, "sort_order": 18.0}, "pk": 162}, {"model": "micourses.threadsection", "fields": {"course": null, "name": "Problems", "parent": 157, "sort_order": 19.0}, "pk": 164}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 437.0, "available_before_assigned": false, "content_type": ["midocs", "page"], "final_due_date": "2014-09-12", "course": 5, "assessment_category": null, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 329, "section": 127, "individualize_by_student": true, "initial_due_date": "2014-09-12"}, "pk": 364}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 273.0, "available_before_assigned": true, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-10-15", "course": 5, "assessment_category": 2, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 67, "section": 137, "individualize_by_student": true, "initial_due_date": "2014-10-08"}, "pk": 395}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 274.0, "available_before_assigned": false, "content_type": ["midocs", "page"], "final_due_date": "2014-10-08", "course": 5, "assessment_category": null, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 400, "section": 137, "individualize_by_student": true, "initial_due_date": "2014-10-08"}, "pk": 396}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 277.0, "available_before_assigned": true, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-10-17", "course": 5, "assessment_category": 6, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 93, "section": 137, "individualize_by_student": false, "initial_due_date": "2014-10-17"}, "pk": 399}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 281.0, "available_before_assigned": false, "content_type": ["midocs", "page"], "final_due_date": "2014-10-24", "course": 5, "assessment_category": null, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 406, "section": 145, "individualize_by_student": true, "initial_due_date": "2014-10-24"}, "pk": 426}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 282.0, "available_before_assigned": true, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-10-31", "course": 5, "assessment_category": 6, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 104, "section": 145, "individualize_by_student": true, "initial_due_date": "2014-10-31"}, "pk": 427}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 0.0, "available_before_assigned": true, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-11-07", "course": 5, "assessment_category": 6, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 108, "section": 150, "individualize_by_student": false, "initial_due_date": "2014-11-07"}, "pk": 441}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 0.0, "available_before_assigned": true, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-11-07", "course": 5, "assessment_category": 6, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 36, "section": 151, "individualize_by_student": false, "initial_due_date": "2014-11-07"}, "pk": 443}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 2.0, "available_before_assigned": true, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-11-14", "course": 5, "assessment_category": 6, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 38, "section": 152, "individualize_by_student": false, "initial_due_date": "2014-11-14"}, "pk": 448}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 1.0, "available_before_assigned": false, "content_type": ["midocs", "page"], "final_due_date": "2014-11-12", "course": 5, "assessment_category": null, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 374, "section": 154, "individualize_by_student": true, "initial_due_date": "2014-11-12"}, "pk": 455}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 2.0, "available_before_assigned": false, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-11-21", "course": 5, "assessment_category": 3, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 111, "section": 154, "individualize_by_student": true, "initial_due_date": "2014-11-21"}, "pk": 456}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": -1.0, "available_before_assigned": false, "content_type": ["midocs", "page"], "final_due_date": "2014-11-14", "course": 5, "assessment_category": null, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 415, "section": 155, "individualize_by_student": true, "initial_due_date": "2014-11-14"}, "pk": 458}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 0.0, "available_before_assigned": true, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-11-21", "course": 5, "assessment_category": 6, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 45, "section": 155, "individualize_by_student": false, "initial_due_date": "2014-11-21"}, "pk": 459}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 1.0, "available_before_assigned": true, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-12-05", "course": 5, "assessment_category": 6, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 48, "section": 159, "individualize_by_student": false, "initial_due_date": "2014-12-05"}, "pk": 465}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 2.0, "available_before_assigned": true, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-12-10", "course": 5, "assessment_category": 2, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 115, "section": 160, "individualize_by_student": true, "initial_due_date": "2014-12-03"}, "pk": 468}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 0.0, "available_before_assigned": false, "content_type": ["midocs", "page"], "final_due_date": "2014-11-26", "course": 5, "assessment_category": null, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 381, "section": 161, "individualize_by_student": true, "initial_due_date": "2014-11-26"}, "pk": 469}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 1.0, "available_before_assigned": false, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-12-12", "course": 5, "assessment_category": 3, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 112, "section": 161, "individualize_by_student": true, "initial_due_date": "2014-12-12"}, "pk": 470}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 0.0, "available_before_assigned": false, "content_type": ["midocs", "page"], "final_due_date": "2014-12-03", "course": 5, "assessment_category": null, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 419, "section": 162, "individualize_by_student": true, "initial_due_date": "2014-12-03"}, "pk": 471}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 1.0, "available_before_assigned": true, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-12-12", "course": 5, "assessment_category": 6, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 113, "section": 162, "individualize_by_student": true, "initial_due_date": "2014-12-12"}, "pk": 472}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": null, "sort_order": 1.0, "available_before_assigned": false, "content_type": ["mitesting", "assessment"], "final_due_date": null, "course": 5, "assessment_category": null, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 55, "section": 164, "individualize_by_student": true, "initial_due_date": null}, "pk": 476}, {"model": "micourses.threadcontent", "fields": {"substitute_title": "", "instructions": "", "sort_order": 3.0, "available_before_assigned": false, "content_type": ["mitesting", "assessment"], "final_due_date": "2014-12-12", "course": 5, "assessment_category": 1, "optional": false, "attempt_aggregation": "Max", "assigned_date": null, "object_id": 56, "section": 164, "individualize_by_student": false, "initial_due_date": "2014-12-12"}, "pk": 477}, {"model": "mitesting.questiontype", "fields": {"name": "Exam free response question"}, "pk": 1}, {"model": "mitesting.questiontype", "fields": {"name": "Short answer"}, "pk": 2}, {"model": "mitesting.questiontype", "fields": {"name": "Worksheet"}, "pk": 3}, {"model": "mitesting.questiontype", "fields": {"name": "Multiple choice"}, "pk": 4}, {"model": "mitesting.questiontype", "fields": {"name": "General"}, "pk": 6}, {"model": "mitesting.question", "fields": {"question_type": 2, "question_spacing": null, "subjects": [], "solution_text": "<p>Let $E$ denote an equilibrium. To find the equilibria, we plug in ${{statevar}}_{ {{timevar}} +1}=E$ and ${{statevar}}_{{timevar}}=E$.  Then we solve for $E$.\r\n  \\begin{align*}\r\n  E - E &= \\frac{(E-{{par1}})(E-{{par2}})}{ {{par3}} }\\\\\r\n  0 &= (E-{{par1}})(E-{{par2}})\\\\\r\n  E &= {{par1}} \\quad \\text{or} \\quad E={{par2}}\r\n  \\end{align*}\r\n</p>\r\n", "keywords": [], "question_privacy": 0, "question_text": "<p>Consider the dynamical system\r\n  \\begin{align*}\r\n  {{statevar}}_{ {{timevar}} +1}-{{statevar}}_{{timevar}} = \\frac{({{statevar}}_{{timevar}} -{{par1}})({{statevar}}_{{timevar}}-{{par2}})}{ {{par3}} }, \\quad \\text{for ${{timevar}}=0,1,2,3,\r\n  \\ldots$ }\r\n  \\end{align*}\r\n  where ${{par1}}$, ${{par2}}$, and ${{par3}}$ are parameters, and ${{par3}} \\ne 0$.  Find all\r\n  equilibria.</p>\r\n", "customize_user_sympy_commands": false, "hint_text": "<p>Don't try to multiply out the quadratic. Just set ${{statevar}}_{ {{timevar}} +1}$ and ${{statevar}}_{{timevar}}$ equal to some variable that stands for the equilibrium value and solve for that variable.  Solving for the values of that equilibrium variable should be easy when you leave the quadratic in factored form.</p>", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 0, "name": "Find equilibria of quadratic discrete dynamical system with parameters 1", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [5], "computer_graded": false, "notes": null}, "pk": 32}, {"model": "mitesting.question", "fields": {"question_type": 2, "question_spacing": "medlargespacebelow", "subjects": [], "solution_text": "A plot $f({{x}})$\r\n{% applet \"graph_function\" f=fun xlabel=x  xmin=-10 xmax=10 ymin=-130 ymax=110 %}\r\n\r\nA plot of the solutions for all seven initial conditions\r\n\r\n{% applet \"solutions_autonomous_differential_equation_versus_time\" f=fun xmin=-10 xmax=10 nsols=4 x0a=initial1 x0b=initial2 x0c=initial3 x0d=initial4 ntsteps=100 showequilibria=1 tmax=0.3 xlabel=x %}\r\n", "keywords": [], "question_privacy": 0, "question_text": "Consider the dynamical system\r\n\\begin{align*}\r\n   \\diff{ {{x}} }{t} &= {{fun}}\\\\\r\n   {{x}}(0) & = {{x}}_0,\r\n\\end{align*}\r\nwhere ${{x}}_0$ is an initial condition.  Sketch the graph of the function $f({{x}}) = {{fun}}$.  Use the graph to sketch the solution ${{x}}(t)$ for each of the following initial conditions: ${{x}}_0 = {{ initial1|round:2 }}$, ${{x}}_0 = {{ a}}$, ${{x}}_0 = {{ initial2|round:2 }}$, ${{x}}_0 = {{ b}}$, ${{x}}_0 = {{ initial3|round:2 }}$, ${{x}}_0 = {{ c}}$, and ${{x}}_0={{ initial4|round:2 }}$.", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 0, "name": "Sketch solution of cubic autonomous differential equation from equation", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [2, 6, 10], "computer_graded": false, "notes": ""}, "pk": 193}, {"model": "mitesting.question", "fields": {"question_type": 3, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "In the SIS model of an infectious disease, individuals are either infected or susceptible to infection, so that infected individuals become susceptible once again when they recover.  If the state variable $I(t)$ is the fraction of infected individuals at time $t$, the evolution of the model can be written as\r\n\\begin{align*}\r\n  \\diff{I}{t} = \\alpha I (1-I) - \\mu I,\r\n\\end{align*}\r\nwhere $\\alpha$  and $\\mu$ (&ldquo;alpha&rdquo; and &ldquo;mu&rdquo;) are positive parameters.", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 2, "name": "SIS model, meaning of terms", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [], "computer_graded": true, "notes": ""}, "pk": 218}, {"model": "mitesting.question", "fields": {"question_type": 2, "question_spacing": null, "subjects": [7, 10, 11], "solution_text": "<p>The $u$-nullcline is composed of the lines $u=0$ and $v=2$, which are shown by the thin blue lines in the phase plane plot below.  The $v$-nullcline is composed othe lines $v=0$ and $u=2$, which are shown by the thick green lines below.  The equilibrium are the two points where they cross: $(u,v)=(0,0)$ and $(u,v)=(3,2)$.  The equilibria are shown by the orange circles. </p>\r\n\r\n<p>By plugging in test points, one can determine the direction arrows in the different regions of the phase plane. Starting at the initial condition $(u(0),u(0))=(1,1)$, the trajectory must first move upward and to the right until it crosses one of the two nullclines.  One cannot tell just from the fact that it is moving upward and to the right which nullcline it will hit. A trajectory consistent with the direction arrows is shown by the cyan curve, which crosses $u$-nullcline and then begins to move upward and to the left.  Another trajectory consistent with the direction arrows is the red curve, which crosses the $v$-nullcline and then begins to move downward and to the right.</p>\r\n\r\n{% image \"phase_plane_example_8_solution\" %}\r\n", "keywords": [67, 154, 125, 142, 153, 145], "question_privacy": 0, "question_text": "For the following system of differential equations, plot the nullclines in the phase plane:\r\n\\begin{align*}\r\n  \\diff{u}{t} &= -u(v-2)\\\\\r\n  \\diff{v}{t} &= v(3-u).\r\n\\end{align*}\r\nFind the equilibria and indicate their location on the phase plane.\r\nPlot direction arrows and a plausible solution in the phase plane for the initial conditions $r(0)=1$ and $s(0)=1$.\r\n", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 0, "name": "Plot nullclines, equilibria, direction arrows, and solution in phase plane 2", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [], "computer_graded": false, "notes": null}, "pk": 263}, {"model": "mitesting.question", "fields": {"question_type": 2, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "A population of {{prey_plural}} of size ${{x}}(t)$ is the chief food source of a population {{predator_plural}} of size ${{y}}(t)$.  The population sizes evolve according to the equations\r\n\\begin{align*}\r\n  \\diff{ {{x}} }{t} &= \\alpha {{x}} - \\beta {{x}}{{y}}\\\\\r\n  \\diff{ {{y}} }{t} &= -\\gamma {{y}} + \\delta {{x}}{{y}}\r\n\\end{align*}\r\nwhere $\\alpha = {{alpha}}$, $\\beta = {{beta}}$, $\\gamma={{gamma}}$, and $\\delta = {{delta}}$.", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "page-break-ok", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 0, "name": "Predator prey", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [5], "computer_graded": false, "notes": ""}, "pk": 281}, {"model": "mitesting.question", "fields": {"question_type": 2, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "If $v(t)$ represents the voltage of a neuron at time time and $w(t)$ represents the state of its potassium channels at time $t$, then a model of their evolution is\r\n\\begin{align*}\r\n\\diff{v}{t} &= -v(v-a)(v-1) -w\\\\\r\n\\diff{w}{t} &= \\varepsilon (v-\\gamma w)\r\n\\end{align*}\r\nwhere $v_0$ and $w_0$ are the initial conditions, $a$, $\\varepsilon$, and $\\gamma$ are parameters.  We'll set $a={{a}}$, $\\varepsilon={{epsilon}}$, and $\\gamma={{gamma}}$.", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "page-break-ok", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 0, "name": "Simple neuron model", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [12], "computer_graded": false, "notes": ""}, "pk": 284}, {"model": "mitesting.question", "fields": {"question_type": 6, "question_spacing": null, "subjects": [], "solution_text": "<p>The linear approximation is the same thing as the tangent line.  The equation for the linear approximation around ${{x}}={{b}}$ is\r\n$$L({{x}}) = {{f}}'({{b}})({{x}}-{{b}}) + {{f}}({{b}}).$$\r\n</p>\r\n\r\n<p>To calculate the derivative of ${{f}}$, we expand the quadratic to write ${{f}}$ as\r\n$${{f}}({{x}}) = {{F_expand}}.$$\r\nThe derivative is\r\n\\begin{align*}\r\n{{f}}'({{x}}) &= {{dF}}.\r\n\\end{align*}\r\nTherefore ${{f}}'({{b}}) = {{dF_b}}$ and ${{f}}({{b}}) = {{F_b}}$, and the linear approximation is\r\n\\begin{align*}\r\nL( {{x}} ) &= {{dF_b}}({{x}}-{{b}})  {{F_b|addplus}}\\\\\r\n  &={{answer}}.\r\n\\end{align*}", "keywords": [], "question_privacy": 0, "question_text": "Find the linear approximation to the function\r\n\\[\r\n{{f}}( {{x}} ) =   {{F}}\r\n\\]\r\naround ${{x}}= {{b}}$.\r\n<br>\r\n$L( {{x}} ) =${% answer \"answer\" %}\r\n<br/>", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 0, "name": "linear approximation, cubic, x^2*(x-a)", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [9, 22], "computer_graded": true, "notes": ""}, "pk": 366}, {"model": "mitesting.question", "fields": {"question_type": 3, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "Chain rule problems can be tricky.  But, the only ones we'll deal with are those of the form $f(x)=e^{p(x)}$ or $f(x)=\\ln(p(x))$ where $p(x)$ is a polynomial.  Compute the derivative of the following functions.", "customize_user_sympy_commands": true, "hint_text": "", "css_class": "page-break-ok", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 2, "name": "Chain rule, exp or log of polynomial, worksheet", "allowed_user_sympy_commands": [2], "allowed_sympy_commands": [2, 9], "computer_graded": true, "notes": ""}, "pk": 477}, {"model": "mitesting.question", "fields": {"question_type": 3, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "Let $g$ be the function $g(y)={{g}}$.", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 2, "name": "extrema of e(cubic)", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [2, 9, 12, 13, 19, 22], "computer_graded": true, "notes": ""}, "pk": 525}, {"model": "mitesting.question", "fields": {"question_type": 3, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "Solve the following differential equations.", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "page-break-ok", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 2, "name": "solve simple linear differential equations", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [2], "computer_graded": true, "notes": ""}, "pk": 564}, {"model": "mitesting.question", "fields": {"question_type": 3, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "If we aren't given the initial conditions, we cannot determine the exact solution of the differential equation.  For the following differential equations, give the general solution, which will be a function with an undetermined constant $C$.", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 2, "name": "solve simple linear differential equations, general solutions", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [2], "computer_graded": true, "notes": ""}, "pk": 565}, {"model": "mitesting.question", "fields": {"question_type": 2, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "Let ${{f}}(x) = {{fun}}$.", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 0, "name": "Linear approximation, polynomial*log(x)", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [2, 5, 9], "computer_graded": false, "notes": ""}, "pk": 586}, {"model": "mitesting.question", "fields": {"question_type": 3, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "Consider the SIR model for an infectious disease,\r\n\\begin{align*}\r\nS'(t) &= - SI\\\\\r\nI'(t) &=  SI - 0.5 I\r\n\\end{align*}\r\nwhere we've set the parameters $\\alpha=1$ and $\\mu=0.5$.  Since $S(t)$ and $I(t)$ represent the fraction of the population that is susceptible and infected, these state variables are always between {% answer \"zero\" size=5 %} and {% answer \"one\" size=5%} (enter answers in increasing order).", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "page-break-ok", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 2, "name": "SIR model, regions of increase and decrease", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [22], "computer_graded": true, "notes": ""}, "pk": 609}, {"model": "mitesting.question", "fields": {"question_type": 6, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "A population of {{animalx_plural}} of size ${{x}}(t)$ and a\r\n  population of {{animaly_plural}} of size ${{y}}(t)$ compete for {{limited_item}} {{location_preposition}} a {{location}}, where $t$ is time in years.  If either population were alone\r\n  {{location_preposition}} the {{location}}, the {{location}} could support a population of {{Kx}}\r\n   {{animalx_plural}} (i.e., the carrying capacity for {{animalx_plural}} alone would be {{Kx}}) or a population of {{Ky}}\r\n   {{animaly_plural}} (i.e., the carrying capacity for {{animaly_plural}} alone would be {{Ky}}).  Imagine that each additional {{animalx}}\r\n  effectively decreases the carrying capacity for {{animaly_plural}} by ${{c}}$ and vice\r\n  versa.  The result is that the competition of the species can be\r\n  modeled by\r\n  \\begin{align*}\r\n    \\diff{ {{x}} }{t} &= {{rx}}{{x}}\\left(1 - \\frac{ {{x}} + {{c}}{{y}} }{ {{Kx}} } \\right)\\\\\r\n    \\diff{ {{y}} }{t} &= {{ry}}{{y}}\\left(1 - \\frac{ {{y}} + {{c}}{{x}} }{ {{Ky}} } \\right).\r\n  \\end{align*}\r\n  \r\nFollow the below steps to analyze the system.  Use this phase plane applet to report the results of the analysis.\r\n\r\n{% applet \"animal_competition_determine_phase_plane\" Kx=Kx Ky=Ky c=c x0=x0 y0=y0 xlabel=x ylabel=y xmax=xmax ymax=ymax xmin=xmin ymin=ymin showshowpoint=1 answer_A2indifferentregion=one answer_A3indifferentregion=one answer_A4indifferentregion=one answer_E1correct=one  answer_E2correct=one answer_E3correct=one answer_E4correct=one answer_nEscorrect=one answer_vector1XN1correctangle=one answer_vector1XN2correctangle=one answer_vector2XN1correctangle=one answer_vector2XN2correctangle=one answer_vector1YN1correctangle=one answer_vector2YN1correctangle=one answer_vector1YN2correctangle=one answer_vector2YN2correctangle=one answer_vector1correctangle=one answer_vector2correctangle=one answer_vector3correctangle=one answer_vector4correctangle=one answer_vectorsXN1correctlocations=one answer_vectorsXN2correctlocations=one answer_vectorsYN1correctlocations=one answer_vectorsYN2correctlocations=one answer_xnull1correct=one answer_xnull2correct=one answer_ynull1correct=one answer_ynull2correct=one answer_validtrajectory=one answer_correcttrajectoryend=one answer_correctinitial=one %}\r\n", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 0, "name": "Animal competition", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [5, 6, 11, 21], "computer_graded": true, "notes": ""}, "pk": 617}, {"model": "mitesting.question", "fields": {"question_type": 2, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "Let $f(x) ={{minus_a_flip|invisible_one}}\\ln({{c|invisible_one}}x)  {{flip|invisible_one|addplus}} \\sqrt{ {{b|invisible_one}} x} $.\r\n", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 0, "name": "critical points of log minus square root, no graph", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [2, 6, 9, 12, 15, 19, 21, 22], "computer_graded": false, "notes": ""}, "pk": 622}, {"model": "mitesting.question", "fields": {"question_type": 2, "question_spacing": null, "subjects": [], "solution_text": "<p>Denote the right hand side of the differential equation by $f({{x}})={{fun}}$.  Then, the Forward Euler algorithm gives ${{x}}(t+\\Delta t)$ in terms of the solution ${{x}}(t)$ at the earlier time $t$ and the slope $f({{x}}(t))$:\r\n\\begin{align*}\r\n  {{x}}(t+\\Delta t) \\approx {{x}}(t) + f({{x}}(t))\\Delta t.\r\n\\end{align*}\r\nGiven that ${{x}}(0)={{initial}}$, $f({{x}}(0)) = f({{initial}})={{ fun_of_initial|evalf:5 }}$, and $\\Delta t={{deltat}}$, the first Euler step gives\r\n\\begin{align*}\r\n  {{x}}({{t1}}) \\approx {{initial}} + ({{ fun_of_initial|evalf:5 }}) ({{deltat}})  \\approx {{ fe1|evalf:5 }}.\r\n\\end{align*}\r\n</p>\r\n\r\n<p>Next, since $f({{ fe1|evalf:5 }})  \\approx {{ fun_of_fe1|evalf:5 }}$, the second Euler step gives\r\n\\begin{align*}\r\n  {{x}}({{t2}}) \\approx {{ fe1|evalf:5 }} + ({{ fun_of_fe1|evalf:5 }})({{deltat}}) \\approx {{ fe2|evalf:5 }}.\r\n\\end{align*}\r\n</p>\r\n\r\n<p>Lastly, since $f({{ fe2|evalf:5 }})  \\approx {{ fun_of_fe2|evalf:5 }}$, the third Euler step gives\r\n\\begin{align*}\r\n  {{x}}({{t3}}) \\approx {{ fe2|evalf:5 }} + ({{ fun_of_fe2|evalf:5 }})({{deltat}}) \\approx {{ fe3|evalf:5 }}.\r\n\\end{align*}\r\n</p>", "keywords": [], "question_privacy": 0, "question_text": "Estimate the solution of the differential equation\r\n\\begin{align*}\r\n  \\diff{ {{x}} }{t} &= {{fun}}\\\\\r\n  {{x}}(0) &= {{initial}},\r\n\\end{align*}\r\nusing the Forward Euler algorithm.  Use a time step $\\Delta t= {{deltat}}$ to estimate ${{x}}({{t3}})$.", "customize_user_sympy_commands": false, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 0, "name": "Forward Euler, logarithm of squared differential equation, three steps", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [2, 10, 11], "computer_graded": false, "notes": ""}, "pk": 633}, {"model": "mitesting.question", "fields": {"question_type": 3, "question_spacing": null, "subjects": [], "solution_text": "", "keywords": [], "question_privacy": 0, "question_text": "Calculate the following derivatives.", "customize_user_sympy_commands": true, "hint_text": "", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 2, "name": "quotient rule", "allowed_user_sympy_commands": [2], "allowed_sympy_commands": [2, 9], "computer_graded": true, "notes": ""}, "pk": 656}, {"model": "mitesting.question", "fields": {"question_type": 3, "question_spacing": "tinyspacebelow", "subjects": [], "solution_text": "<p>Let $f({{x}}) = {{fun}}$.  The equilibria are points where $\\diff{ {{x}} }{t}=0$, i.e., where \r\n$f({{x}}) = 0$.  If ${{x}}_e$ is an equilibrium, then the equilibrium must satisfy\r\n$${{fun_xe}}=0.$$\r\nSince the exponential cannot be zero, the only possibilities are that\r\n$${{quad_xe}}=0$$\r\nor\r\n$${{quad_factored_xe}}=0.$$\r\nTherefore the equilibria are ${{x}}_e={{E1}}$ and ${{x}}_e={{E2}}$.</p>\r\n\r\n<p>To determine stability, we need to evaluate the derivative of $f$ at the equilibria.  Using the product rule, \r\n\\begin{align*}\r\nf'({{x}}) &= {{fprime_sub}}\\\\\r\n &= {{fprime}}.\r\n\\end{align*}\r\nSince \r\n$$f'({{E1}}) = {{fprime_E1}} {% if E1_stable %}<{%else%}>{%endif%}0,$$\r\nthe equilibrium ${{x}}_e={{E1}}$ is {% if not E1_stable %}un{%endif%}stable.\r\nSince \r\n$$f'\\left({{E2}}\\right) = {{fprime_E2}} {% if E2_stable %}<{%else%}>{%endif%}0,$$\r\nthe equilibrium ${{x}}_e={{E2}}$ is {% if not E2_stable %}un{%endif%}stable.</p>\r\n\r\n<p>In increasing order, the equilibria are ${{x}}_e = {{ Es|round:5 }}$ and their stability is ${{stability}}$.</p>\r\n\r\n<p>To draw the vector field, draw the arrows toward the stable equilibrium and away from the unstable equilibrium.  The resulting phase line is shown below.</p>\r\n\r\n{% applet \"phase_line_equilibria_vector_field\" f=fun_rescaled xmin=xmin xmax=xmax Es=Es %}\r\n", "keywords": [], "question_privacy": 0, "question_text": "For the dynamical system\r\n\\begin{align*}\r\n   \\diff{ {{x}} }{t} &= {{fun}},\r\n\\end{align*}\r\nfind all equilibria and analytically determine their stability (i.e., use the stability theorem).  Using this information, draw a phase line diagram with equilibria and vector field.  Use solid circles for stable equilibria and open circles for unstable equilibria.\r\n\r\n<p>Equilibria: {% answer \"Es\" %}<br/>\r\nEnter in increasing order, separated by commas.</p>\r\n\r\n<p>Stability of equilibria: {% answer \"stability\" size=30 %}<br/>\r\nSpecify the stability of each equilibrium in the same order as above. Enter <tt>stable</tt> if an equilibrium is stable or <tt>unstable</tt> if it is unstable. Separate answers by commas.</p>\r\n\r\n\r\n{% applet \"phase_line_determine_equilibria_vector_field\" n_e=0 answer_e1=E1sort  answer_e2=E2sort  answer_e1stable=E1sort_stable answer_e2stable=E2sort_stable answer_n_e=two answer_dirseg1=dir1 answer_dirseg2=dir2 answer_dirseg3=dir3 xmin=xmin xmax=xmax dx=dx xlabel=x width=600 %}", "customize_user_sympy_commands": false, "hint_text": "If rounding, include at least 5 significant digits.\r\n\r\n<p>Online, for the phase line, drag the slider $n_e$ to specify the number of equilibria. Drag the red points to the location of the equilibria. You can click on a point to change it between open and solid. Click the segments between equilibria to show a direction field. Clicking the segment again changes the direction of the vectors.</p>", "css_class": "", "show_solution_button_after_attempts": 0, "description": "", "solution_privacy": 2, "name": "Calculate stability of equilibria of differential equation analytically", "allowed_user_sympy_commands": [], "allowed_sympy_commands": [2, 6, 9, 10, 17, 21, 22], "computer_graded": true, "notes": ""}, "pk": 660}, {"model": "mitesting.questionsubpart", "fields": {"question": 218, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "We don't need to separately track susceptible individuals because each individual is either susceptible or infected.  The fraction of susceptible individuals is $1-I$.", "question_text": "Why don't we need a state variable to track the fraction of susceptible individuals?  Because each individual is either {% answer \"susceptible_intro\" select=1 %} or {% answer \"infected_intro\" select=1 %}.  In this model, we don't allow individuals to be in any other state (like recovered or removed).\r\n\r\n<p>Because of this fact, we can write the fraction of susceptible individuals in terms of the state variable $I$.  If the fraction of infected individual is $I$, then the fraction of susceptible individuals is {% answer \"one_minus_I\" size=10 %}.", "sort_order": 0.0, "css_class": ""}, "pk": 296}, {"model": "mitesting.questionsubpart", "fields": {"question": 218, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "<p>The term $\\alpha I (1-I)$ is the rate at which susceptible individuals get infected.  Since a susceptible person needs to encounter an infected person to get the infection, the rate is proportional both to the fraction $I$ of infected individuals and the fraction $1-I$ of susceptible individuals.  The parameter $\\alpha$ captures how likely it is for a susceptible person to encounter an infected person and then subsequently get infected.</p>\r\n\r\n<p>The term $-\\mu I$ is the rate at which infected individuals recover and become susceptible again.  This rate is just proportional to the number of infected individuals.  The parameter $\\mu$ captures how quickly infected individuals recover.</p>", "question_text": "Explain the meaning of the two terms on the right hand side of the differential equation, including the meaning of the two parameters $\\alpha$ and $\\mu$.<p>\r\n\r\nThe term $\\alpha I (1-I)$ is the rate at which {% answer \"susceptible\" select=1 %} individuals {% answer \"get_infected\" select=1 %}.  Since a {% answer \"susceptible\" select=1 %} person needs to encounter an {% answer \"infected\" select=1 %} person to get the infection, the rate is proportional both to the fraction {% answer \"I\" size=6 %} of infected individuals and the fraction {% answer \"one_minus_I\" size=6 %} of susceptible individuals.  (Write an answer in terms of the state variable in the last two blanks.)  The parameter $\\alpha$ captures how likely it is for a {% answer \"susceptible\" select=1 %} person to encounter an {% answer \"infected\" select=1 %} person and then subsequently {% answer \"get_infected\" select=1 %}.</p>\r\n\r\n<p>The term $-\\mu I$ is the rate at which {% answer \"infected\" select=1 %} individuals {% answer \"recover\" select=1 %} and become {% answer \"susceptible\" select=1 %} again.  This rate is just proportional to the number of {% answer \"infected\" select=1 %} individuals.  The parameter $\\mu$ captures how quickly {% answer \"infected\" select=1 %} individuals {% answer \"recover\" select=1 %}.</p>", "sort_order": 0.0, "css_class": ""}, "pk": 297}, {"model": "mitesting.questionsubpart", "fields": {"question": 281, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "<p>The ${{x}}$-nullcline is the equation where $\\diff{ {{x}} }{t} = 0$.  This is true when\r\n\\begin{align*}\r\n {{alpha}} {{x}} - {{beta}}{{x}}{{y}}=0,\r\n\\end{align*}\r\nwhich, factoring out the ${{x}}$, becomes\r\n\\begin{align*}\r\n  {{x}}({{alpha}} - {{beta}}{{y}})=0.\r\n\\end{align*}\r\nThe ${{x}}$-nullcline therefore consists of two perpendicular line segments:\r\n$${{x}}=0$$\r\nand \r\n$${{y}} = \\frac{ {{alpha}} }{ {{beta}} } = {{ xnullyvalue|evalf:3 }}.$$  The nullclines are shown by the solid blue lines in below phase plane.</p>\r\n\r\n\r\n<p>The ${{y}}$-nullcline is the equation where $\\diff{ {{y}} }{t} = 0$.  This is true when\r\n\\begin{align*}\r\n- {{gamma}} {{y}} + {{delta}}{{x}}{{y}}=0,\r\n\\end{align*}\r\nwhich, factoring out the ${{y}}$, becomes\r\n\\begin{align*}\r\n  {{y}}(-{{gamma}} + {{delta}}{{x}})=0.\r\n\\end{align*}\r\nThe ${{y}}$-nullcline therefore consists of two perpendicular line segments:\r\n$${{y}}=0$$\r\nand \r\n$${{x}} = \\frac{ {{gamma}} }{ {{delta}} } = {{ ynullxvalue|evalf:3 }}.$$  The nullclines are shown by the dashed green lines in below phase plane.</p>\r\n\r\n{% applet \"predator_prey_phase_plane_solution\" alpha=alpha bet=beta gamm=gamma delta=delta x0=x0 y0=y0 xlabel=x ylabel=y %}\r\n\r\n\r\n", "question_text": "Calculate the nullclines and plot them on the phase plane.  To help you, we show a phase plane plot below.  Dotted lines are included as a hint, but they are not intended to be complete.  Be sure to label the nullclines.", "sort_order": 0.0, "css_class": ""}, "pk": 413}, {"model": "mitesting.questionsubpart", "fields": {"question": 281, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "There are two equilibria, the two points where the nullclines cross.  One is the origin $({{x}},{{y}})=(0,0)$.  The other is the point $({{x}},{{y}}) = ({{ Ex|evalf:3 }},{{ Ey|evalf:3 }})$, the intersection of ${{y}} = {{ Ey|evalf:3 }}$ and ${{x}}={{ Ex|evalf:3 }}$.  The equilibria are indicated by the open red circles in the above phase plane.", "question_text": "Identify all equilibria.  Give their values and show them in the phase plane.", "sort_order": 0.0, "css_class": ""}, "pk": 414}, {"model": "mitesting.questionsubpart", "fields": {"question": 281, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "Sample direction vector are shown by the black arrows in the above phase plane.", "question_text": "Sketch a direction arrow in each of the regions of the phase plane divided by the nullclines.   You only need to consider the part of the phase plane where ${{x}}(t) \\ge 0 $ and ${{y}}(t) \\ge 0$.", "sort_order": 0.0, "css_class": ""}, "pk": 415}, {"model": "mitesting.questionsubpart", "fields": {"question": 281, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "Sample direction vectors are shown by the purple arrows in the above phase plane.", "question_text": "Sketch a direction arrow on each segment of each nullcline.", "sort_order": 0.0, "css_class": ""}, "pk": 416}, {"model": "mitesting.questionsubpart", "fields": {"question": 281, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "The initial condition $({{x}},{{y}})=({{x0}},{{y0}})$ is shown by the green point in the above phase plane.  A plausible solution is the shown by the cyan ellipse.  A more accurate solution can be obtained with the {% intlink \"lotka_volterra_phase_plane_versus_time_population_display\" class=\"applet\" %}Lotka-Volterra applet{%endintlink%}.\r\n\r\n<p>Given the information we have determined so far, another plausible solution would be to spiral in toward the equilibrium $({{ Ex|evalf:3 }},{{ Ey|evalf:3 }})$.  From what we've learned so far, we can't decide what is the correct solution (other than by using the {% intlink \"lotka_volterra_phase_plane_versus_time_population_display\" class=\"applet\" %}Lotka-Volterra applet{%endintlink%}), so any solution that is consistent with the direction arrows would be given full credit.</p>", "question_text": "Sketch a plausible solution in the phase plane starting at the initial condition of {{x0}} {{animalx_plural}} and {{y0}} {{animaly_plural}}, i.e.,  $({{x}}(0),{{y}}(0))=({{x0}},{{y0}})$.  The solution should be consistent with your direction arrows.<br/>\r\n\r\n{% applet \"predator_prey_bare_phase_plane\" alpha=alpha bet=beta gamm=gamma delta=delta xlabel=x ylabel=y %}", "sort_order": 0.0, "css_class": "page-break-ok"}, "pk": 417}, {"model": "mitesting.questionsubpart", "fields": {"question": 284, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "<p>The $v$-nullclines is the curve $\\diff{v}{t}=0$, i.e., \r\n\\begin{align*}\r\n 0 &= -v(v-{{a}})(v-1) -w.\r\n\\end{align*}\r\nSolving for $w$, the nullcline equation is the cubic\r\n\\begin{align*}\r\n w &= -v(v-{{a}})(v-1),\r\n\\end{align*}\r\nwhich is the solid blue curves in the below phase plane.</p>\r\n\r\n<p>The $w$-nullcline is the curve $\\diff{w}{t} = 0$, i.e., \r\n\\begin{align*}\r\n0=\\varepsilon (v-{{gamma}} w).\r\n\\end{align*}\r\nSolving for $w$, the nullcline is the linear equation\r\n\\begin{align*}\r\n  w = {{ one_over_gamma|evalf:3 }},\r\n\\end{align*}\r\nwhich is the dashed green line in the below phase plane.</p>\r\n\r\n\r\n{% applet \"neuron_model_phase_plane_solution\" gamm=gamma v01=v01 v02=v02 a=a %}\r\n", "question_text": "Calculate the nullclines and plot them on the phase plane.  To help you, we show a phase plane plot below.  Dotted lines are included as a hint, but they are not intended to be complete.  Be sure to label the nullclines.", "sort_order": 0.0, "css_class": ""}, "pk": 427}, {"model": "mitesting.questionsubpart", "fields": {"question": 284, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "The nullclines cross in only one point, at the origin $(v,w)=(0,0)$.  This equilibrium is shown by the open red circle in the above phase plane.", "question_text": "Identify all equilibria.  Give their values and show them in the phase plane.", "sort_order": 0.0, "css_class": ""}, "pk": 428}, {"model": "mitesting.questionsubpart", "fields": {"question": 284, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "The direction vectors are shown by the black arrows in the above phase plane.  Since $\\varepsilon = {{epsilon}}$ is small, $v$ tends to move faster than $w$, and the vectors tend to point in more horizontal directions.", "question_text": "Sketch a direction arrow in each of the regions of the phase plane divided by the nullclines.", "sort_order": 0.0, "css_class": ""}, "pk": 429}, {"model": "mitesting.questionsubpart", "fields": {"question": 284, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "The direction arrows on the nullclines are shown by the purple arrows.  When on the $v$-nullcline, the arrows point vertically despite $\\varepsilon$ being small, because $v$ does not change at all on the $v$-nullcline.", "question_text": "Sketch a direction arrow on each segment of each nullcline.", "sort_order": 0.0, "css_class": ""}, "pk": 430}, {"model": "mitesting.questionsubpart", "fields": {"question": 284, "hint_text": "", "question_spacing": "smallspacebelow", "solution_text": "The initial condition $(v(0),w(0)) = ({{v02}},0)$ is shown by the orange point.  A trajectory is not shown on the phase plane, but you can use the {% intlink \"fitzhugh_nagumo_neuron_model_versus_time_phase_plane\" class=\"applet\" %}Fitzhugh-Nagumo neuron model applet{%endintlink%} to explore what the trajectory would look like.  The trajectory should go mainly left back to the equilibrium.  (It actually has to go upward a little bit until it crosses the $w$-nullcline and comes back down, but that is a small detail.)", "question_text": "Suppose the neuron has received a small input so its voltage starts at $v(0)={{v02}}$ with potassium channels at $w(0)=0$.  Sketch a plausible solution in the phase plane starting at that initial condition.  The solution should be consistent with your direction arrows.<br/>\r\n", "sort_order": 0.0, "css_class": ""}, "pk": 431}, {"model": "mitesting.questionsubpart", "fields": {"question": 284, "hint_text": "", "question_spacing": "smallspacebelow", "solution_text": "<p>The initial condition $(v(0),w(0)) = ({{v01}},0)$ is shown by the green point.  A trajectory is not shown on the phase plane, but you can use the {% intlink \"fitzhugh_nagumo_neuron_model_versus_time_phase_plane\" class=\"applet\" %}Fitzhugh-Nagumo neuron model applet{%endintlink%} to explore what the trajectory would look like.</p>\r\n\r\n<p>The trajectory should go mainly to the right and somewhat upward until it cross the $v$-nullcline at a large voltage.  By the time it crosses the $v$-nullcline, the trajectory will have curved to be moving straight upward.  Above the $v$-nullcline, the trajectory moves upward and to the left.  Once $w$ increases past $w \\approx {{ vnullrightmax|evalf:2 }}$ so that it can move leftward without hitting the $v$-nullcline, the trajectory moves leftward, making a large loop, angling downward once it crosses the the $w$-nullcline and moving back toward the equilibrium once it cross the $v$-nullcline at the left.  This large excursion is the action potential, or spike, of the neuron.</p>", "question_text": "Suppose the neuron has received a large input so its voltage starts at $v(0)={{v01}}$ with potassium channels at $w(0)=0$.  Sketch a plausible solution in the phase plane starting at that initial condition.  The solution should be consistent with your direction arrows.<br/>\r\n\r\n{% applet \"neuron_model_bare_phase_plane\" a=a %}\r\n", "sort_order": 0.0, "css_class": "page-break-ok"}, "pk": 432}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de1}}$", "question_text": "${{e1}}$:  {% answer \"de1\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 699}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de2}}$", "question_text": "${{e2}}$:  {% answer \"de2\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 700}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de3}}$", "question_text": "${{e3}}$:  {% answer \"de3\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 701}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de4}}$", "question_text": "${{e4}}$:  {% answer \"de4\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 702}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de5}}$", "question_text": "${{e5}}$:  {% answer \"de5\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 703}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de6}}$", "question_text": "${{e6}}$:  {% answer \"de6\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 704}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de7}} = \\frac{2(x-1)}{(x-1)^2}  = \\frac{2}{x-1}$.  (Stopping with the first expression is OK.)\r\n", "question_text": "${{e7sub}}={{e7}}$:  {% answer \"de7\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 705}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de8}}$", "question_text": "${{e8}}$:  {% answer \"de8\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 706}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de9}}$", "question_text": "${{e9}}$:  {% answer \"de9\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 707}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de10}}$", "question_text": "${{e10}}$:  {% answer \"de10\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 708}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de11}}$", "question_text": "${{e11}}$:  {% answer \"de11\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 714}, {"model": "mitesting.questionsubpart", "fields": {"question": 477, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$\\displaystyle {{de12}}$", "question_text": "${{e12}}$:  {% answer \"de12\" size=50 %}", "sort_order": 0.0, "css_class": ""}, "pk": 715}, {"model": "mitesting.questionsubpart", "fields": {"question": 525, "hint_text": "Online, you can enter a square root such as $\\sqrt(2)$ as <tt>sqrt(2)</tt> or you can round your answer to at least 3 significant digits.", "question_spacing": "tinyspacebelow", "solution_text": "To find the critical points, we look for points where $g'(y)$ is zero or not defined.\r\n\\begin{align*}\r\n  g'(y) &= {{gprime}}\r\n\\end{align*}\r\nThe derivative is always defined and is zero if\r\n\\begin{align*}\r\n   {{gprime}} &=0\\\\\r\n   {{gprime_poly}} &=0\\\\\r\n   y^2&=\\frac{1}{3}\\\\\r\n   y &=\\pm \\frac{1}{\\sqrt{3}}\r\n\\end{align*}\r\nTherefore, the critical points are $y=\\pm 1/\\sqrt{3}$, or $y= {{ critical_points|evalf:3 }}$.", "question_text": "Find the critical points of $g$.<br/>\r\n$y=$ {% answer \"critical_points\" %}<br/>\r\nSeparate multiple answers by commas.", "sort_order": 0.0, "css_class": ""}, "pk": 812}, {"model": "mitesting.questionsubpart", "fields": {"question": 525, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$g'(y) \\gt 0$ if $-1/\\sqrt{3} \\lt y \\lt 1/\\sqrt{3}$, so $g$ is increasing when $y$ is in that interval.<br/> $g'(y) \\lt 0$ if $y \\lt -1/\\sqrt{3}$ or $y \\gt 1/\\sqrt{3}$, so $g$ is decreasing when $y$ is in those intervals.", "question_text": "Find the regions where $g$ is increasing and where $g$ is decreasing.\r\n\r\n<p>$g(y)$ is increasing if {% answer \"cp1\" size=5 %} $\\lt  y \\lt $ {% answer \"cp2\" size=5 %}<br/>\r\n$g(y)$ is decreasing if $y \\lt $ {% answer \"cp1\" size=5 %} or if $y \\gt$ {% answer \"cp2\" size=5 %}</p>", "sort_order": 0.0, "css_class": ""}, "pk": 813}, {"model": "mitesting.questionsubpart", "fields": {"question": 525, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "<p>$g$ has a local maximum at $y=1/\\sqrt{3}$ since $g$ is increasing just below it and decreasing just above it.  The value of the local maximum is $g(1/\\sqrt{3}) \\approx {{ g_cp2|evalf:3 }}$.</p>\r\n\r\n<p>$g$ has a local minimum at $y=-1/\\sqrt{3}$ since $g$ is decreasing just below it and increasing just above it.  The value of the local minimum is $g(-1/\\sqrt{3}) \\approx {{ g_cp1|evalf:3 }}$.</p>\r\n", "question_text": "Find the locations and values of local maxima and minima of $g$.\r\n\r\n<p>Local maxima occur at $y=$ {% answer \"cp2\" size=5 %}.  Their values are $g=$ {% answer \"g_cp2\"  size=8 %}<br/>\r\nLocal minima occur at $y=$ {% answer \"cp1\" size=5 %}.  Their values are $g=$ {% answer \"g_cp1\" size=8%}<br/>\r\nSeparate multiple answer by commas; list in order according to location.</p>", "sort_order": 0.0, "css_class": ""}, "pk": 814}, {"model": "mitesting.questionsubpart", "fields": {"question": 525, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "To find the global maximum and minimum, we check the critical points and the endpoints: $g(-1) = e^{-1-(-1)^3} = e^0=1$, $g(-1/\\sqrt{3}) \\approx 0.6805$, $g(1/\\sqrt{3}) \\approx 1.4695$, and $g(2) = e^{2-2^3} = e^{-6} \\approx {{ g_2|evalf:3 }}$.  Therefore, the global maximum 1.4695 occurs at $y=1/\\sqrt{3}$ and the global minimum {{ g_2|evalf:3 }} occurs at $y=2$.", "question_text": "Find the locations and values of the global maximum and minimum of $g$ on the interval $-1 \\le y \\le 2$.\r\n\r\n<p>Global maximum occurs at $y=$ {% answer \"cp2\" size=5 %}.  Its value is $g=$ {% answer \"g_cp2\" size=8 %}<br/>\r\nGlobal minimum occurs at $y=$ {% answer \"two\" size=5 %}.  Its value is $g=$ {% answer \"g_2\" size=8 %}</p>\r\n", "sort_order": 0.0, "css_class": ""}, "pk": 815}, {"model": "mitesting.questionsubpart", "fields": {"question": 564, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$u(t)={{usol}}$", "question_text": "$\\diff{u}{t} = {{dudt}}$<br/>\r\n$u(0) = {{u0}}$\r\n\r\n<p>$u(t)=$ {% answer \"usol\" %}</p>", "sort_order": 0.0, "css_class": ""}, "pk": 879}, {"model": "mitesting.questionsubpart", "fields": {"question": 564, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$v(t)={{vsol}}$", "question_text": "$\\diff{v}{t} = {{dvdt}}$<br/>\r\n$v(0) = {{v0}}$\r\n\r\n<p>$v(t)=$ {% answer \"vsol\" %}</p>", "sort_order": 0.0, "css_class": ""}, "pk": 880}, {"model": "mitesting.questionsubpart", "fields": {"question": 564, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$s(t)={{ssol}}$", "question_text": "$s'(t) = {{dsdt}}$<br/>\r\n$s(0) = {{s0}}$\r\n\r\n<p>$s(t)=$ {% answer \"ssol\" %}</p>", "sort_order": 0.0, "css_class": ""}, "pk": 881}, {"model": "mitesting.questionsubpart", "fields": {"question": 564, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$z(t)={{zsol}}$", "question_text": "$z'(t) = {{dzdt}}$<br/>\r\n$z(0) = {{z0}}$\r\n\r\n<p>$z(t)=$ {% answer \"zsol\" %}</p>", "sort_order": 0.0, "css_class": ""}, "pk": 882}, {"model": "mitesting.questionsubpart", "fields": {"question": 565, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$y{t}={{ysol}}$", "question_text": "$\\diff{y}{t}={{dydt}}$\r\n\r\n<p>$y(t)=$ {% answer \"ysol\" %}</p>", "sort_order": 0.0, "css_class": ""}, "pk": 883}, {"model": "mitesting.questionsubpart", "fields": {"question": 565, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$x(t)={{xsol}}$.", "question_text": "$x'(t)={{dxdt}}$\r\n\r\n<p>$x(t)=$ {% answer \"xsol\" %}</p>", "sort_order": 0.0, "css_class": ""}, "pk": 884}, {"model": "mitesting.questionsubpart", "fields": {"question": 565, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$m(t)={{msol}}$", "question_text": "$\\diff{m}{t}={{dmdt}}$.\r\n\r\n<p>$m(t)=$ {% answer \"msol\" %}</p>", "sort_order": 0.0, "css_class": ""}, "pk": 885}, {"model": "mitesting.questionsubpart", "fields": {"question": 565, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "$v(t)={{vsol}}$", "question_text": "$v'(t)={{dvdt}}$.\r\n\r\n<p>$v(t)=$ {% answer \"vsol\" %}</p>", "sort_order": 0.0, "css_class": ""}, "pk": 886}, {"model": "mitesting.questionsubpart", "fields": {"question": 586, "hint_text": "", "question_spacing": null, "solution_text": "<p>The linear approximation and tangent line are the same thing.  The formula for the  linear approximation $L(x)$ for ${{f}}(x)$ that is valid near the point $x=a$ is\r\n$$L(x) = {{f}}'(a)(x-a) + {{f}}(a).$$\r\nEquivalently, the equation for the tangent line at the point $x=a$ is\r\n$$y = {{f}}'(a)(x-a) + {{f}}(a).$$</p>\r\n\r\n<p>In this case $a={{x0}}$, and we need the value of the function and its derivative at $x={{x0}}$.\r\n\\begin{align*}\r\n  {{f}}'(x) &= {{fun_prime}}\\\\\r\n  {{f}}'({{x0}}) &\\approx {{ dfun_x0|evalf:4 }}\\\\\r\n  {{f}}({{x0}}) &\\approx {{ fun_x0|evalf:4 }}\r\n\\end{align*}\r\nThe linear approximation is\r\n\\begin{align*}\r\n  L(x) &= {{f}}'({{x0}})(x  {{minus_x0|addplus}}) + {{f}}({{x0}})\\\\\r\n  &= {{ dfun_x0|evalf:4 }}(x {{minus_x0|addplus}})  {{fun_x0|addplus}}.\r\n\\end{align*}\r\nEquivalently, the equation for the tangent line is\r\n\\begin{align*}\r\n  y  &= {{f}}'({{x0}})(x  {{minus_x0|addplus}}) + {{f}}({{x0}})\\\\\r\n  &= {{ dfun_x0|evalf:4 }}(x {{minus_x0|addplus}})  {{fun_x0|addplus}}.\r\n\\end{align*}\r\n</p>\r\n", "question_text": "Determine {% if tangent_term %}the equation of the tangent line at $x={{x0}}$.{%else%}a linear approximation $L(x)$ for ${{f}}(x)$ that is valid near $x={{x0}}$.{% endif%}", "sort_order": 0.0, "css_class": ""}, "pk": 973}, {"model": "mitesting.questionsubpart", "fields": {"question": 586, "hint_text": "", "question_spacing": null, "solution_text": "$$L({{x1}}) = {{ dfun_x0|evalf:4 }}({{x1}} {{minus_x0|addplus}})  {{fun_x0|addplus}} \\approx {{ L_x1|evalf:4 }}$$", "question_text": "Using the {% if tangent_term %}tangent line equation{%else%}linear approximation{%endif%}, estimate the value of ${{f}}({{x1}})$.", "sort_order": 0.0, "css_class": ""}, "pk": 974}, {"model": "mitesting.questionsubpart", "fields": {"question": 586, "hint_text": "", "question_spacing": null, "solution_text": "<p>Since ${{x1}}$ is close to ${{x0}}$, the linear approximation (or tangent line) should be close to the actual function at $x={{x1}}$.  Indeed, the actual value of ${{f}}$ is\r\n$${{f}}({{x1}}) \\approx {{ fun_x1|evalf:4 }}.$$</p>", "question_text": "What is the actual value of ${{f}}({{x1}})$?", "sort_order": 0.0, "css_class": ""}, "pk": 975}, {"model": "mitesting.questionsubpart", "fields": {"question": 609, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "Since $S(t)$ and $I(t)$ are non-negative, we can see that $S'(t) = -S(t)I(t) \\le 0$.  $S(t)$ is either decreasing or constant.  $S(t)$ is constant if $S(t)I(t)=0$, i.e., if either $S(t)=0$ (there are no susceptibles to infect) or $I(t)=0$ (there are no infectives to infect the susceptibles).\r\n", "question_text": "Is the fraction of susceptibles $S(t)$ increasing or decreasing?  $S(t)$ is always {% answer \"decreasing_or_constant\" select=1 %}.\r\n\r\n<p>Under what conditions is the fraction of susceptibles not changing?  $S(t)$ is unchanging if $S'(t)=$ {% answer \"zero\" size=5 %}.  At any instant during which this condition is satisfied, the fraction is susceptibles holding still.</p>\r\n\r\n<p>Let's derive an expression that will tell us for what values of $S(t)$ and $I(t)$ the fraction of susceptible stops changing.  For simplicity, we'll drop the $t$ from the state variables, and just write them as $S$ and $I$.  Given the above equation for $S'(t)$, the condition in terms of $S$ and $I$ is {% answer \"minus_SI\" size=10 %} $=0$.  You can get rid of the minus sign to simplify the condition to {% answer \"SI\" size=10 %} $=0$.</p>\r\n\r\n<p>Your answer for the fraction of susceptibles being constant (at least for an instant) should be a product of two factors, one involving $S$ and the other $I$.  This product can be zero only if one of the factors is zero.  Therefore the fraction of susceptibles is holding still if either {% answer \"S\" size=3 %} $=0$ or if {% answer \"I\" size=3 %} $=0$ (enter answer involving $S$ first).</p>\r\n\r\n<p>We can interpret this condition as meaning that the number of susceptibles will stay the same when either {% answer \"no_susceptibles_to_infect\" select=1 %} or {% answer \"no_infecteds\" select=1 %}.</p>", "sort_order": 0.0, "css_class": ""}, "pk": 1023}, {"model": "mitesting.questionsubpart", "fields": {"question": 609, "hint_text": "", "question_spacing": "tinyspacebelow", "solution_text": "<p>Since $I'(t)= S(t)I(t)-0.5I(t)$, the rate of change of infectives is zero if $S(t)I(t)-0.5I(t) = 0$, i.e., if $I(t)(S(t)-0.5)=0$.  The rate of change is zero if $I(t)=0$ or $S(t)=0.5$.</p>\r\n\r\n<p>The fraction of infectives increases is  $S(t)I(t)-0.5I(t) > 0$.  If $I(t)=0$, this condition can never be met.  If $I(t) > 0$, then the condition is $S(t)-0.5 >0$, or $S(t) > 0.5$.  The fraction of infectives increases as long as $I(t) > 0$ and $S(t) > 0.5$.</p>\r\n\r\n<p>The fraction of infectives decreases is  $S(t)I(t)-0.5I(t) < 0$.  If $I(t)=0$, this condition can never be met.  If $I(t) < 0$, then the condition is $S(t)-0.5 <0$, or $S(t) < 0.5$.  The fraction of infectives decreases as long as $I(t) > 0$ and $S(t) < 0.5$.</p>\r\n", "question_text": "Under what conditions is the rate of change in the fraction of infectives, $I'(t)$, equal to zero?   When $I'(t)=$ {% answer \"zero\" size=3 %}.  Plugging in the above expression for $I'(t)$, this condition, in terms of $S$ and $I$, becomes {% answer \"rhs_dI\" size=15 %} $= 0$.  Factor this expression to rewrite it as {% answer \"rhs_dI_factored\" size=15 %} $=0$.\r\n\r\n<p>Your answer for the fraction of infectives being constant (at least for an instant) should be a product of two factors, one involving $S$ and the other $I$.  This product can be zero only if one of the factors is zero.  Therefore there is no change in the fraction of infectives when either $S=$ {% answer \"half\" size=4 %} or if $I=$ {% answer \"zero\" size=4 %}.</p>\r\n\r\n<p>Under what conditions does the fraction of infectives increase?  It increases if $I >0$ and {% answer \"S_greater_than_half\" size=10%}.  (Answer is an inequality involving $S$.)</p>\r\n\r\n <p>Under what conditions does the fraction of infectives decrease?  It decreases if $I >0$ and {% answer \"S_less_than_half\" size=10%}.  (Answer is an inequality involving $S$.)</p>\r\n", "sort_order": 0.0, "css_class": "page-break-ok"}, "pk": 1024}, {"model": "mitesting.questionsubpart", "fields": {"question": 609, "hint_text": "", "question_spacing": null, "solution_text": "The signs of $S'(t)$ and $I'(t)$ are the following.\r\n\r\n{% image \"sir_phase_plane_directions\" %}\r\n\r\nTherefore, the phase plane applet should look like this.\r\n\r\n{% applet \"sir_determine_nullclines_direction_vectors\" mu=0.5 alpha=1 showcorrect=1 xmin=-0.2 %}", "question_text": "<br/>\r\n<div class=\"yma-grid\">\r\n  <div class=\"yma-g40 yma-gl\" >\r\n    <div class=\"yma-gbox-left\"  >\r\n    Since we have two differential equations, we cannot use a single phase line to describe the system.  We need two dimensions to specify the values of the two state variables $S$ and $I$.  To represent our two-dimensional state space, we'll use a phase plane, as shown to the right.  The two axes of the phase plane are $S$ and $I$.  A point $(S,I)$ on the phase plane corresponds to a particular state of the system.\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"yma-g60 yma-gr\" >\r\n    <div class=\"yma-gbox-right\" >\r\n{% applet \"sir_determine_nullclines_direction_vectors\" mu=0.5 alpha=1 answer_ABinregions=one answer_Acorrectangle=one answer_Bcorrectangle=one answer_inull1correct=one answer_inull2correct=one answer_snull1correct=one answer_snull2correct=one width=250 height=250 xmin=-0.2 %}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<p>Use the phase plane to summarize your above results. First, draw lines corresponding to the values of $(S$ and $I$ where $S$ is not changing, i.e., where $S'(t)=0$.  (Online, use the thick sold blue lines.)  You derived two conditions for $S'(t)=0$, each of which is the equation for a line.  (On the phase plane, $S$ acts like $x$ and $I$ acts like $y$.)  Taken together, these lines are called the $S$ <em>nullcline</em>.</p>\r\n\r\n<p>Next, draw lines corresponding to the values of $(S,I)$ where $I$ is not changing, i.e., where $I'(t)=0$.  (Online, use the thin dashed green lines.)  The two equations that you derived for the condition $I'(t)=0$ are each an equation for a line.  Taken together, these lines are called the $I$ <em>nullcline</em>.</p>\r\n\r\n<p>The last step is to draw vector (arrows) to represent whether $S$ is increasing or decreasing and whether $I$ is increasing or decreasing.  A rightward pointing vector indicates $S$ is increasing and a leftward pointing vector indicates $S$ is decreasing (since $S$ is acting like $x$).  A upward pointing vector indicates $I$ is increasing and a downward pointing vector indicates $I$ is decreasing (since $I$ is acting like $y$.)  Therefore, a vector pointing downward and to the right indicates that, in that region of the phase plane, $S$ is decreasing while $I$ is increasing.</p>\r\n\r\n<p>Since we only care about physical values of $S$ and $I$ (in particular, we can ignore negative values), the nullclines divide the phase plane into two regions.  Draw a vector in each of those to regions indicating whether $S$ and $I$ are increasing or decreasing.</p>", "sort_order": 0.0, "css_class": "page-break-ok"}, "pk": 1025}, {"model": "mitesting.questionsubpart", "fields": {"question": 617, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "<p>The ${{x}}$-nullcline is the equation where $\\diff{ {{x}} }{t} = 0$.  This is true when\r\n\\begin{align*}\r\n{{rx}}{{x}}\\left(1 - \\frac{ {{x}} + {{c}} {{y}} }{ {{Kx}} } \\right)  &=0\r\n\\end{align*}\r\nwhich is satisfied if\r\n\\begin{align*}\r\n{{x}} = 0 \\quad \\text{or} \\quad 1 - \\frac{ {{x}} + {{c}}{{y}} }{ {{Kx}} } =0\r\n\\end{align*}\r\nwhich we can rewrite as\r\n\\begin{align*}\r\n{{x}} = 0 \\quad \\text{or} \\quad  {{x}} + {{c}}{{y}}={{Kx}}.\r\n\\end{align*}\r\nThe ${{x}}$-nullcline hence consists of two line segments, which are plotted by the solid blue lines in the below phase plane. The line ${{x}}=0$ is the ${{y}}$-axis and the line ${{x}} + {{c}}{{y}}={{Kx}}$ is a line with slope $-{{crecip}}$ (as you can rewrite it as ${{y}} = -{{crecip}}{{x}} + {% expr \"Kx*crecip\" %}$).</p>\r\n\r\n\r\n<p>The ${{y}}$-nullcline is the equation where $\\diff{ {{y}} }{t} = 0$.  This is true when\r\n\\begin{align*}\r\n{{ry}}{{y}}\\left(1 - \\frac{ {{y}} + {{c}}{{x}} }{ {{Ky}} } \\right)  &=0\r\n\\end{align*}\r\nwhich is satisfied if\r\n\\begin{align*}\r\n{{y}} = 0 \\quad \\text{or} \\quad 1 - \\frac{ {{y}} + {{c}}{{x}} }{ {{Ky}} } =0\r\n\\end{align*}\r\nwhich we can rewrite as\r\n\\begin{align*}\r\n{{y}} = 0 \\quad \\text{or} \\quad  {{y}} + {{c}}{{x}}={{Ky}}.\r\n\\end{align*}\r\nThe ${{y}}$-nullcline hence consists of two line segments, which are plotted by the dashed green lines in the below phase plane. The line ${{y}}=0$ is the ${{x}}$-axis and the line ${{y}} + {{c}}{{x}}={{Ky}}$ is a line with slope $-{{c}}$ (as you can rewrite it as ${{y}} = -{{c}}{{x}} + {{Ky}}$).</p>\r\n\r\n{% applet \"animal_competition_determine_phase_plane_solution\" Kx=Kx Ky=Ky x0=x0 y0=y0 c=c xlabel=x ylabel=y xmin=xmin xmax=xmax ymin=ymin ymax=ymax %}\r\n\r\n", "question_text": "Calculate the nullclines.  The ${{x}}$-nullcline is made of two pieces.  Enter the simpler equation first:<br/>\r\n{% answer \"x_equals_zero\" size=8 %} or {% answer \"xnulleq2\" size=30%}<br/>\r\nThe ${{y}}$-nullcline is made of two pieces.  Enter the simpler equation first:<br/>\r\n{% answer \"y_equals_zero\" size=8 %} or {% answer \"ynulleq2\" size=30%}</p>\r\n\r\n<p>Use the above phase plane applet to plot the nullcline.  Use the thick solid blue lines to plot the ${{x}}$-nullcline and the thin dashed green lines to plot the ${{y}}$-nullcline.  When the slider for <em>step</em> is set to <em>step=1</em>, you can drag the points on the nullclines to move them. Dotted lines are included as a hint to the location of part of the nullclines.", "sort_order": 0.0, "css_class": ""}, "pk": 1056}, {"model": "mitesting.questionsubpart", "fields": {"question": 617, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "The equilibria are shown by the red circles in the above phase plane.  For three equilibria, one population size is zero.  They are $({{x}}_e,{{y}}_e) = (0, 0)$, $({{x}}_e,{{y}}_e) = (0, {{Ky}})$, $({{x}}_e,{{y}}_e) = ({{Kx}}, 0)$.  {% if E4valid %}There is a fourth equilibrium where the two nullclines cross, as shown on the phase plane.  The value of this equilibrium is  $({{x}}_e,{{y}}_e) \\approx ({{ E4x|round:0 }},{{ E4y|round:0 }})$.{% elif E4negative %}(There is actually a fourth equilibrium  $({{x}}_e,{{y}}_e) \\approx ({{ E4x|round:0 }},{{ E4y|round:0 }})$, which isn't biologically plausible since a population size is negative.  You weren't expected to come up with this equilibrium.)  {%endif%}\r\n\r\n<p>In summary, the equilibria, rounded to the nearest integer are ${{ equilibria_round|round:0 }}$.</p>", "question_text": "Identify all equilibria. (Include only biologically plausible equilibria, i.e., equilibria where both population sizes are positive.) Give their values and show them in the phase plane.\r\n\r\n<p>Equilibria: {% answer \"equilibria_round\" size=40 %}<br/>\r\nSeparate multiple answers by commas.  For example if equilibria were $({{x}},{{y}})=(1,2)$ and $({{x}},{{y}})=(3,4)$, enter <tt>(1,2),(3,4)</tt>.  You can round your answer to the nearest integer.  </p>\r\n\r\n<p>To show the equilibria on above phase plane, drag the <em>step</em> slider to <em>step=2</em>, which will cause a second slider labeled $n_e$ to appear.  Use the $n_e$ slider to indicate the number of equilibria.  Then drag the red points that appear to the correct locations of the equilibria.  When step=2, the coordinates of the red points are displayed to allow you to estimate the equilibria values.</p>", "sort_order": 0.0, "css_class": ""}, "pk": 1057}, {"model": "mitesting.questionsubpart", "fields": {"question": 617, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "The nullclines divide the positive part of the phase plane into {% if E4valid %}four{%else%}three{%endif%} regions.  In each region, we need to test the sign of ${{x}}'(t)$ and ${{y}}'(t)$.  Since these derivatives cannot change sign within the region (but only at nullclines), we can just test a single point in each region.</p>\r\n\r\n<p>Let $$f({{x}},{{y}}) = {{rx}}{{x}}\\left(1 - \\frac{ {{x}} + {{c}}{{y}} }{ {{Kx}} } \\right)$$\r\nand \r\n$$g({{x}},{{y}}) = {{ry}}{{y}}\\left(1 - \\frac{ {{y}} + {{c}}{{x}} }{ {{Ky}} } \\right)$$\r\nso that ${{x}}'(t)=f({{x}},{{y}})$ and ${{y}}'(t) = g({{x}},{{y}})$.  To determine the sign of the derivatives, we plug the point for each region into $f$ and $g$.\r\n\r\n<p>In the lower left region, we check the point $({{x}},{{y}})=({{ A1x|evalf:4|round:0 }},{{ A1y|evalf:4|round:0 }})$.  (The choice of point is arbitrary as long as it is in the region being considered.)  Since $f({{ A1x|evalf:4|round:0 }},{{ A1y|evalf:4|round:0 }}) \\approx {{ funx_A1|evalf:4 }} > 0$, ${{x}}(t)$ is increasing in this region.  Since $g({{ A1x|evalf:4|round:0 }},{{ A1y|evalf:4|round:0 }}) \\approx {{ funy_A1|evalf:4 }} > 0$, ${{y}}(t)$ is also increasing in this region.  We draw an arrow pointing upward and to the right in this region.</p>\r\n\r\n\r\n<p>In {% if E4valid %}upper right{% elif E4x < 0 %}upper{%else%}right{%endif%} region, we check the point $({{x}},{{y}})=({{ A2x|evalf:4|round:0 }},{{ A2y|evalf:4|round:0 }})$.  Since $f({{ A2x|evalf:4|round:0 }},{{ A2y|evalf:4|round:0 }}) \\approx {{ funx_A2|evalf:4 }} < 0$, ${{x}}(t)$ is decreasing in this region.  Since $g({{ A2x|evalf:4|round:0 }},{{ A2y|evalf:4|round:0 }}) \\approx {{ funy_A2|evalf:4 }} < 0$, ${{y}}(t)$ is decreasing in this region.  We draw an arrow pointing downward and to the left in this region.</p>\r\n\r\n<p>In the {% if E4valid %}upper left{% else %}middle{%endif%} region, we check the point $({{x}},{{y}})=({{ A3x|evalf:4|round:0 }},{{ A3y|evalf:4|round:0 }})$.  Since $f({{ A3x|evalf:4|round:0 }},{{ A3y|evalf:4|round:0 }}) \\approx {{ funx_A3|evalf:4 }} {% if funx_A3_pos %}>{%else%}<{%endif%} 0$, ${{x}}(t)$ is {% if funx_A3_pos %}increasing{%else%}decreasing{%endif%} in this region.  Since $g({{ A3x|evalf:4|round:0 }},{{ A3y|evalf:4|round:0 }}) \\approx {{ funy_A3|evalf:4 }} {% if funy_A3_pos %}>{%else%}<{%endif%} 0$, ${{y}}(t)$ is {% if funy_A3_pos %}increasing{%else%}decreasing{%endif%} in this region.  We draw an arrow pointing {% if funy_A3_pos %}upward{%else%}downward{%endif%} and to the {% if funx_A3_pos %}right{%else%}left{%endif%} in this region.</p>\r\n\r\n{% if E4valid %}<p>In the lower right region, we check the point $({{x}},{{y}})=({{ A4x|evalf:4|round:0 }},{{ A4y|evalf:4|round:0 }})$.  Since $f({{ A4x|evalf:4|round:0 }},{{ A4y|evalf:4|round:0 }}) \\approx {{ funx_A4|evalf:4 }} < 0$, ${{x}}(t)$ is decreasing in this region.  Since $g({{ A4x|evalf:4|round:0 }},{{ A4y|evalf:4|round:0 }}) \\approx {{ funy_A4|evalf:4 }} > 0$, ${{y}}(t)$ is increasing in this region.  We draw an arrow pointing upward and to the left in this region.</p>{% endif %}\r\n\r\n<p>A direction vector for each of those regions in shown in the above phase plane.</p>", "question_text": "The nullclines divide the phase plane into regions.  Sketch a direction vector in each of these regions.  You only need to consider the biologically plausible part of the phase plane, i.e., where ${{x}}(t) \\ge 0 $ and ${{y}}(t) \\ge 0$.\r\n\r\n<p>To plot the direction vectors, set <em>step=3</em> in the above phase plane to reveal the vectors.  The black vectors can be dragged into the regions divided by the nullclines; drag one into each region.  Then, for each vector, drag the point by the arrowhead to change the direction so that it indicates whether ${{x}}$ and ${{y}}$ increase, decrease, or stay constant at that point.</p>", "sort_order": 0.0, "css_class": ""}, "pk": 1058}, {"model": "mitesting.questionsubpart", "fields": {"question": 617, "hint_text": "", "question_spacing": "medspacebelow", "solution_text": "Direction vectors on the ${{x}}$-nullcline must point straight up or down.  The direction can switch between up and down only where the ${{y}}$-nullcline intersects the ${{x}}$-nullcline, i.e., at the equilibria.  In each segment of the ${{x}}$-nullcline divided by the equilibria, draw at least one direction vector. \r\n\r\n<p>Direction vectors on the ${{y}}$-nullcline must point straight left or right, where the direction can switch only at equilibria.  In each segment of the ${{y}}$-nullcline divided by the equilibria, draw at least one direction vector.</p>\r\n\r\n<p>To determine the direction on each nullcline segment, pick a point on the nullcline and plug the point into $g({{x}},{{y}})$ (for the ${{x}}$-nullcline) or into $f({{x}},{{y}})$ (for the ${{y}}$-nullcline).  Alternatively, look at the direction vectors in the regions on either side of the nullcline to determine which vector is consistent with both those vectors.</p>\r\n\r\n<p>Direction vectors on the nullclines are shown in the above phase plane with purple arrows.</p>", "question_text": "Sketch a direction vector on each segment of each nullcline.  The segments of a nullcline are the parts divided by the other nullcline.\r\n\r\n<p>In the above phase plane, set <em>step=4</em> to reveal purple arrows on each nullcline branch.  The number of arrows that appear on a nullcline branch will match the number of segments of that branch (in the biologically plausible section of the phase plane).  Move each vector to a different nullcline segment.  Then, for each vector, drag the point by the arrowhead to change the direction so that it indicates whether ${{x}}$ and ${{y}}$ increase, decrease, or stay constant at that point.</p>\r\n\r\n", "sort_order": 0.0, "css_class": ""}, "pk": 1059}, {"model": "mitesting.questionsubpart", "fields": {"question": 617, "hint_text": "", "question_spacing": null, "solution_text": "A plausible solution trajectory is shown by the cyan curve in the above phase plane.", "question_text": "At time $t=0$, imagine that there are ${{x}}(0)={{ x0|round:0 }}$ {{animalx_plural}} and ${{y}}(0) = {{ y0|round:0 }}$ {{animaly_plural}}.  Sketch a plausible solution to the dynamical system with these initial conditions on the above phase plane.  The solution curve should represent $({{x}}(t),{{y}}(t))$ from the initial condition $t=0$ through very large values of $t$.\r\n\r\n<p>Set <em>step=5</em> to reveal the green point for the initial condition and the cyan line segments to use to approximate the solution trajectory (the curve $({{x}}(t),{{y}}(t))$ through the phase plane).  Drag the green point to the initial condition.  Then drag the cyan points so that the cyan line segments form a plausible solution trajectory.  If you would like more or fewer segments with which to draw the curve, you can change the number of segments with the <em>nsegs</em> slider.</p>\r\n\r\n<p><small>(For the solution trajectory to be valid, it must respect the direction arrows you determined in the previous steps.  When it crosses a nullcline, it should move exactly in the direction given by the corresponding purple arrow.  In a region between nullclines, the solution can change directions as long as it continues to follow the general direction of the corresponding black arrow, so that ${{x}}$ and ${{y}}$ increase or decrease as required.)</small></p>", "sort_order": 0.0, "css_class": ""}, "pk": 1070}, {"model": "mitesting.questionsubpart", "fields": {"question": 622, "hint_text": "", "question_spacing": null, "solution_text": "$f'(x) = {{fun_prime}}$", "question_text": "Calculate $f'(x)$.\r\n", "sort_order": 0.0, "css_class": ""}, "pk": 1097}, {"model": "mitesting.questionsubpart", "fields": {"question": 622, "hint_text": "", "question_spacing": null, "solution_text": "<p>For $x > 0$, the derivative always exists, so the critical points are where $f'(x)=0$.<p>\r\n\r\n<p>To solve ${{fun_prime}}=0$,  we multiply through by $x$ to obtain ${{x_fun_prime}} =0$.  Subtracting ${{minus_a_flip}}$ from both sides, squaring, and solving for $x$, we find the one critical point is $x={{critical_point}}$.</p>", "question_text": "The function $f(x)$ and its derivative $f'(x)$ are defined only for positive $x$,  so we will consider only $x > 0$.  Find the critical points of $f$. ", "sort_order": 0.0, "css_class": ""}, "pk": 1098}, {"model": "mitesting.questionsubpart", "fields": {"question": 622, "hint_text": "", "question_spacing": null, "solution_text": "<p>The critical points divide the positive real line into the intervals $(0, {{critical_point}})$ and $({{critical_point}},\\infty)$.</p>\r\n\r\n<p>For the interval $(0,{{critical_point}})$, we could pick the point $x={{auxpoint1}}$.  $f'({{auxpoint1}}) = {{fun_prime_a1}} \\approx {{ fun_prime_a1_round|evalf:3 }} {% if fun_prime_a1 > 0 %}>{%else%}<{%endif%} 0$.  $f(x)$ is {% if fun_prime_a1 > 0 %}increasing{%else%}decreasing{%endif%} on the interval $(0,{{critical_point}})$.</p>\r\n\r\n<p>For the interval $({{critical_point}},\\infty)$, we could pick the point $x={{auxpoint2}}$.  $f'({{auxpoint2}}) = {{fun_prime_a2}}  \\approx {{ fun_prime_a2_round|evalf:3 }} {% if fun_prime_a2 > 0 %}>{%else%}<{%endif%} 0$.  $f(x)$ is {% if fun_prime_a2 > 0 %}increasing{%else%}decreasing{%endif%} on the interval $({{critical_point}},\\infty)$.</p>\r\n", "question_text": "Determine on which intervals $f$ is increasing and $f$ is decreasing.", "sort_order": 0.0, "css_class": ""}, "pk": 1099}, {"model": "mitesting.questionsubpart", "fields": {"question": 656, "hint_text": "To help you enter the answer online, you can copy and paste from <tt>x^2/(1-x^2)</tt>.", "question_spacing": null, "solution_text": "$\\displaystyle h'(x)={{d_poly_ratio}}$<br/>\r\n$h'(3)={{d_poly_ratio_3}}$.", "question_text": "$\\displaystyle h(x)={{poly_ratio}}$<br/>\r\n$h'(x) = $ {% answer \"d_poly_ratio\" size=59 %}<br/>\r\n$h'(3)=$ {% answer \"d_poly_ratio_3\" %}", "sort_order": 1.0, "css_class": ""}, "pk": 1214}, {"model": "mitesting.questionsubpart", "fields": {"question": 656, "hint_text": "To help you enter the answer online, you can copy and paste from <tt>(1-e^x)/(1+e^x)</tt>.", "question_spacing": null, "solution_text": "$\\displaystyle \\diff{g}{x}={{d_exp_ratio }}$<br/>\r\n$\\displaystyle \\diff{g}{x}\\bigg|_{x=0}= {{ d_exp_ratio_0 }}.$", "question_text": "$\\displaystyle g(x)={{exp_ratio}}$<br/>\r\n$\\displaystyle \\diff{g}{x}=$ {% answer \"d_exp_ratio\" size=60 %}<br/>\r\n$\\displaystyle \\diff{g}{x}\\bigg|_{x=0}=$ {% answer \"d_exp_ratio_0\" %}", "sort_order": 2.0, "css_class": ""}, "pk": 1215}, {"model": "mitesting.questionansweroption", "fields": {"question": 622, "match_partial_on_compare": false, "answer": "fun_prime", "answer_code": "fun_prime", "sort_order": 1.0, "feedback": null, "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 386}, {"model": "mitesting.questionansweroption", "fields": {"question": 622, "match_partial_on_compare": false, "answer": "increasedecrease1", "answer_code": "increasedecrease1", "sort_order": 2.0, "feedback": null, "split_symbols_on_compare": false, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 387}, {"model": "mitesting.questionansweroption", "fields": {"question": 622, "match_partial_on_compare": false, "answer": "increasedecrease2", "answer_code": "increasedecrease2", "sort_order": 3.0, "feedback": null, "split_symbols_on_compare": false, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 388}, {"model": "mitesting.questionansweroption", "fields": {"question": 366, "match_partial_on_compare": false, "answer": "answer", "answer_code": "answer", "sort_order": 1.0, "feedback": null, "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 638}, {"model": "mitesting.questionansweroption", "fields": {"question": 656, "match_partial_on_compare": false, "answer": "d_poly_ratio", "answer_code": "d_poly_ratio", "sort_order": 1.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1499}, {"model": "mitesting.questionansweroption", "fields": {"question": 656, "match_partial_on_compare": false, "answer": "d_poly_ratio_3", "answer_code": "d_poly_ratio_3", "sort_order": 2.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 1500}, {"model": "mitesting.questionansweroption", "fields": {"question": 656, "match_partial_on_compare": false, "answer": "d_exp_ratio", "answer_code": "d_exp_ratio", "sort_order": 3.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1501}, {"model": "mitesting.questionansweroption", "fields": {"question": 656, "match_partial_on_compare": false, "answer": "d_exp_ratio_0", "answer_code": "d_exp_ratio_0", "sort_order": 4.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 1502}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de1", "answer_code": "de1", "sort_order": 1.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1524}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de2", "answer_code": "de2", "sort_order": 2.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1525}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de3", "answer_code": "de3", "sort_order": 3.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1526}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de4", "answer_code": "de4", "sort_order": 4.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1527}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de5", "answer_code": "de5", "sort_order": 5.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1528}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de6", "answer_code": "de6", "sort_order": 6.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1529}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de7", "answer_code": "de7", "sort_order": 7.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1530}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de8", "answer_code": "de8", "sort_order": 8.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1531}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de9", "answer_code": "de9", "sort_order": 9.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1532}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de10", "answer_code": "de10", "sort_order": 10.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1533}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de11", "answer_code": "de11", "sort_order": 11.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1534}, {"model": "mitesting.questionansweroption", "fields": {"question": 477, "match_partial_on_compare": false, "answer": "de12", "answer_code": "de12", "sort_order": 12.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 1535}, {"model": "mitesting.questionansweroption", "fields": {"question": 525, "match_partial_on_compare": true, "answer": "critical_points", "answer_code": "critical_points", "sort_order": 1.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 3, "round_partial_credit": "1,50"}, "pk": 1925}, {"model": "mitesting.questionansweroption", "fields": {"question": 525, "match_partial_on_compare": false, "answer": "cp1", "answer_code": "cp1", "sort_order": 2.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 3, "round_partial_credit": "1,50"}, "pk": 1926}, {"model": "mitesting.questionansweroption", "fields": {"question": 525, "match_partial_on_compare": false, "answer": "cp2", "answer_code": "cp2", "sort_order": 3.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 3, "round_partial_credit": "1,50"}, "pk": 1927}, {"model": "mitesting.questionansweroption", "fields": {"question": 525, "match_partial_on_compare": false, "answer": "g_cp1", "answer_code": "g_cp1", "sort_order": 4.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 3, "round_partial_credit": "1,50"}, "pk": 1928}, {"model": "mitesting.questionansweroption", "fields": {"question": 525, "match_partial_on_compare": false, "answer": "g_cp2", "answer_code": "g_cp2", "sort_order": 5.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 3, "round_partial_credit": "1,50"}, "pk": 1929}, {"model": "mitesting.questionansweroption", "fields": {"question": 525, "match_partial_on_compare": false, "answer": "two", "answer_code": "two", "sort_order": 6.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 1930}, {"model": "mitesting.questionansweroption", "fields": {"question": 525, "match_partial_on_compare": false, "answer": "g_2", "answer_code": "g_2", "sort_order": 7.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 3, "round_partial_credit": "1,50"}, "pk": 1931}, {"model": "mitesting.questionansweroption", "fields": {"question": 564, "match_partial_on_compare": false, "answer": "usol", "answer_code": "usol", "sort_order": 1.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2067}, {"model": "mitesting.questionansweroption", "fields": {"question": 564, "match_partial_on_compare": false, "answer": "vsol", "answer_code": "vsol", "sort_order": 2.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2068}, {"model": "mitesting.questionansweroption", "fields": {"question": 564, "match_partial_on_compare": false, "answer": "ssol", "answer_code": "ssol", "sort_order": 3.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2069}, {"model": "mitesting.questionansweroption", "fields": {"question": 564, "match_partial_on_compare": false, "answer": "zsol", "answer_code": "zsol", "sort_order": 4.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2070}, {"model": "mitesting.questionansweroption", "fields": {"question": 565, "match_partial_on_compare": false, "answer": "ysol", "answer_code": "ysol", "sort_order": 1.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2071}, {"model": "mitesting.questionansweroption", "fields": {"question": 565, "match_partial_on_compare": false, "answer": "xsol", "answer_code": "xsol", "sort_order": 2.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2072}, {"model": "mitesting.questionansweroption", "fields": {"question": 565, "match_partial_on_compare": false, "answer": "msol", "answer_code": "msol", "sort_order": 3.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2073}, {"model": "mitesting.questionansweroption", "fields": {"question": 565, "match_partial_on_compare": false, "answer": "vsol", "answer_code": "vsol", "sort_order": 4.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2074}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": true, "answer": "Es", "answer_code": "Es", "sort_order": 1.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": true, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 5, "round_partial_credit": null}, "pk": 2167}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": false, "answer": "stability", "answer_code": "stability", "sort_order": 2.0, "feedback": "", "split_symbols_on_compare": false, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2168}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": false, "answer": "Es_unordered", "answer_code": "Es", "sort_order": 3.0, "feedback": "Enter in increasing order for full credit.", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": true, "percent_correct": 80, "normalize_on_compare": false, "round_on_compare": 5, "round_partial_credit": null}, "pk": 2169}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": false, "answer": "E1sort", "answer_code": "E1sort", "sort_order": 4.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": true, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 5, "round_partial_credit": null}, "pk": 2170}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": false, "answer": "E2sort", "answer_code": "E2sort", "sort_order": 5.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": true, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 5, "round_partial_credit": null}, "pk": 2171}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": false, "answer": "E1sort_stable", "answer_code": "E1sort_stable", "sort_order": 6.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2172}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": false, "answer": "E2sort_stable", "answer_code": "E2sort_stable", "sort_order": 7.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2173}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": false, "answer": "dir1", "answer_code": "dir1", "sort_order": 8.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2174}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": false, "answer": "dir2", "answer_code": "dir2", "sort_order": 9.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2175}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": false, "answer": "dir3", "answer_code": "dir3", "sort_order": 10.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2176}, {"model": "mitesting.questionansweroption", "fields": {"question": 660, "match_partial_on_compare": false, "answer": "two", "answer_code": "two", "sort_order": 11.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2177}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "susceptible", "answer_code": "susceptible_intro", "sort_order": 1.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2384}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "removed", "answer_code": "susceptible_intro", "sort_order": 2.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2385}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "tall", "answer_code": "susceptible_intro", "sort_order": 3.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2386}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "asleep", "answer_code": "susceptible_intro", "sort_order": 4.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2387}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "dead", "answer_code": "susceptible_intro", "sort_order": 5.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2388}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "infected", "answer_code": "infected_intro", "sort_order": 6.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2389}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "recovered", "answer_code": "infected_intro", "sort_order": 7.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2390}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "short", "answer_code": "infected_intro", "sort_order": 8.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2391}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "awake", "answer_code": "infected_intro", "sort_order": 9.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2392}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "alive", "answer_code": "infected_intro", "sort_order": 10.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2393}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "one_minus_I", "answer_code": "one_minus_I", "sort_order": 11.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2394}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "susceptible", "answer_code": "susceptible", "sort_order": 12.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2395}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "infected", "answer_code": "susceptible", "sort_order": 13.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2396}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "recovered", "answer_code": "susceptible", "sort_order": 14.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2397}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "get infected", "answer_code": "get_infected", "sort_order": 15.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2398}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "recover", "answer_code": "get_infected", "sort_order": 16.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2399}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "die", "answer_code": "get_infected", "sort_order": 17.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2400}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "become susceptible again", "answer_code": "get_infected", "sort_order": 18.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2401}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "infected", "answer_code": "infected", "sort_order": 19.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2402}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "susceptible", "answer_code": "infected", "sort_order": 20.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2403}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "recovered", "answer_code": "infected", "sort_order": 21.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2404}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "I", "answer_code": "I", "sort_order": 22.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2405}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "I_t", "answer_code": "I", "sort_order": 23.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2406}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "one_minus_I_t", "answer_code": "one_minus_I", "sort_order": 24.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2407}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "recover", "answer_code": "recover", "sort_order": 25.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2408}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "get infected", "answer_code": "recover", "sort_order": 26.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2409}, {"model": "mitesting.questionansweroption", "fields": {"question": 218, "match_partial_on_compare": false, "answer": "die", "answer_code": "recover", "sort_order": 27.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2410}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "zero", "answer_code": "zero", "sort_order": 1.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2449}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "one", "answer_code": "one", "sort_order": 2.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2450}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "either decreasing or constant", "answer_code": "decreasing_or_constant", "sort_order": 3.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2451}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "constant", "answer_code": "decreasing_or_constant", "sort_order": 4.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2452}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "either increasing or constant", "answer_code": "decreasing_or_constant", "sort_order": 5.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2453}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "decreasing", "answer_code": "decreasing_or_constant", "sort_order": 6.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2454}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "increasing", "answer_code": "decreasing_or_constant", "sort_order": 7.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2455}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "either increasing or decreasing", "answer_code": "decreasing_or_constant", "sort_order": 8.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2456}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "minus_SI", "answer_code": "minus_SI", "sort_order": 9.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2457}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "SI", "answer_code": "SI", "sort_order": 10.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2458}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "S", "answer_code": "S", "sort_order": 11.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2459}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "I", "answer_code": "I", "sort_order": 12.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2460}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "there are no susceptible individuals to infect", "answer_code": "no_susceptibles_to_infect", "sort_order": 13.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2461}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "the susceptible individuals went on strike", "answer_code": "no_susceptibles_to_infect", "sort_order": 14.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2462}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "the disease is not contagious", "answer_code": "no_susceptibles_to_infect", "sort_order": 15.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2463}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "everyone recovered", "answer_code": "no_susceptibles_to_infect", "sort_order": 16.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2464}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "there are no infected individuals around to infect more susceptibles", "answer_code": "no_infecteds", "sort_order": 17.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2465}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "the infected people stayed home in order to not infect anyone", "answer_code": "no_infecteds", "sort_order": 18.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2466}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "the susceptible people became immune to the disease", "answer_code": "no_infecteds", "sort_order": 19.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2467}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "the disease evolved into a newer, more deadly strain", "answer_code": "no_infecteds", "sort_order": 20.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 1, "round_absolute": false, "percent_correct": 0, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2468}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "rhs_dI", "answer_code": "rhs_dI", "sort_order": 21.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 10, "round_partial_credit": null}, "pk": 2469}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "rhs_dI_factored", "answer_code": "rhs_dI_factored", "sort_order": 22.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 10, "round_partial_credit": null}, "pk": 2470}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "S_greater_than_half", "answer_code": "S_greater_than_half", "sort_order": 23.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 10, "round_partial_credit": null}, "pk": 2471}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "S_less_than_half", "answer_code": "S_less_than_half", "sort_order": 24.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 10, "round_partial_credit": null}, "pk": 2472}, {"model": "mitesting.questionansweroption", "fields": {"question": 609, "match_partial_on_compare": false, "answer": "half", "answer_code": "half", "sort_order": 25.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 10, "round_partial_credit": null}, "pk": 2473}, {"model": "mitesting.questionansweroption", "fields": {"question": 617, "match_partial_on_compare": false, "answer": "one", "answer_code": "one", "sort_order": 1.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": null, "round_partial_credit": null}, "pk": 2674}, {"model": "mitesting.questionansweroption", "fields": {"question": 617, "match_partial_on_compare": true, "answer": "equilibria_round", "answer_code": "equilibria_round", "sort_order": 2.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": true, "percent_correct": 100, "normalize_on_compare": false, "round_on_compare": 0, "round_partial_credit": null}, "pk": 2675}, {"model": "mitesting.questionansweroption", "fields": {"question": 617, "match_partial_on_compare": false, "answer": "x_equals_zero", "answer_code": "x_equals_zero", "sort_order": 3.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 2676}, {"model": "mitesting.questionansweroption", "fields": {"question": 617, "match_partial_on_compare": false, "answer": "xnulleq2", "answer_code": "xnulleq2", "sort_order": 4.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": 4, "round_partial_credit": "2,50"}, "pk": 2677}, {"model": "mitesting.questionansweroption", "fields": {"question": 617, "match_partial_on_compare": false, "answer": "y_equals_zero", "answer_code": "y_equals_zero", "sort_order": 5.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": null, "round_partial_credit": null}, "pk": 2678}, {"model": "mitesting.questionansweroption", "fields": {"question": 617, "match_partial_on_compare": false, "answer": "ynulleq2", "answer_code": "ynulleq2", "sort_order": 6.0, "feedback": "", "split_symbols_on_compare": true, "answer_type": 0, "round_absolute": false, "percent_correct": 100, "normalize_on_compare": true, "round_on_compare": 4, "round_partial_credit": "2,50"}, "pk": 2679}, {"model": "mitesting.assessmenttype", "fields": {"solution_privacy": 2, "name": "In-class exam", "code": "in_class_exam", "record_online_attempts": true, "template_base_name": "exam", "assessment_privacy": 2}, "pk": 1}, {"model": "mitesting.assessmenttype", "fields": {"solution_privacy": 2, "name": "In-class quiz", "code": "in_class_quiz", "record_online_attempts": true, "template_base_name": "quiz", "assessment_privacy": 1}, "pk": 2}, {"model": "mitesting.assessmenttype", "fields": {"solution_privacy": 0, "name": "Review questions", "code": "review", "record_online_attempts": true, "template_base_name": null, "assessment_privacy": 0}, "pk": 3}, {"model": "mitesting.assessmenttype", "fields": {"solution_privacy": 2, "name": "Worksheet", "code": "worksheet", "record_online_attempts": true, "template_base_name": "worksheet", "assessment_privacy": 0}, "pk": 4}, {"model": "mitesting.assessmenttype", "fields": {"solution_privacy": 0, "name": "Guided practice", "code": "guided_practice", "record_online_attempts": true, "template_base_name": null, "assessment_privacy": 0}, "pk": 6}, {"model": "mitesting.assessmenttype", "fields": {"solution_privacy": 0, "name": "Online quiz", "code": "online_quiz", "record_online_attempts": true, "template_base_name": "", "assessment_privacy": 0}, "pk": 7}, {"model": "mitesting.assessmenttype", "fields": {"solution_privacy": 2, "name": "Gateway exam", "code": "gateway", "record_online_attempts": false, "template_base_name": "gateway", "assessment_privacy": 0}, "pk": 8}, {"model": "mitesting.assessmenttype", "fields": {"solution_privacy": 2, "name": "Project", "code": "project", "record_online_attempts": false, "template_base_name": "", "assessment_privacy": 2}, "pk": 9}, {"model": "mitesting.assessment", "fields": {"short_name": "Approx nonlinear by linear", "code": "approximating_nonlinear_function_by_linear", "detailed_description": "", "fixed_order": true, "name": "Approximating a nonlinear function by a linear function", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": true, "instructions2": "", "total_points": null, "notes": ""}, "pk": 13}, {"model": "mitesting.assessment", "fields": {"short_name": "Solve diffeq graphical", "code": "solving_single_autonomous_differential_equations_graphical", "detailed_description": "", "fixed_order": true, "name": "Solving single autonomous differential equations using graphical methods", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": true, "instructions2": "", "total_points": null, "notes": ""}, "pk": 36}, {"model": "mitesting.assessment", "fields": {"short_name": "Stability diffeq equilibria", "code": "stability_equilibria_differential_equation", "detailed_description": "", "fixed_order": true, "name": "Stability of equilibria of a differential equation", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": true, "instructions2": "", "total_points": null, "notes": ""}, "pk": 38}, {"model": "mitesting.assessment", "fields": {"short_name": "Infectious disease, no immune", "code": "model_infectious_disease_without_immunity_continuous", "detailed_description": "", "fixed_order": true, "name": "Model of an infectious disease without immunity", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": true, "instructions2": "", "total_points": null, "notes": ""}, "pk": 45}, {"model": "mitesting.assessment", "fields": {"short_name": "SIR model", "code": "sketch_evolution_sir_model", "detailed_description": "", "fixed_order": true, "name": "Sketch evolution of an SIR model", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": true, "instructions2": "", "total_points": null, "notes": ""}, "pk": 48}, {"model": "mitesting.assessment", "fields": {"short_name": "", "code": "two_dimensional_autonomous_differential_equation_problems", "detailed_description": "", "fixed_order": false, "name": "Two dimensional autonomous differential equation problems", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 3, "time_limit": "", "instructions": "", "nothing_random": false, "instructions2": "", "total_points": null, "notes": ""}, "pk": 55}, {"model": "mitesting.assessment", "fields": {"short_name": "", "code": "math_1241_final_exam", "detailed_description": "<p>The final exam for Math 1241 is based on parts 2-6 from the <a href=\"{% url 'mithreads-thread' 'math1241' %}\">Math 1241 thread</a>.  It is a cumulative exam, meaning it covers all the materials from the previous four modules, plus the new material on two-dimensional differential equations.</p>\r\n\r\n<h4>Material for the exam</h4>\r\n\r\n<ol><li><p>Discrete-time dynamical systems (<a href=\"{% url 'mithreads-thread' 'math1241' %}#discrete\">Discrete dynamical systems from Math 1241 thread</a>).</p>\r\n\r\n    <p>See {% intlink \"math_1241_module_exam_discrete_dynamical_systems\" class=\"assessment\" %}discrete dynamical system exam{%endintlink%} for a description of material and study aids for this section.</p>\r\n    </p>\r\n</li>\r\n\r\n<li><p>Differentiation (<a href=\"{% url 'mithreads-thread' 'math1241' %}#derivative\">The derivative from Math 1241 thread</a>).</p>\r\n\r\n<p>See {% intlink \"math_1241_module_exam_differentiation\" class=\"assessment\" %}derivative exam{% endintlink %} for a description of material and study aids for this section.</p>\r\n</li>\r\n\r\n\r\n<li><p>Applications of differentiation (<a href=\"{% url 'mithreads-thread' 'math1241' %}#applications_differentiation\">Applications of differentiation from Math 1241 thread</a>).</p>\r\n\r\n<p>See {% intlink \"math_1241_module_exam_applications_differentiation\" class=\"assessment\" %}applications of differentiation exam{% endintlink %} for a description of material and study aids for this section.</p>\r\n</li>\r\n\r\n<li><p>Autonomous differential equations (<a href=\"{% url 'mithreads-thread' 'math1241' %}#autonomous_differential_equations\">Autonomous differential equations from Math 1241 thread</a>).</p>\r\n\r\n<p>See {% intlink \"math_1241_module_exam_autonomous_differential_equations\" class=\"assessment\" %}differential equation exam{% endintlink %} for a description of material and study aids for this section.</p>\r\n</li>\r\n\r\n<li><p>Two-dimensional autonomous differential equations (<a href=\"{% url 'mithreads-thread' 'math1241' %}#two_dimensional_autonomous_differential_equations\">Two-dimensional autonomous differential equations from Math 1241 thread</a>).</p>\r\n  <ol>\r\n    <li>What it means for two autonomous differential equations to be\r\n  coupled.</li>  \r\n\r\n    <li>Estimating a solution to a two-dimensional differential equation\r\n  using the Forward Euler algorithm</li>\r\n\r\n    <li>Understanding the correspondence between the phase plane plot and\r\n  plots versus time.</li>\r\n\r\n    <li>Finding equilibria by solving the two equations made by setting the rates of change to zero.</li>\r\n\r\n    <li>Plotting nullclines in the phase plane.</li>\r\n\r\n    <li>Finding equilibria by finding the points where the nullclines intersect.</li>\r\n\r\n    <li>Plotting direction arrows (i.e., vector field) on the nullclines and in the regions of the phase plane that are divided by the nullclines.</li>\r\n\r\n    <li>Sketching a solution in the phase plane based on direction arrows.</li>\r\n\r\n    <li>The predator-prey system, the competition equations, the\r\n  disease model, and the neuron model are good example equations, but\r\n  you aren't expected to memorize them.</li>\r\n  </ol>\r\n</li>\r\n</ol>\r\n\r\n<h4>Study aids</h4>\r\n\r\n<ol>\r\n<li><p>Review problems</p>\r\n\r\n<p>The majority of the questions that may appear in the final exam are available so that you can practice them.  In both these problems and on the actual exam, the set of problems as well as values of numbers, variables, parameters, and other quantities are selected randomly.  You will want to generate multiple versions of the problems to see the larger array of problems.  Given the random nature, we cannot guarantee that you will actually see all the problems that will appear on the exam.  But the more problems you work on, the greater the chance you will work on problems that will show up on the test.</p>\r\n\r\n<p>The format of the exam questions may differ from the practice problems in that the exam problems may have been modified to remove any answer blanks and the instructions specific to entering answers in the right format for computer grading.</p>\r\n\r\n<p>For all problems on this exam, you will be expected to <b>show your work</b>, and the grading will be based on the work that you show.</p>\r\n\r\n<ol><li><p>Free form questions</p>\r\n\r\n<p>See the problems listed in the first four exams ({% intlink \"math_1241_module_exam_discrete_dynamical_systems\" class=\"assessment\" %}1{%endintlink%} {% intlink \"math_1241_module_exam_differentiation\" class=\"assessment\" %}2{% endintlink %} {% intlink \"math_1241_module_exam_applications_differentiation\" class=\"assessment\" %}3{% endintlink %} {% intlink \"math_1241_module_exam_autonomous_differential_equations\" class=\"assessment\" %}4{% endintlink %}).  In addition, {% intlink \"two_dimensional_autonomous_differential_equation_problems\" class=\"assessment\"%}{%endintlink%}  contains short answer problems that reflect the format of questions as they would appear on the exam.</p></li>\r\n\r\n<li><p>Computer-scored problems</p>\r\n\r\n<p>See the problems listed in first four exams ({% intlink \"math_1241_module_exam_discrete_dynamical_systems\" class=\"assessment\" %}1{%endintlink%} {% intlink \"math_1241_module_exam_differentiation\" class=\"assessment\" %}2{% endintlink %} {% intlink \"math_1241_module_exam_applications_differentiation\" class=\"assessment\" %}3{% endintlink %} {% intlink \"math_1241_module_exam_autonomous_differential_equations\" class=\"assessment\" %}4{% endintlink %}).  In addition, {% intlink \"math_1241_quiz11\" class=\"assessment\"%}{%endintlink %} contains problems where the computer will the score your answer for you, so you can see how well you did.  When these questions appear on the exam, they may be modified to the short answer format.</p></li>\r\n\r\n</ol>\r\n</li>\r\n\r\n<li><p>Worksheets</p>\r\n<p>\r\nThe worksheets from the Math 1241 thread are also good review.</p></li>\r\n</ol>\r\n\r\n<h4>Review session</h4>\r\n\r\n<p>We will hold a review session on the study day, Thursday, December 11, in the regular class room, a little later than the usual class time.  </p>\r\n<p>Date: Thursday, December 11<br/>\r\nTime: 3:15 PM - 4:15 PM<br/>\r\nLocation: STSS 114<br/>\r\nBrownies provided.\r\n</p>\r\n\r\n<h4>Final exam logistics</h4>\r\n\r\n<p>Date: Friday, December 12<br/>\r\nTime: 1:30 PM - 4:30 PM<br/>\r\nLocation is based on section. (View section in upper right of main course page.)<br/>\r\nSections 12,13: <a href=\"http://www.umn.edu/twincities/maps/AkerH/\">Akerman Hall</a> 209<br/>\r\nSection 14: <a href=\"http://www.umn.edu/twincities/maps/AkerH/\">Akerman Hall</a> 225<br/>\r\nSection 15: <a href=\"http://www.umn.edu/twincities/maps/AkerH/\">Akerman Hall</a> 227<br/>\r\nSection 11, 16: <a href=\"http://www.umn.edu/twincities/maps/AkerH/\">Akerman Hall</a> 319\r\n</p>\r\n\r\n<h4>Final exam rules</h4>\r\n\r\n<ol>\r\n<li>You are allowed 180 minutes to take the exam.</li>\r\n<li>You are allowed to have one letter sized sheet of paper of notes.  Double-sided is OK.  No restrictions to what can be on the sheet of paper.</li>\r\n<li>You are allowed to have a calculator in the exam, including a graphing calculator.</li>\r\n<li>No textbook or electronic equipment (other than calculator) allowed.</li>\r\n<li>All students must have their official University ID card with them at the time of the final exam and must show it to one of the proctors when handing in their exam.  The proctor will not accept a final exam from a student without an ID card.</li>\r\n</ol>\r\n\r\n<p>Provisions are available for students who have two Math common final exams at the same time.  See instructor if you have any conflict with the final exam time.</p>", "fixed_order": false, "name": "Final exam", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": false, "groups_can_view": [], "assessment_type": 1, "time_limit": "3 hours", "instructions": "<p>Enter all requested information on the top of this page, and put your\r\ninitials on the top of every page, in case the pages become separated.\r\nYou are allowed to take one (doubled-sided) 8.5 inch\r\n$\\times$ 11 inch sheet of notes into the exam.</p>\r\n\r\n<p>Do not give numerical approximations to quantities such as $\\sin{5}$,\r\n$\\pi$, or $\\sqrt{2}$.  However, you should simplify\r\n$\\cos{\\frac{\\pi}{4}}=\\sqrt{2}/2$, $e^0=1$, and so on.</p>\r\n\r\n", "nothing_random": false, "instructions2": "<p>The following rules apply:</p>\r\n<ul class=\"instruction_list\">\r\n<li><b>Show your work</b>, in a reasonably neat and coherent way, in\r\nthe space provided.  All answers must be justified by valid\r\nmathematical reasoning.  To receive full credit on a problem, you must\r\nshow enough work so that your solution can be followed by someone\r\nwithout a calculator.</li>\r\n\r\n<li>Mysterious or unsupported answers will not receive full\r\ncredit.  Your work should be mathematically correct and carefully and\r\nlegibly written.</li>\r\n\r\n<li>A correct answer, unsupported by calculations,\r\n    explanation, or algebraic work will receive no credit; an\r\n  incorrect answer supported by substantially correct calculations and\r\n  explanations will receive partial credit.</li>\r\n\r\n<li>Full credit will be given only for work that is presented neatly\r\n  and logically; work scattered all over the page without a clear\r\n  ordering will receive from little to no credit.</li>\r\n</ul>\r\n", "total_points": null, "notes": "Set1:  Either:\r\n(A) Graphical equilibrium (no equation) of discrete system, cobweb to find stability (some with basin of attraction)\r\nor\r\n(B) \r\n(B) Find stability of equilibrium of discrete system with stability theorem\r\n448 - A, yes solution, yes random\r\n449 - A, yes solution, yes random\r\n451 - A, yes solution, yes random\r\n452 - A, yes solution, yes random\r\n275 - B, yes solution, yes random\r\n278 - B, yes solution, yes random\r\n\r\n\r\nSet2:  analytic equilibrium.  Otherwise, an analytic stability problem (or combine that with set 1?)\r\n29- yes solution, yes random\r\n31- yes solution, yes random\r\n32- yes solution, yes random\r\n33- yes solution, yes random (not included error in variable)\r\n\r\nSet3: partial derivatives\r\n265 - yes solution, yes random\r\n266 - yes solution, yes random\r\n268 - yes solution, yes random\r\n274 - yes solution, yes random\r\n\r\nSet4:  analytic linear equilibrium / iterate\r\n271- solution needs sympy, yes random\r\n273- solution needs sympy, yes random\r\n\r\nSet 4: derivatives (replace?)\r\n\r\nSet 5: extrema/critical points\r\n\r\nSet 6: Tangent line/linear approximation\r\n\r\nSet 7: 1D autonomous, sketch or stability\r\n\r\nSet 8: Forward Euler\r\n\r\nSet 9: Bifurcation\r\n\r\nSet 10: 2D dynamical system\r\n"}, "pk": 56}, {"model": "mitesting.assessment", "fields": {"short_name": "", "code": "spiking_voltage_worksheet", "detailed_description": null, "fixed_order": true, "name": "Spiking voltage worksheet", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": false, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": false, "instructions2": null, "total_points": null, "notes": ""}, "pk": 57}, {"model": "mitesting.assessment", "fields": {"short_name": "Discrete SIR", "code": "discrete_sir_infectious_disease_model_worksheet", "detailed_description": "", "fixed_order": true, "name": "A discrete SIR infectious disease model", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": true, "instructions2": "", "total_points": null, "notes": ""}, "pk": 63}, {"model": "mitesting.assessment", "fields": {"short_name": "", "code": "math_1241_quiz4", "detailed_description": "<p>Quiz 4 tests basic differentiation skills and concepts.  Questions involve {% intlink \"approximating_nonlinear_function_by_linear\" %}secant lines{%endintlink%} and a {% intlink \"derivative_intuition\"%}graphical intuition of the derivative{%endintlink%}.  Quiz 4 also includes differentation of {% intlink \"derivative_power_function\" %}power functions{%endintlink%}, {% intlink \"derivatives_polynomials_refresher\" %}poiynomials{%endintlink%}, {% intlink \"exploring_derivative_exponential_function\"%}exponential{%endintlink%}, {% intlink \"derivative_natural_logarithm\" %}logarithms{%endintlink%}, and {% intlink \"product_rule_idea\" %}products{%endintlink%}.</p>", "fixed_order": false, "name": "Quiz 4", "groups_can_view_solution": [], "description": "The first quiz of the differentiation module", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 7, "time_limit": "", "instructions": "", "nothing_random": false, "instructions2": "", "total_points": null, "notes": "Question Set1: differentiate polynomial\r\nQuestion Set2: product rule\r\nQuestion Set3: graphical estimate of derivative"}, "pk": 67}, {"model": "mitesting.assessment", "fields": {"short_name": "Penicillin clearance", "code": "penicillin_clearance_model_project", "detailed_description": "<h4>Project summary</h4>\r\n\r\n<p>Develop a discrete dynamical system model that describes {% intlink \"penicillin_clearance_model\" %}penicillin clearance by the kidneys{%endintlink%}, fit the parameter of the model to a {% intlink \"penicillin_clearance_model\" anchor=\"the_data\" %}dataset{%endintlink%}, and compare the results of the model to the data.</p>\r\n\r\n<h4>Suggested steps</h4>\r\n\r\n<p>Here are some suggestions for going about creating and analyzing the mathematical model.</p>\r\n\r\n<ol>\r\n  <li><p>Read and possibly rework how we developed and analyzed the {% intlink \"bacteria_growth_initial_model\" %}model of bacteria growth{%endintlink%}</p></li>\r\n\r\n  <li><p>Read the background on {% intlink \"penicillin_clearance_model\" %}penicillin clearance by the kidneys{%endintlink%}, focusing on the assumption about the pencillin clearance and how it is similar to the bacteria growth.</p></li>\r\n\r\n  <li><p>Introduce appropriate notation to describe the dynamical system you will write.  Think about what variable you should use for time.  Time in minutes or time measured in a different way?</p></li>\r\n\r\n  <li><p>Write a {% intlink \"discrete_dynamical_system_introduction\" %}discrete dynamical system model{%endintlink%} describing the change in penicillin concentration.  Compared to the {% intlink \"bacteria_growth_initial_model\" %}bacteria growth model{%endintlink%}, you will need a crucial negative sign here.  Penicillin is removed at each time step, so the change in penicillin concentration is negative.  Since we don't know how fast the kidneys are removing the penicillin, be sure to include a parameter that specifies the speed of penicillin clearance</p>\r\n    \r\n<li><p>Use the above data to determine the clearance speed parameter from the model.  The steps for the {% intlink \"bacteria_growth_initial_model\" %}bacteria model{%endintlink%} will work well here.  You can use the {% intlink \"population_change_versus_population_line\" class=\"applet\" %}linear model for population change applet{% endintlink %} even though we aren't talking about populations here.  At this level of description, your penicillin clearance model will have the same form as a population change model.  (It may be easier to use if you download the applet and {% extlink \"http://geogebra.com\" %}Geogebra{%endextlink%} on your computer, as described in the {% intlink \"population_change_versus_population_line\" class=\"applet\" %}applet page{% endintlink %}.)</p>\r\n\r\n<p>Note that it is important that you find one value for the parameter from the entire dataset.  Don't determine separate values of the parameter for individual or pairs of data points.  According to the word model that forms the basis for this mathematical model, this parameter should stay fixed for all time points.</p>\r\n  </li>\r\n    \r\n  <li><p>Write a solution to your dynamical system model.  Use the value of the parameter determined above and the initial data points as your initial condition. If all goes well, your model should describe {% intlink \"exponential_growth_decay_discrete\" %}exponential decay{% endintlink%} in the penicillin concentration, so you know exactly the form your solution should take.  Assuming that you used a different scale for time than minutes, rewrite your solution to give the penicillin concentration in terms of minutes after bolus injection.</p></li>\r\n  <li><p> Compare the values computed from your solution with the observed data.  One way to do this is download the {% intlink \"function_iteration\" class=\"applet\" %}function iteration applet{% endintlink %} on your computer and run it in  {% extlink \"http://geogebra.com\" %}Geogebra{%endextlink%}.  (In this applet, you'll have to type in $x$ for the penicillin concentration variable in your dynamical system model.)  It's fairly simple to add points corresponding to the data into Geogebra, as detailed with the {% intlink \"dynamical_systems_exploration\" anchor=\"lead\"%}lead decay model from the dynamical system exploration page{%endintlink%}.  You should find that your model fits the data quite well.</p></li>\r\n</ol>\r\n\r\n\r\n\r\n<h4>Requirements for project report</h4>\r\n\r\n<p>Your project report should be no longer than three pages.  It should contain the following sections.</p>\r\n\r\n<ol>\r\n<li><p><b>Background:</b> Give a short description of penicillin clearance.  Include the role of the kidneys and the word model that you used as a basis of the mathematical model.  (No math in this section.)</p></li>\r\n\r\n<li><p><b>The model:</b> Describe the discrete dynamical system model you used to model the penicillin clearance.  Be sure to clearly define all the notation used and identify any parameters. Remember a dynamical system model must always specify initial conditions.</p></li>\r\n\r\n<li><p><b>Determination of model parameters:</b> Explain how you determined the parameter in your dynamical system model.  Either include a printout of a graph used to determine the parameter or sketch what the graph looked like, with clearly labeled axes.  Clearly spell out your procedure for determining the parameter from the graph.</p></li>\r\n    \r\n<li><p><b>Model solution:</b> Briefly sketch how you determined the solution to the model.  As a service to your reader, you should rewrite the dynamical system after substituting the value of the parameter determined above and using the initial data point as the initial condition.  Once you have solved it,  rewrite your solution to give the penicillin concentration in terms of minutes after bolus injection.</p></li>\r\n\r\n<li><p><b>Model comparison:</b> Compare the values computed from your solution with the observed data.  Display your results with a graph.</p></li>\r\n\r\n<li><p><b>Conclusion:</b> Summarize your result.  In your summary, evaluate how well the model fit the data in order to conclude how well the word model captured the actual penicillin clearance.  Also, mention how close your result was to the result from the literature that 20 percent of the penicillin leaves the blood every five minutes.  </p></li>\r\n\r\n</ol>", "fixed_order": false, "name": "Penicillin clearance model project", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": false, "groups_can_view": [], "assessment_type": 9, "time_limit": "", "instructions": "<p>Nothing particular on this page, as students can even access this.</p>\r\n\r\n<p>Would it be a good idea to have a solution or guide for assistants here?</p>", "nothing_random": true, "instructions2": "", "total_points": 25.0, "notes": ""}, "pk": 78}, {"model": "mitesting.assessment", "fields": {"short_name": "Quotient and chain", "code": "quotient_chain_rule", "detailed_description": "", "fixed_order": true, "name": "Quotient rule and chain rule", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": true, "instructions2": "", "total_points": null, "notes": ""}, "pk": 93}, {"model": "mitesting.assessment", "fields": {"short_name": "Max and min", "code": "maximization_minimization", "detailed_description": "", "fixed_order": true, "name": "Maximization and minimization", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": true, "instructions2": "", "total_points": null, "notes": ""}, "pk": 104}, {"model": "mitesting.assessment", "fields": {"short_name": "Linear diffeq", "code": "simple_linear_differential_equation_worksheet", "detailed_description": "", "fixed_order": true, "name": "Introduction to simple linear differential equations", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": true, "instructions2": "", "total_points": null, "notes": ""}, "pk": 108}, {"model": "mitesting.assessment", "fields": {"short_name": "", "code": "spruce_budworm_outbreak_project", "detailed_description": "<h4>Project summary</h4>\r\n\r\n<p>Determine the evolution of the {% intlink \"spruce_budworm_outbreak_model\" %}spruce budworm outbreak{% endintlink%} based on a model of the population dynamics in response to predation by birds and carrying capacity of the forest.  Present the results with a summary diagram that show sthe evolution of the outbreak, including how it begins and ends.</p>\r\n\r\n<h4>Requirements for project report</h4>\r\n\r\n<p>Your project report should be no longer than three pages.  It should contain the following sections.</p>\r\n\r\n<ol>\r\n  <li><p><b>The model</b></p>\r\n\r\n  <p>Introduce the model of the spruce budworm evolution.  Explain the meaning of the parameters $r$ and $a$ as well as important features of the form of the function describing predation by birds.</p>\r\n\r\n  <li><p><b>The build-up toward the insect outbreak</b></p>\r\n\r\n   <p>Describe the situation of the model when $r=0.52$ and $a=3.6$, in particular, the equilibria and their stability.  For any stable equilibria, describe the initial conditions for which the solution will converge to the equilibrium.</p>\r\n\r\n<p>Describe what changes when you increase $a$ above $7.1$, such as to 7.5.  In particular, determine the equilibria and their stability.  For any stable equilibria, describe the initial conditions for which the solution will converge to the equilibrium.  If there are multiple stable equilibria compare the level of bird predation $h(w)$ at the equilibria.</p>\r\n\r\n<p>If we started with a small forest (i.e., a small $a$), and the forest then grew to this size where $a$ is around 7.5, describe the state of the budworm population (which equilibrium it would be near).</p>\r\n\r\n<p>Describe any changes if you further increase the forest size to give a carrying capacity around $a=20$.   If the forest grew to this size, describe the state of the budworm population.</p>\r\n</p>\r\n\r\n  <li><p><b>The outbreak</b></p>\r\n    <p>Describe the situation when the carrying capacity is around $a=30$.   In particular, determine the equilibria and their stability.  For any stable equilibria, describe the initial conditions for which the solution will converge to the equilibrium. Assess the role the birds in controlling the outbreak.  (Is their predation level much larger than if $w$ were a tenth this size?)</p>\r\n</li>\r\n\r\n  <li><p><b>The decline of the outbreak</b></p>\r\n   <p>Describe what happens to the spruce budworm population as the forest begins to die due the outbreak, decreasing the carrying capacity back down to $a=20$.  In particular, compare this situation to the case when $a=20$, above.  Discuss why the budworm population is different this time.</p> \r\n  <p>Discuss how far the carrying capacity must be dropped before the outbreak stops.  In particular, for what value of $a$ does the equilibrium corresponding to the outbreak disappear?</p>\r\n  </li>\r\n  <li><p><b>Summary figure</b></p>\r\n    <p>Your final task is to create this summary diagram with $a$ on the horizontal axis and $w$ on the vertical axis.  Draw a bifurcation diagram, with solid lines representing stable equilibria and dashed lines representing unstable equilibria.  On top of the bifurcation diagram, draw a curve showing the evolution of the spruce budworm population size $w$ and the carrying capacity $a$ through the whole cycle of the outbreak.  This curve should have arrows, to show how the state changes with time, and it should be a loop, as this cycle will continue.</p>\r\n\r\n<p>Be sure to label everything clearly on the diagram so the foresters can understand what your model is telling them.  Use this diagram to tell the story of how the model predicts how the spruce budworm outbreak initiates and is terminated.  Remember, the foresters may not understand mathematics very well, so include enough description so that they can follow what you did.</p>\r\n  </li>\r\n\r\n</ol>", "fixed_order": false, "name": "Spruce budworm outbreak", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 9, "time_limit": "", "instructions": "", "nothing_random": false, "instructions2": "", "total_points": 25.0, "notes": ""}, "pk": 111}, {"model": "mitesting.assessment", "fields": {"short_name": "", "code": "introducing_rabbit_predators_project", "detailed_description": "<h4>Project summary</h4>\r\n\r\n<p>Evaluate the strategy of {% intlink \"introducing_rabbit_predators\" %}introducing foxes to Foxless Island{%endintlink%} as a way to control the rabbit population by analyzing a mathematical model of the rabbit-fox system, the {% extlink \"http://en.wikipedia.org/wiki/Lotka%E2%80%93Volterra_equation\" %}Lotka-Volterra{%endextlink%} equations of {% intlink \"introducing_rabbit_predators\" equation=\"system_with_parameters\" %}equation (tag){%endintlink%}. </p>\r\n\r\n<h4>Requirements for project report</h4>\r\n\r\n<p>Your project report should be no longer than three pages.  It should contain the following sections.</p>\r\n\r\n<ol>\r\n<li><p><b>The uncoupled system:</b> Solve the {% intlink \"introducing_rabbit_predators\" equation=\"rabbits_alone\" %}uncoupled rabbit equation (tag){%endintlink%} and the {% intlink \"introducing_rabbit_predators\" equation=\"foxes_alone\" %}uncoupled fox equation (tag){%endintlink%} for any positive values of the parameters $\\alpha$ and $\\gamma$ and any initial conditions $r(0)=r_0$ and $f(0)=f_0$.  What would happen to the rabbit population if there were no foxes?  What would happen to the fox population if there were no rabbits?</p></li>\r\n\r\n<li><p><b>The model:</b> Write down the general form of the predator-prey (or Lotka-Volterra) equations, i.e.,  equations {% intlink \"introducing_rabbit_predators\" equation=\"rabbits_with_foxes\" %}(tag){%endintlink%} and {% intlink \"introducing_rabbit_predators\" equation=\"foxes_with_rabbits\" %}(tag){%endintlink%} in terms of the four parameters $\\alpha$, $\\beta$, $\\gamma$, and $\\delta$ (don't give them numerical values yet).  Explain the meaning of the parameters and the four terms from the system of equations.  Explain why might one expect this model to exhibit better control of the rabbit population than a model where you continually harvest a fixed fraction of rabbits.  The latter model might look like\r\n\t$$\\diff{r}{t} = \\alpha r - \\beta r.$$\r\n\t(Hint: how does the fact the the fox population size responds to fluctuations in the rabbit population size relieve some of the problems of the fixed fraction harvesting model.)</p></li>\r\n\r\n    \r\n<li><p><b>Model solution:</b>  Use the applet to explore the solution of the model with the given parameters, i.e., {% intlink \"introducing_rabbit_predators\" equation=\"system_with_parameters\" %}equation (tag){%endintlink%}, starting with the initial conditions of 3000 rabbits and 70 foxes.  Describe the behavior of the system as time evolves, and, using the model equation, explain why this occurs.  Evaluate whether or not this type of behavior makes sense for the evolution of the rabbit and fox populations.  Explore whether or not the behavior changes with different initial conditions and slightly different values of the parameters $\\alpha$, $\\beta$, $\\gamma$, and $\\delta$.  Determine if the oscillations are robust to small changes in parameters and initial conditions.  In your presentation, include some plots of $r$ and $p$ versus time $t$ as well as plots of the solution curve $(r(t),p(t))$ through the phase plane.  Since the phase plane curve does not show time, indicate where in the phase plane the state $(r(t),p(t))$ moves faster or slower.</p></li>\r\n   \r\n\r\n<li><p><b>Equilibria</b>:  Show that the system {% intlink \"introducing_rabbit_predators\" equation=\"system_with_parameters\" %} (tag){%endintlink%} has two equilibria: the trivial equilibrium $(0,0)$ with no rabbits or foxes and another non-zero equilibrium.  Calculate the values of the equilibria analytically from the equations.  From simulating the solution with nearby initial conditions using the applet, determine it the equilibria seem to be stable or unstable.  Justify your conclusions.</p></li>\r\n \r\n<li><p><b>Model stupidity</b>:  Describe the model prediction for the case if you introduced only two foxes rather than 70, i.e., with initial conditions $(r(0),p(0))=(3000,2)$.  Explain what doesn't make sense about the prediction of the model for these initial conditions.</p></li>\r\n    \r\n \r\n<li><p><b>Conclusion</b>:  Explain what can you conclude from your model analysis.  Can you make a convincing case that introducing foxes to Foxless Island will help control the rabbit population?  Even if it doesn't show that one will get good results in all cases, can you use the model to develop a strategy that will lead to a more or less stable population of around a thousand rabbits?  In particular, if we estimate that Foxless currently has around 3000 rabbits, can you get to a more or less stable population of a thousand rabbits just by introducing an appropriate number of foxes? Can you improve your result if you help the foxes out by initially harvesting some rabbits yourself?  Does the model help you address the two objections that you envisioned people making (at the end of the Background section)?  Why or why not?</p></li>\r\n \r\n</ol>\r\n\r\n", "fixed_order": false, "name": "Introducing rabbit predators", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 9, "time_limit": "", "instructions": "", "nothing_random": false, "instructions2": "", "total_points": 25.0, "notes": ""}, "pk": 112}, {"model": "mitesting.assessment", "fields": {"short_name": "Spiking neuron", "code": "simple_spiking_neuron_model", "detailed_description": "", "fixed_order": true, "name": "A simple spiking neuron model", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 4, "time_limit": "", "instructions": "", "nothing_random": true, "instructions2": "", "total_points": null, "notes": ""}, "pk": 113}, {"model": "mitesting.assessment", "fields": {"short_name": "", "code": "math_1241_quiz11", "detailed_description": "<p>Quiz 11 is the first quiz on two-dimensional differential equations.  It covers {% intlink \"phase_plane_visualize_differential_equation\" %}phase plane analysis{%endintlink%} of the {%intlink \"infectious_disease_model_with_immunity\" %}SIR infectious disease model{%endintlink%} and a {% intlink \"dynamics_competition_between_two_species\" %}model of competition between two species{%endintlink%}.</p>\r\n\r\n<p>The applets in this quiz take time to load and may lock up your browser for a minute. Please be patient.</p>", "fixed_order": true, "name": "Quiz 11", "groups_can_view_solution": [], "description": "", "allow_solution_buttons": true, "groups_can_view": [], "assessment_type": 7, "time_limit": "", "instructions": "", "nothing_random": false, "instructions2": "", "total_points": null, "notes": ""}, "pk": 115}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 30.0, "assessment": 56}, "pk": 22}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 30.0, "assessment": 56}, "pk": 23}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 25.0, "assessment": 56}, "pk": 24}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 4, "group": "", "points": 20.0, "assessment": 56}, "pk": 25}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 5, "group": "", "points": 30.0, "assessment": 56}, "pk": 26}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 6, "group": "", "points": 25.0, "assessment": 56}, "pk": 27}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 7, "group": "", "points": 30.0, "assessment": 56}, "pk": 28}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 8, "group": "", "points": 30.0, "assessment": 56}, "pk": 29}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 9, "group": "", "points": 30.0, "assessment": 56}, "pk": 30}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 10, "group": "", "points": 50.0, "assessment": 56}, "pk": 31}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 2.0, "assessment": 67}, "pk": 37}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 2.0, "assessment": 67}, "pk": 38}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 2.0, "assessment": 67}, "pk": 39}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 4, "group": "", "points": 2.0, "assessment": 67}, "pk": 120}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 2.0, "assessment": 115}, "pk": 138}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 6.0, "assessment": 115}, "pk": 139}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 1.0, "assessment": 63}, "pk": 143}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 1.0, "assessment": 63}, "pk": 144}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 1.0, "assessment": 63}, "pk": 145}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 0.8, "assessment": 13}, "pk": 185}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 0.9, "assessment": 13}, "pk": 186}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 0.9, "assessment": 13}, "pk": 187}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 4, "group": "", "points": 0.4, "assessment": 13}, "pk": 188}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 0.4, "assessment": 93}, "pk": 205}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 0.4, "assessment": 93}, "pk": 206}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 0.4, "assessment": 93}, "pk": 207}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 4, "group": "", "points": 0.3, "assessment": 93}, "pk": 208}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 5, "group": "", "points": 1.0, "assessment": 93}, "pk": 209}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 6, "group": "", "points": 0.5, "assessment": 93}, "pk": 210}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 0.5, "assessment": 104}, "pk": 237}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 0.5, "assessment": 104}, "pk": 238}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 0.5, "assessment": 104}, "pk": 239}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 4, "group": "", "points": 0.5, "assessment": 104}, "pk": 240}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 5, "group": "", "points": 0.5, "assessment": 104}, "pk": 241}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 6, "group": "", "points": 0.5, "assessment": 104}, "pk": 242}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 0.7, "assessment": 108}, "pk": 243}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 0.7, "assessment": 108}, "pk": 244}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 0.8, "assessment": 108}, "pk": 245}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 4, "group": "", "points": 0.8, "assessment": 108}, "pk": 246}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 1.0, "assessment": 36}, "pk": 249}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 1.0, "assessment": 36}, "pk": 250}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 0.5, "assessment": 36}, "pk": 251}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 4, "group": "", "points": 0.5, "assessment": 36}, "pk": 252}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 1.0, "assessment": 38}, "pk": 253}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 1.0, "assessment": 38}, "pk": 254}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 1.0, "assessment": 38}, "pk": 255}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 0.7, "assessment": 45}, "pk": 261}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 0.8, "assessment": 45}, "pk": 262}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 0.8, "assessment": 45}, "pk": 263}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 4, "group": "", "points": 0.7, "assessment": 45}, "pk": 264}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 1.0, "assessment": 48}, "pk": 265}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 1.0, "assessment": 48}, "pk": 266}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 3, "group": "", "points": 1.0, "assessment": 48}, "pk": 267}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 1, "group": "", "points": 1.0, "assessment": 113}, "pk": 274}, {"model": "mitesting.questionsetdetail", "fields": {"question_set": 2, "group": "", "points": 2.0, "assessment": 113}, "pk": 275}, {"model": "mitesting.questionassigned", "fields": {"question": 193, "question_set": 3, "assessment": 36}, "pk": 199}, {"model": "mitesting.questionassigned", "fields": {"question": 660, "question_set": 2, "assessment": 38}, "pk": 207}, {"model": "mitesting.questionassigned", "fields": {"question": 218, "question_set": 1, "assessment": 45}, "pk": 226}, {"model": "mitesting.questionassigned", "fields": {"question": 609, "question_set": 1, "assessment": 48}, "pk": 241}, {"model": "mitesting.questionassigned", "fields": {"question": 263, "question_set": 4, "assessment": 55}, "pk": 278}, {"model": "mitesting.questionassigned", "fields": {"question": 32, "question_set": 2, "assessment": 56}, "pk": 284}, {"model": "mitesting.questionassigned", "fields": {"question": 622, "question_set": 5, "assessment": 56}, "pk": 308}, {"model": "mitesting.questionassigned", "fields": {"question": 366, "question_set": 6, "assessment": 56}, "pk": 312}, {"model": "mitesting.questionassigned", "fields": {"question": 193, "question_set": 7, "assessment": 56}, "pk": 315}, {"model": "mitesting.questionassigned", "fields": {"question": 633, "question_set": 8, "assessment": 56}, "pk": 319}, {"model": "mitesting.questionassigned", "fields": {"question": 281, "question_set": 10, "assessment": 56}, "pk": 323}, {"model": "mitesting.questionassigned", "fields": {"question": 281, "question_set": 5, "assessment": 55}, "pk": 326}, {"model": "mitesting.questionassigned", "fields": {"question": 284, "question_set": 10, "assessment": 56}, "pk": 327}, {"model": "mitesting.questionassigned", "fields": {"question": 477, "question_set": 5, "assessment": 93}, "pk": 548}, {"model": "mitesting.questionassigned", "fields": {"question": 525, "question_set": 3, "assessment": 104}, "pk": 621}, {"model": "mitesting.questionassigned", "fields": {"question": 564, "question_set": 3, "assessment": 108}, "pk": 677}, {"model": "mitesting.questionassigned", "fields": {"question": 565, "question_set": 4, "assessment": 108}, "pk": 678}, {"model": "mitesting.questionassigned", "fields": {"question": 617, "question_set": 2, "assessment": 115}, "pk": 750}, {"model": "mitesting.questionassigned", "fields": {"question": 586, "question_set": 6, "assessment": 56}, "pk": 759}, {"model": "mitesting.questionassigned", "fields": {"question": 284, "question_set": 5, "assessment": 55}, "pk": 775}, {"model": "mitesting.questionassigned", "fields": {"question": 656, "question_set": 2, "assessment": 93}, "pk": 794}, {"model": "mitesting.expression", "fields": {"question": 32, "real_variables": true, "name": "differentpars", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "And(Not(Eq(par1,par2)),Not(Eq(par1,par3)),Not(Eq(par2,par3)))", "function_inputs": "", "post_user_response": false, "sort_order": 1001.0, "expression_type": "CN"}, "pk": 108}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "zero", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "0", "function_inputs": "x", "post_user_response": false, "sort_order": 1001.0, "expression_type": "FN"}, "pk": 737}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "b", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "a+b_minus_a", "function_inputs": "", "post_user_response": false, "sort_order": 1003.0, "expression_type": "UT"}, "pk": 738}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "c", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "b+c_minus_b", "function_inputs": "", "post_user_response": false, "sort_order": 1004.0, "expression_type": "UT"}, "pk": 739}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "fun", "random_list_group": "", "evaluate_level": 0, "parse_subscripts": false, "expression": "coef*(x-a)*(x-b)*(x-c)", "function_inputs": "x", "post_user_response": false, "sort_order": 1005.0, "expression_type": "FN"}, "pk": 740}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "c_less_than_10", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "c<10", "function_inputs": "", "post_user_response": false, "sort_order": 1006.0, "expression_type": "CN"}, "pk": 741}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "initial1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "-10+initial_factor1*(a+10)", "function_inputs": "", "post_user_response": false, "sort_order": 1007.0, "expression_type": "UT"}, "pk": 743}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "initial2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "a+initial_factor2*(b-a)", "function_inputs": "", "post_user_response": false, "sort_order": 1008.0, "expression_type": "UT"}, "pk": 744}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "initial3", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "b+initial_factor3*(c-b)", "function_inputs": "", "post_user_response": false, "sort_order": 1009.0, "expression_type": "UT"}, "pk": 745}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "initial4", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "c+initial_factor4*(10-c)", "function_inputs": "", "post_user_response": false, "sort_order": 1010.0, "expression_type": "UT"}, "pk": 746}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "nonzero_coef", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "coef", "function_inputs": "", "post_user_response": false, "sort_order": 1002.0, "expression_type": "CN"}, "pk": 747}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "fun_minus_10", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun(-10)", "function_inputs": "", "post_user_response": false, "sort_order": 1011.0, "expression_type": "UT"}, "pk": 796}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "fun_10", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun(10)", "function_inputs": "", "post_user_response": false, "sort_order": 1012.0, "expression_type": "UT"}, "pk": 797}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "fun_a_b", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun((a+b)/2)", "function_inputs": "", "post_user_response": false, "sort_order": 1013.0, "expression_type": "UT"}, "pk": 798}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "fun_b_c", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun((b+c)/2)", "function_inputs": "", "post_user_response": false, "sort_order": 1014.0, "expression_type": "UT"}, "pk": 799}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "range_at_special_points", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "Max(fun_minus_10,fun_10,fun_a_b,fun_b_c)-Min(fun_minus_10,fun_10,fun_a_b,fun_b_c)", "function_inputs": "", "post_user_response": false, "sort_order": 1015.0, "expression_type": "UT"}, "pk": 800}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "min_abs_at_special_points", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "Min(Abs(fun_minus_10),Abs(fun_10),Abs(fun_a_b),Abs(fun_b_c))", "function_inputs": "", "post_user_response": false, "sort_order": 1016.0, "expression_type": "UT"}, "pk": 801}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "special_point_ratio", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "range_at_special_points/min_abs_at_special_points", "function_inputs": "", "post_user_response": false, "sort_order": 1017.0, "expression_type": "UT"}, "pk": 802}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "small_special_point_ratio", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "special_point_ratio<30", "function_inputs": "", "post_user_response": false, "sort_order": 1018.0, "expression_type": "UT"}, "pk": 803}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "xnullyvalue", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "alpha/beta", "function_inputs": "", "post_user_response": false, "sort_order": 1001.0, "expression_type": "UT"}, "pk": 1454}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "ynullxvalue", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "gamma/delta", "function_inputs": "", "post_user_response": false, "sort_order": 1002.0, "expression_type": "UT"}, "pk": 1455}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "Ex", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "ynullxvalue", "function_inputs": "", "post_user_response": false, "sort_order": 1003.0, "expression_type": "UT"}, "pk": 1475}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "Ey", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "xnullyvalue", "function_inputs": "", "post_user_response": false, "sort_order": 1004.0, "expression_type": "UT"}, "pk": 1476}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "more_prey_than_predator", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "Ex > 5*Ey", "function_inputs": "", "post_user_response": false, "sort_order": 1005.0, "expression_type": "CN"}, "pk": 1477}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "sufficient_predators", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "Ey>50", "function_inputs": "", "post_user_response": false, "sort_order": 1006.0, "expression_type": "CN"}, "pk": 1478}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "initial_condition_close_to_E", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "((x0 - Ex) / Ex)^2 + ((y0 - Ey) / Ey)^2<1", "function_inputs": "", "post_user_response": false, "sort_order": 1007.0, "expression_type": "CN"}, "pk": 1490}, {"model": "mitesting.expression", "fields": {"question": 284, "real_variables": true, "name": "one_over_gamma", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "1/gamma", "function_inputs": "", "post_user_response": false, "sort_order": 1001.0, "expression_type": "UT"}, "pk": 1491}, {"model": "mitesting.expression", "fields": {"question": 284, "real_variables": true, "name": "vnull", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "-v*(v-a)*(v-1)", "function_inputs": "v", "post_user_response": false, "sort_order": 1002.0, "expression_type": "FN"}, "pk": 1492}, {"model": "mitesting.expression", "fields": {"question": 284, "real_variables": true, "name": "vnullrightmaxv", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(1 + a + sqrt(1 - a + a^2)) / 3", "function_inputs": "", "post_user_response": false, "sort_order": 1003.0, "expression_type": "UT"}, "pk": 1493}, {"model": "mitesting.expression", "fields": {"question": 284, "real_variables": true, "name": "vnullrightmax", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "vnull(vnullrightmaxv)", "function_inputs": "", "post_user_response": false, "sort_order": 1004.0, "expression_type": "UT"}, "pk": 1494}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "b", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "a+d", "function_inputs": "", "post_user_response": false, "sort_order": 1001.0, "expression_type": "UT"}, "pk": 1968}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "F", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "x^2*(x-a)", "function_inputs": "x", "post_user_response": false, "sort_order": 1002.0, "expression_type": "FN"}, "pk": 1970}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "answer", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "d*b^2 + b*(a+3*d)*(x-b)", "function_inputs": "", "post_user_response": false, "sort_order": 1003.0, "expression_type": "UT"}, "pk": 1971}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "F_expand", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "expand(F(x))", "function_inputs": "", "post_user_response": false, "sort_order": 1004.0, "expression_type": "UT"}, "pk": 3318}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "dF", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "expand(diff(F(x),x))", "function_inputs": "x", "post_user_response": false, "sort_order": 1005.0, "expression_type": "FN"}, "pk": 3319}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "F_b", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "F(b)", "function_inputs": "", "post_user_response": false, "sort_order": 1006.0, "expression_type": "UT"}, "pk": 3320}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "dF_b", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "dF(b)", "function_inputs": "", "post_user_response": false, "sort_order": 1007.0, "expression_type": "UT"}, "pk": 3321}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "fun", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(a*x^2+b*x+c)*ln(x)", "function_inputs": "x", "post_user_response": false, "sort_order": 1001.0, "expression_type": "FN"}, "pk": 5192}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "fun_prime", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(fun(x),x)", "function_inputs": "x", "post_user_response": false, "sort_order": 1002.0, "expression_type": "FN"}, "pk": 5193}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "dfun_x0", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "fun_prime(x0)", "function_inputs": "", "post_user_response": false, "sort_order": 1003.0, "expression_type": "UT"}, "pk": 5194}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "fun_x0", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "fun(x0)", "function_inputs": "", "post_user_response": false, "sort_order": 1004.0, "expression_type": "UT"}, "pk": 5195}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "linear_approximation", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "dfun_x0*(x-x0)+fun_x0", "function_inputs": "", "post_user_response": false, "sort_order": 1005.0, "expression_type": "UT"}, "pk": 5196}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "minus_x0", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-x0", "function_inputs": "", "post_user_response": false, "sort_order": 1006.0, "expression_type": "UT"}, "pk": 5197}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "nonzero_increment", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "dx", "function_inputs": "", "post_user_response": false, "sort_order": 1007.0, "expression_type": "CN"}, "pk": 5198}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "x1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "x0+dx", "function_inputs": "", "post_user_response": false, "sort_order": 1008.0, "expression_type": "UT"}, "pk": 5199}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "fun_x1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "fun(x1)", "function_inputs": "", "post_user_response": false, "sort_order": 1009.0, "expression_type": "UT"}, "pk": 5200}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "L_x1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "dfun_x0*dx+fun_x0", "function_inputs": "", "post_user_response": false, "sort_order": 1010.0, "expression_type": "UT"}, "pk": 5201}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "nonzero_pars", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "a", "function_inputs": "", "post_user_response": false, "sort_order": 1011.0, "expression_type": "CN"}, "pk": 5202}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "c", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "cnumer/cdenom", "function_inputs": "", "post_user_response": false, "sort_order": 1001.0, "expression_type": "UT"}, "pk": 6208}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funx", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "rx*x*(1-(x+c*y)/Kx)", "function_inputs": "x,y", "post_user_response": false, "sort_order": 1003.0, "expression_type": "FN"}, "pk": 6209}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funy", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "ry*y*(1-(y+c*x)/Ky)", "function_inputs": "x,y", "post_user_response": false, "sort_order": 1004.0, "expression_type": "FN"}, "pk": 6210}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "E4x", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(c*Ky - Kx)/ (c^2 - 1)", "function_inputs": "", "post_user_response": false, "sort_order": 1005.0, "expression_type": "UT"}, "pk": 6211}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "E4y", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(c*Kx - Ky) /(c^2-1)", "function_inputs": "", "post_user_response": false, "sort_order": 1006.0, "expression_type": "UT"}, "pk": 6212}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "E4valid", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "And(E4x > 0, E4y >0)", "function_inputs": "", "post_user_response": false, "sort_order": 1007.0, "expression_type": "UT"}, "pk": 6213}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "E4negative", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "Or(E4x < 0, E4y <0)", "function_inputs": "", "post_user_response": false, "sort_order": 1008.0, "expression_type": "UT"}, "pk": 6214}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "E4_not_close_to_0", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "And(Or(E4x>Kx*0.2,E4x <-0.001),Or(E4y>Ky*0.2,E4y<-0.001))", "function_inputs": "", "post_user_response": false, "sort_order": 1009.0, "expression_type": "CN"}, "pk": 6215}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "one", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "1", "function_inputs": "", "post_user_response": false, "sort_order": 1010.0, "expression_type": "UT"}, "pk": 6216}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "equilibria3", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(0,0), (Kx,0), (0,Ky)", "function_inputs": "", "post_user_response": false, "sort_order": 1038.0, "expression_type": "UT"}, "pk": 6244}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "equilibria4", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(0,0), (Kx,0), (0,Ky), (E4x, E4y)", "function_inputs": "", "post_user_response": false, "sort_order": 1039.0, "expression_type": "UT"}, "pk": 6245}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "crecip", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "1/c", "function_inputs": "", "post_user_response": false, "sort_order": 1040.0, "expression_type": "UT"}, "pk": 6246}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "icxlarge", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "E4x/Kx<E4y/Ky", "function_inputs": "", "post_user_response": false, "sort_order": 1044.0, "expression_type": "UT"}, "pk": 6250}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "icmin1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "if(icxlarge, max(E4x+(Kx-E4x)*0.1, Kx/4.0),max(E4y+(Ky-E4y)*0.1, Ky/4.0))", "function_inputs": "", "post_user_response": false, "sort_order": 1045.0, "expression_type": "UT"}, "pk": 6251}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "icmax1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "if(icxlarge, Kx-(Kx-icmin1)*0.2,Ky-(Ky-icmin1)*0.2)", "function_inputs": "", "post_user_response": false, "sort_order": 1046.0, "expression_type": "UT"}, "pk": 6252}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "icxy1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "round((icmin1+(icmax1-icmin1)*ic1)/10)*10", "function_inputs": "", "post_user_response": false, "sort_order": 1047.0, "expression_type": "UT"}, "pk": 6253}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "icmin2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "if(icxlarge, (Kx-icxy1)/(10*c), (Ky-icxy1)/(10*c))", "function_inputs": "", "post_user_response": false, "sort_order": 1048.0, "expression_type": "UT"}, "pk": 6254}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "icmax2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "if(icxlarge, (Kx-icxy1)/(2*c), (Ky-icxy1)/(2*c))", "function_inputs": "", "post_user_response": false, "sort_order": 1049.0, "expression_type": "UT"}, "pk": 6255}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "icxy2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "round((icmin2+(icmax2-icmin2)*ic2)/10)*10", "function_inputs": "", "post_user_response": false, "sort_order": 1050.0, "expression_type": "UT"}, "pk": 6256}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "x0", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "if(icxlarge,icxy1,icxy2)", "function_inputs": "", "post_user_response": false, "sort_order": 1051.0, "expression_type": "UT"}, "pk": 6257}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "y0", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "if(icxlarge,icxy2,icxy1)", "function_inputs": "", "post_user_response": false, "sort_order": 1052.0, "expression_type": "UT"}, "pk": 6258}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "A1x", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "Min(Kx, Ky*crecip)/3", "function_inputs": "", "post_user_response": false, "sort_order": 1053.0, "expression_type": "UT"}, "pk": 6259}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "A1y", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "Min(Ky,Kx*crecip)/3", "function_inputs": "", "post_user_response": false, "sort_order": 1054.0, "expression_type": "UT"}, "pk": 6260}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funx_A1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "funx(A1x,A1y)", "function_inputs": "", "post_user_response": false, "sort_order": 1055.0, "expression_type": "UT"}, "pk": 6261}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funy_A1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "funy(A1x,A1y)", "function_inputs": "", "post_user_response": false, "sort_order": 1056.0, "expression_type": "UT"}, "pk": 6262}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "A2x", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "Kx*1.1", "function_inputs": "", "post_user_response": false, "sort_order": 1057.0, "expression_type": "UT"}, "pk": 6263}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "A2y", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "Ky*1.1", "function_inputs": "", "post_user_response": false, "sort_order": 1058.0, "expression_type": "UT"}, "pk": 6264}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funx_A2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "funx(A2x,A2y)", "function_inputs": "", "post_user_response": false, "sort_order": 1059.0, "expression_type": "UT"}, "pk": 6265}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funy_A2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "funy(A2x,A2y)", "function_inputs": "", "post_user_response": false, "sort_order": 1060.0, "expression_type": "UT"}, "pk": 6266}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "A3x", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "if(E4valid, E4x / 3, (Kx + max(Kx - Ky*1.5 / crecip, 0) + min(Ky*crecip, Kx*1.5)) / 4)", "function_inputs": "", "post_user_response": false, "sort_order": 1061.0, "expression_type": "UT"}, "pk": 6267}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "A3y", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "if(E4valid, min(E4y + (crecip + c)*E4x / 3, (Ky + Ky*1.5) / 2), (Ky + max(Ky - Kx*1.5 / crecip, 0) + min(Ky*1.5, Kx*crecip)) / 4)", "function_inputs": "", "post_user_response": false, "sort_order": 1062.0, "expression_type": "UT"}, "pk": 6268}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funx_A3", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "funx(A3x,A3y)", "function_inputs": "", "post_user_response": false, "sort_order": 1063.0, "expression_type": "UT"}, "pk": 6269}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funy_A3", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "funy(A3x,A3y)", "function_inputs": "", "post_user_response": false, "sort_order": 1064.0, "expression_type": "UT"}, "pk": 6270}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funx_A3_pos", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "funx_A3 > 0", "function_inputs": "", "post_user_response": false, "sort_order": 1065.0, "expression_type": "UT"}, "pk": 6271}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funy_A3_pos", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "funy_A3 > 0", "function_inputs": "", "post_user_response": false, "sort_order": 1066.0, "expression_type": "UT"}, "pk": 6272}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "A4x", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "min(E4x + (crecip + c) E4y / 3, (Kx + Kx*1.5) / 2)", "function_inputs": "", "post_user_response": false, "sort_order": 1067.0, "expression_type": "UT"}, "pk": 6273}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "A4y", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "E4y / 3", "function_inputs": "", "post_user_response": false, "sort_order": 1068.0, "expression_type": "UT"}, "pk": 6274}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funx_A4", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "funx(A4x,A4y)", "function_inputs": "", "post_user_response": false, "sort_order": 1069.0, "expression_type": "UT"}, "pk": 6275}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "funy_A4", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "funy(A4x,A4y)", "function_inputs": "", "post_user_response": false, "sort_order": 1070.0, "expression_type": "UT"}, "pk": 6276}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "not_more_lions_than_hyenas", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "Not(Or(And(animalx==lion, Kx > Ky), And(animaly==lion, Ky > Kx)))", "function_inputs": "", "post_user_response": false, "sort_order": 1002.0, "expression_type": "CN"}, "pk": 6277}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "fun", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "flip*(-a*ln(c*x)+sqrt(b*x))", "function_inputs": "x", "post_user_response": false, "sort_order": 1001.0, "expression_type": "FN"}, "pk": 6368}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "fun_prime", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(fun(x),x)", "function_inputs": "x", "post_user_response": false, "sort_order": 1002.0, "expression_type": "FN"}, "pk": 6369}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "critical_point", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "4*a**2/b", "function_inputs": "", "post_user_response": false, "sort_order": 1003.0, "expression_type": "UT"}, "pk": 6370}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "minus_a_flip", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "-a*flip", "function_inputs": "", "post_user_response": false, "sort_order": 1004.0, "expression_type": "UT"}, "pk": 6371}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "x_fun_prime", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "expand(x*fun_prime(x))", "function_inputs": "", "post_user_response": false, "sort_order": 1005.0, "expression_type": "UT"}, "pk": 6372}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "interval1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0,critical_point)", "function_inputs": "", "post_user_response": false, "sort_order": 1006.0, "expression_type": "EX"}, "pk": 6373}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "interval2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(critical_point,oo)", "function_inputs": "", "post_user_response": false, "sort_order": 1007.0, "expression_type": "EX"}, "pk": 6374}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "auxpoint1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "critical_point/2", "function_inputs": "", "post_user_response": false, "sort_order": 1008.0, "expression_type": "UT"}, "pk": 6375}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "auxpoint2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "ceiling(critical_point+1)", "function_inputs": "", "post_user_response": false, "sort_order": 1009.0, "expression_type": "UT"}, "pk": 6376}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "fun_prime_a1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun_prime(auxpoint1)", "function_inputs": "", "post_user_response": false, "sort_order": 1010.0, "expression_type": "UT"}, "pk": 6377}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "fun_prime_a2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun_prime(auxpoint2)", "function_inputs": "", "post_user_response": false, "sort_order": 1011.0, "expression_type": "UT"}, "pk": 6378}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "increasedecrease1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "[decreasing,increasing][if(fun_prime_a1>0,1,0)]", "function_inputs": "", "post_user_response": false, "sort_order": 1012.0, "expression_type": "UT"}, "pk": 6379}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "increasedecrease2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "[decreasing,increasing][if(fun_prime_a2>0,1,0)]", "function_inputs": "", "post_user_response": false, "sort_order": 1013.0, "expression_type": "UT"}, "pk": 6380}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "fun_prime_a1_round", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun_prime_a1", "function_inputs": "", "post_user_response": false, "sort_order": 1014.0, "expression_type": "UT"}, "pk": 6381}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "fun_prime_a2_round", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun_prime_a2", "function_inputs": "", "post_user_response": false, "sort_order": 1015.0, "expression_type": "UT"}, "pk": 6382}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "xmax", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "critical_point*5", "function_inputs": "", "post_user_response": false, "sort_order": 1016.0, "expression_type": "UT"}, "pk": 6383}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "xmin", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "-0.1*xmax", "function_inputs": "", "post_user_response": false, "sort_order": 1017.0, "expression_type": "UT"}, "pk": 6384}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "ymax", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "max(fun(critical_point*0.01)*1.1, fun(critical_point)*1.1, fun(xmax)*1.1,1)", "function_inputs": "", "post_user_response": false, "sort_order": 1018.0, "expression_type": "UT"}, "pk": 6385}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "ymin", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "min(fun(critical_point*0.01)*1.1, fun(critical_point)*1.1, fun(xmax)*1.1,-1)", "function_inputs": "", "post_user_response": false, "sort_order": 1019.0, "expression_type": "UT"}, "pk": 6386}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "a_nonzero", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "a", "function_inputs": "", "post_user_response": false, "sort_order": 1001.0, "expression_type": "CN"}, "pk": 6881}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "deltat", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "round(1/Abs(a),1)", "function_inputs": "", "post_user_response": false, "sort_order": 1002.0, "expression_type": "UT"}, "pk": 6882}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "initial_nonzero", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "initial", "function_inputs": "", "post_user_response": false, "sort_order": 1003.0, "expression_type": "CN"}, "pk": 6883}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "t1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "deltat", "function_inputs": "", "post_user_response": false, "sort_order": 1004.0, "expression_type": "UT"}, "pk": 6884}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "t2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "2*deltat", "function_inputs": "", "post_user_response": false, "sort_order": 1005.0, "expression_type": "UT"}, "pk": 6885}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "t3", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "3*deltat", "function_inputs": "", "post_user_response": false, "sort_order": 1006.0, "expression_type": "UT"}, "pk": 6886}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "fun", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "a*ln(b*x^2)", "function_inputs": "x", "post_user_response": false, "sort_order": 1007.0, "expression_type": "FN"}, "pk": 6887}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "fun_of_initial", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun(initial)", "function_inputs": "", "post_user_response": false, "sort_order": 1008.0, "expression_type": "UT"}, "pk": 6888}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "fe1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "initial+fun_of_initial*deltat", "function_inputs": "", "post_user_response": false, "sort_order": 1009.0, "expression_type": "UT"}, "pk": 6889}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "fun_of_fe1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun(fe1)", "function_inputs": "", "post_user_response": false, "sort_order": 1010.0, "expression_type": "UT"}, "pk": 6890}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "fe2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fe1+fun_of_fe1*deltat", "function_inputs": "", "post_user_response": false, "sort_order": 1011.0, "expression_type": "UT"}, "pk": 6891}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "fun_of_fe2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fun(fe2)", "function_inputs": "", "post_user_response": false, "sort_order": 1012.0, "expression_type": "UT"}, "pk": 6892}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "fe3", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "fe2+fun_of_fe2*deltat", "function_inputs": "", "post_user_response": false, "sort_order": 1013.0, "expression_type": "UT"}, "pk": 6893}, {"model": "mitesting.expression", "fields": {"question": 32, "real_variables": true, "name": "statevar", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "p,q,r,s,u,v,w,x,y,z,P,Q,R,S,U,V,W,X,Y,Z", "function_inputs": null, "post_user_response": false, "sort_order": 1.0, "expression_type": "RE"}, "pk": 6957}, {"model": "mitesting.expression", "fields": {"question": 32, "real_variables": true, "name": "timevar", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "n,t", "function_inputs": null, "post_user_response": false, "sort_order": 2.0, "expression_type": "RE"}, "pk": 6958}, {"model": "mitesting.expression", "fields": {"question": 32, "real_variables": true, "name": "par1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "a,b,c,d,h,k,m", "function_inputs": null, "post_user_response": false, "sort_order": 3.0, "expression_type": "RE"}, "pk": 6959}, {"model": "mitesting.expression", "fields": {"question": 32, "real_variables": true, "name": "par2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "a,b,c,d,h,k,m", "function_inputs": null, "post_user_response": false, "sort_order": 4.0, "expression_type": "RE"}, "pk": 6960}, {"model": "mitesting.expression", "fields": {"question": 32, "real_variables": true, "name": "par3", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "a,b,c,d,h,k,m", "function_inputs": null, "post_user_response": false, "sort_order": 5.0, "expression_type": "RE"}, "pk": 6961}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "a", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(-8, 0, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 1.0, "expression_type": "RN"}, "pk": 7408}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "b_minus_a", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(1, 10, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 2.0, "expression_type": "RN"}, "pk": 7409}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "c_minus_b", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(1, 10, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 3.0, "expression_type": "RN"}, "pk": 7410}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "coef", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(-4, 4, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 4.0, "expression_type": "RN"}, "pk": 7411}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "initial_factor1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.1, 0.7, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 5.0, "expression_type": "RN"}, "pk": 7412}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "initial_factor2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.2, 0.8, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 6.0, "expression_type": "RN"}, "pk": 7413}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "initial_factor3", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.2, 0.8, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 7.0, "expression_type": "RN"}, "pk": 7414}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "initial_factor4", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.3, 0.9, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 8.0, "expression_type": "RN"}, "pk": 7415}, {"model": "mitesting.expression", "fields": {"question": 193, "real_variables": true, "name": "x", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "x,y,z,s,u,v,w", "function_inputs": null, "post_user_response": false, "sort_order": 9.0, "expression_type": "RE"}, "pk": 7416}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "alpha", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.5, 2.0, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 1.0, "expression_type": "RN"}, "pk": 7778}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "beta", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.01, 0.05, 0.01)", "function_inputs": null, "post_user_response": false, "sort_order": 2.0, "expression_type": "RN"}, "pk": 7779}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "gamma", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.1, 0.5, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 3.0, "expression_type": "RN"}, "pk": 7780}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "delta", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.0001, 0.001, 0.0001)", "function_inputs": null, "post_user_response": false, "sort_order": 4.0, "expression_type": "RN"}, "pk": 7781}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "x0", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(10, gamma/delta*2, 10)", "function_inputs": null, "post_user_response": false, "sort_order": 5.0, "expression_type": "RN"}, "pk": 7782}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "y0", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(10, alpha/beta*2, 10)", "function_inputs": null, "post_user_response": false, "sort_order": 6.0, "expression_type": "RN"}, "pk": 7783}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "prey", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "rabbit, (deer, deer), seal, zebra, antelope", "function_inputs": "", "post_user_response": false, "sort_order": 7.0, "expression_type": "RW"}, "pk": 7784}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "predator", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "(fox, foxes), (wolf, wolves), \"polar bear\", lion, cheetah", "function_inputs": "", "post_user_response": false, "sort_order": 8.0, "expression_type": "RW"}, "pk": 7785}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "x", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "r,e,s,z,a", "function_inputs": null, "post_user_response": false, "sort_order": 9.0, "expression_type": "RE"}, "pk": 7786}, {"model": "mitesting.expression", "fields": {"question": 281, "real_variables": true, "name": "y", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "f,w,b,l,c", "function_inputs": null, "post_user_response": false, "sort_order": 10.0, "expression_type": "RE"}, "pk": 7787}, {"model": "mitesting.expression", "fields": {"question": 284, "real_variables": true, "name": "a", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.1, 0.3, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 1.0, "expression_type": "RN"}, "pk": 7804}, {"model": "mitesting.expression", "fields": {"question": 284, "real_variables": true, "name": "epsilon", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.001, 0.01, 0.001)", "function_inputs": null, "post_user_response": false, "sort_order": 2.0, "expression_type": "RN"}, "pk": 7805}, {"model": "mitesting.expression", "fields": {"question": 284, "real_variables": true, "name": "gamma", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(1, 4, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 3.0, "expression_type": "RN"}, "pk": 7806}, {"model": "mitesting.expression", "fields": {"question": 284, "real_variables": true, "name": "v02", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(a*0.5, a*0.8, a*0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 4.0, "expression_type": "RN"}, "pk": 7807}, {"model": "mitesting.expression", "fields": {"question": 284, "real_variables": true, "name": "v01", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(a+0.1, 0.5, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 5.0, "expression_type": "RN"}, "pk": 7808}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "a", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(1, 5, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 1.0, "expression_type": "RN"}, "pk": 8121}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "c", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(-10, 10, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 2.0, "expression_type": "RN"}, "pk": 8122}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "d", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(1, 2, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 3.0, "expression_type": "RN"}, "pk": 8123}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "f", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "f,g,h,u,v,w,p,q,r", "function_inputs": "", "post_user_response": false, "sort_order": -1.0, "expression_type": "RE"}, "pk": 8124}, {"model": "mitesting.expression", "fields": {"question": 366, "real_variables": true, "name": "x", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "x,y,z,t,s", "function_inputs": "", "post_user_response": false, "sort_order": -2.0, "expression_type": "RE"}, "pk": 8125}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "a", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(-10, 10, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 1.0, "expression_type": "RN"}, "pk": 9134}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "b", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(-10, 10, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 2.0, "expression_type": "RN"}, "pk": 9135}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "c", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(-10, 10, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 3.0, "expression_type": "RN"}, "pk": 9136}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "tangent_term", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0, 1, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 4.0, "expression_type": "RN"}, "pk": 9137}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "x0", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.1, 5, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 5.0, "expression_type": "RN"}, "pk": 9138}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "dx", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(-0.05, 0.05, 0.01)", "function_inputs": null, "post_user_response": false, "sort_order": 6.0, "expression_type": "RN"}, "pk": 9139}, {"model": "mitesting.expression", "fields": {"question": 586, "real_variables": true, "name": "f", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "f,g,h", "function_inputs": null, "post_user_response": false, "sort_order": 7.0, "expression_type": "RE"}, "pk": 9140}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "rx", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.1, 0.9, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 1.0, "expression_type": "RN"}, "pk": 9340}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "ry", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.1, 0.9, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 2.0, "expression_type": "RN"}, "pk": 9341}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "Kx", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(400, 3000, 100)", "function_inputs": null, "post_user_response": false, "sort_order": 3.0, "expression_type": "RN"}, "pk": 9342}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "Ky", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(400, 3000, 100)", "function_inputs": null, "post_user_response": false, "sort_order": 4.0, "expression_type": "RN"}, "pk": 9343}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "cdenom", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(2, 5, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 5.0, "expression_type": "RN"}, "pk": 9344}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "cnumer", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(1, cdenom-1, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 6.0, "expression_type": "RN"}, "pk": 9345}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "ic1", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0, 1, 0.01)", "function_inputs": null, "post_user_response": false, "sort_order": 7.0, "expression_type": "RN"}, "pk": 9346}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "ic2", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0, 1, 0.01)", "function_inputs": null, "post_user_response": false, "sort_order": 8.0, "expression_type": "RN"}, "pk": 9347}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "animalx", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "(antelope, antelope), hyena, sponge, (caribou, caribou), lion, coral", "function_inputs": "", "post_user_response": false, "sort_order": 9.0, "expression_type": "RW"}, "pk": 9348}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "animaly", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "(caribou, caribou), lion, coral, (antelope, antelope), hyena, sponge", "function_inputs": "", "post_user_response": false, "sort_order": 10.0, "expression_type": "RW"}, "pk": 9349}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "x", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "a,H,s, c, L, c", "function_inputs": null, "post_user_response": false, "sort_order": 11.0, "expression_type": "RE"}, "pk": 9350}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "y", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "c,L,c, a, H, s", "function_inputs": null, "post_user_response": false, "sort_order": 12.0, "expression_type": "RE"}, "pk": 9351}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "location_preposition", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "on, on, in, on, on, in", "function_inputs": null, "post_user_response": false, "sort_order": 13.0, "expression_type": "RW"}, "pk": 9352}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "location", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "island, savannah, reef, island, savannah, reef", "function_inputs": null, "post_user_response": false, "sort_order": 14.0, "expression_type": "RW"}, "pk": 9353}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "limited_item", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "\"grazing space\", \"available prey\", space, \"grazing space\", \"available prey\", space", "function_inputs": "", "post_user_response": false, "sort_order": 15.0, "expression_type": "RW"}, "pk": 9354}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "a", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(1, 10, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 1.0, "expression_type": "RN"}, "pk": 9373}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "b", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(1, 10, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 2.0, "expression_type": "RN"}, "pk": 9374}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "c", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(1, 10, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 3.0, "expression_type": "RN"}, "pk": 9375}, {"model": "mitesting.expression", "fields": {"question": 622, "real_variables": true, "name": "flip", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(-1, 1, 2)", "function_inputs": null, "post_user_response": false, "sort_order": 4.0, "expression_type": "RN"}, "pk": 9376}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "a", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(-10, 10, 1)", "function_inputs": null, "post_user_response": false, "sort_order": 1.0, "expression_type": "RN"}, "pk": 9430}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "b", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(0.1, 1.9, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 2.0, "expression_type": "RN"}, "pk": 9431}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "initial", "random_list_group": null, "evaluate_level": 2, "parse_subscripts": false, "expression": "(-1, 1, 0.1)", "function_inputs": null, "post_user_response": false, "sort_order": 3.0, "expression_type": "RN"}, "pk": 9432}, {"model": "mitesting.expression", "fields": {"question": 633, "real_variables": true, "name": "x", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "x,y,z,s,u,v,w,m", "function_inputs": null, "post_user_response": false, "sort_order": 4.0, "expression_type": "RE"}, "pk": 9433}, {"model": "mitesting.expression", "fields": {"question": 656, "real_variables": true, "name": "poly_ratio", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "x^2/(1-x^2)", "function_inputs": "", "post_user_response": false, "sort_order": 1.0, "expression_type": "EX"}, "pk": 10310}, {"model": "mitesting.expression", "fields": {"question": 656, "real_variables": true, "name": "d_poly_ratio", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(poly_ratio,x)", "function_inputs": "x", "post_user_response": false, "sort_order": 2.0, "expression_type": "FN"}, "pk": 10311}, {"model": "mitesting.expression", "fields": {"question": 656, "real_variables": true, "name": "d_poly_ratio_3", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "d_poly_ratio(3)", "function_inputs": "", "post_user_response": false, "sort_order": 3.0, "expression_type": "EX"}, "pk": 10312}, {"model": "mitesting.expression", "fields": {"question": 656, "real_variables": true, "name": "exp_ratio", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(1-e^x)/(1+e^x)", "function_inputs": "", "post_user_response": false, "sort_order": 4.0, "expression_type": "EX"}, "pk": 10313}, {"model": "mitesting.expression", "fields": {"question": 656, "real_variables": true, "name": "d_exp_ratio", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(exp_ratio,x)", "function_inputs": "x", "post_user_response": false, "sort_order": 5.0, "expression_type": "FN"}, "pk": 10314}, {"model": "mitesting.expression", "fields": {"question": 656, "real_variables": true, "name": "d_exp_ratio_0", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "d_exp_ratio(0)", "function_inputs": "", "post_user_response": false, "sort_order": 6.0, "expression_type": "EX"}, "pk": 10315}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "e^(5x)", "function_inputs": "", "post_user_response": false, "sort_order": 1.0, "expression_type": "EX"}, "pk": 10348}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e1,x)", "function_inputs": "", "post_user_response": false, "sort_order": 2.0, "expression_type": "EX"}, "pk": 10349}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "9e^(-x^2/2)", "function_inputs": "", "post_user_response": false, "sort_order": 3.0, "expression_type": "EX"}, "pk": 10350}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e2,x)", "function_inputs": "", "post_user_response": false, "sort_order": 4.0, "expression_type": "EX"}, "pk": 10351}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e3", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "e^(-x)", "function_inputs": "", "post_user_response": false, "sort_order": 5.0, "expression_type": "EX"}, "pk": 10352}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de3", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e3,x)", "function_inputs": "", "post_user_response": false, "sort_order": 6.0, "expression_type": "EX"}, "pk": 10353}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e4", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "ln(3x^2-x)", "function_inputs": "", "post_user_response": false, "sort_order": 7.0, "expression_type": "EX"}, "pk": 10354}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de4", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e4,x)", "function_inputs": "", "post_user_response": false, "sort_order": 8.0, "expression_type": "EX"}, "pk": 10355}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e5", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "ln(x^5-2x^4+5)", "function_inputs": "", "post_user_response": false, "sort_order": 9.0, "expression_type": "EX"}, "pk": 10356}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de5", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e5,x)", "function_inputs": "", "post_user_response": false, "sort_order": 10.0, "expression_type": "EX"}, "pk": 10357}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e6", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "2ln(x-1)", "function_inputs": "", "post_user_response": false, "sort_order": 11.0, "expression_type": "EX"}, "pk": 10358}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de6", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e6,x)", "function_inputs": "", "post_user_response": false, "sort_order": 12.0, "expression_type": "EX"}, "pk": 10359}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e7sub", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "ln((x-1)^2)", "function_inputs": "", "post_user_response": false, "sort_order": 13.0, "expression_type": "EX"}, "pk": 10360}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e7", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "ln(x^2-2x+1)", "function_inputs": "", "post_user_response": false, "sort_order": 14.0, "expression_type": "EX"}, "pk": 10361}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de7", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e7,x)", "function_inputs": "", "post_user_response": false, "sort_order": 15.0, "expression_type": "EX"}, "pk": 10362}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e8", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "e^(-z^2)", "function_inputs": "", "post_user_response": false, "sort_order": 16.0, "expression_type": "EX"}, "pk": 10363}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de8", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e8,z)", "function_inputs": "", "post_user_response": false, "sort_order": 17.0, "expression_type": "EX"}, "pk": 10364}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e9", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "2e^(-5t)", "function_inputs": "", "post_user_response": false, "sort_order": 18.0, "expression_type": "EX"}, "pk": 10365}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de9", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e9,t)", "function_inputs": "", "post_user_response": false, "sort_order": 19.0, "expression_type": "EX"}, "pk": 10366}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e10", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "3e^(-5t^2)", "function_inputs": "", "post_user_response": false, "sort_order": 20.0, "expression_type": "EX"}, "pk": 10367}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de10", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e10,t)", "function_inputs": "", "post_user_response": false, "sort_order": 21.0, "expression_type": "EX"}, "pk": 10368}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e11", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "ln(z/5)", "function_inputs": "", "post_user_response": false, "sort_order": 22.0, "expression_type": "EX"}, "pk": 10369}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de11", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e11,z)", "function_inputs": "", "post_user_response": false, "sort_order": 23.0, "expression_type": "EX"}, "pk": 10370}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "e12", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "ln(-3y)", "function_inputs": "", "post_user_response": false, "sort_order": 24.0, "expression_type": "EX"}, "pk": 10371}, {"model": "mitesting.expression", "fields": {"question": 477, "real_variables": true, "name": "de12", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(e12,y)", "function_inputs": "", "post_user_response": false, "sort_order": 25.0, "expression_type": "EX"}, "pk": 10372}, {"model": "mitesting.expression", "fields": {"question": 525, "real_variables": true, "name": "g", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "e^(y-y^3)", "function_inputs": "y", "post_user_response": false, "sort_order": 1.0, "expression_type": "FN"}, "pk": 10763}, {"model": "mitesting.expression", "fields": {"question": 525, "real_variables": true, "name": "gprime", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(g(y),y)", "function_inputs": "y", "post_user_response": false, "sort_order": 2.0, "expression_type": "FN"}, "pk": 10764}, {"model": "mitesting.expression", "fields": {"question": 525, "real_variables": true, "name": "gprime_poly", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "expand(gprime(y)/g(y))", "function_inputs": "", "post_user_response": false, "sort_order": 3.0, "expression_type": "EX"}, "pk": 10765}, {"model": "mitesting.expression", "fields": {"question": 525, "real_variables": true, "name": "critical_points", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "roots_tuple(gprime_poly)", "function_inputs": "", "post_user_response": false, "sort_order": 4.0, "expression_type": "UT"}, "pk": 10766}, {"model": "mitesting.expression", "fields": {"question": 525, "real_variables": true, "name": "cp1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "expand(critical_points[0])", "function_inputs": "", "post_user_response": false, "sort_order": 5.0, "expression_type": "EX"}, "pk": 10767}, {"model": "mitesting.expression", "fields": {"question": 525, "real_variables": true, "name": "cp2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "critical_points[1]", "function_inputs": "", "post_user_response": false, "sort_order": 6.0, "expression_type": "EX"}, "pk": 10768}, {"model": "mitesting.expression", "fields": {"question": 525, "real_variables": true, "name": "g_cp1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "g(cp1)", "function_inputs": "", "post_user_response": false, "sort_order": 7.0, "expression_type": "EX"}, "pk": 10769}, {"model": "mitesting.expression", "fields": {"question": 525, "real_variables": true, "name": "g_cp2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "g(cp2)", "function_inputs": "", "post_user_response": false, "sort_order": 8.0, "expression_type": "EX"}, "pk": 10770}, {"model": "mitesting.expression", "fields": {"question": 525, "real_variables": true, "name": "two", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "2", "function_inputs": "", "post_user_response": false, "sort_order": 9.0, "expression_type": "EX"}, "pk": 10771}, {"model": "mitesting.expression", "fields": {"question": 525, "real_variables": true, "name": "g_2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "g(2)", "function_inputs": "", "post_user_response": false, "sort_order": 10.0, "expression_type": "EX"}, "pk": 10772}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "u", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "u", "function_inputs": "", "post_user_response": false, "sort_order": 1.0, "expression_type": "FE"}, "pk": 10819}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "v", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "v", "function_inputs": "", "post_user_response": false, "sort_order": 2.0, "expression_type": "FE"}, "pk": 10820}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "s", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "s", "function_inputs": "", "post_user_response": false, "sort_order": 3.0, "expression_type": "FE"}, "pk": 10821}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "z", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "z", "function_inputs": "", "post_user_response": false, "sort_order": 4.0, "expression_type": "FE"}, "pk": 10822}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "dudt", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "3u(t)", "function_inputs": "", "post_user_response": false, "sort_order": 5.0, "expression_type": "EX"}, "pk": 10823}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "u0", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "5", "function_inputs": "", "post_user_response": false, "sort_order": 6.0, "expression_type": "EX"}, "pk": 10824}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "usol", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "u0*e^(3t)", "function_inputs": "", "post_user_response": false, "sort_order": 7.0, "expression_type": "EX"}, "pk": 10825}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "dvdt", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-4v", "function_inputs": "", "post_user_response": false, "sort_order": 8.0, "expression_type": "EX"}, "pk": 10826}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "v0", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "7", "function_inputs": "", "post_user_response": false, "sort_order": 9.0, "expression_type": "EX"}, "pk": 10827}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "vsol", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "v0*e^(-4t)", "function_inputs": "", "post_user_response": false, "sort_order": 10.0, "expression_type": "EX"}, "pk": 10828}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "dsdt", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "s", "function_inputs": "", "post_user_response": false, "sort_order": 11.0, "expression_type": "EX"}, "pk": 10829}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "s0", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-2", "function_inputs": "", "post_user_response": false, "sort_order": 12.0, "expression_type": "EX"}, "pk": 10830}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "ssol", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "s0*e^(t)", "function_inputs": "", "post_user_response": false, "sort_order": 13.0, "expression_type": "EX"}, "pk": 10831}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "dzdt", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-z(t)", "function_inputs": "", "post_user_response": false, "sort_order": 14.0, "expression_type": "EX"}, "pk": 10832}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "z0", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-5", "function_inputs": "", "post_user_response": false, "sort_order": 15.0, "expression_type": "EX"}, "pk": 10833}, {"model": "mitesting.expression", "fields": {"question": 564, "real_variables": true, "name": "zsol", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "z0*e^(-t)", "function_inputs": "", "post_user_response": false, "sort_order": 16.0, "expression_type": "EX"}, "pk": 10834}, {"model": "mitesting.expression", "fields": {"question": 565, "real_variables": true, "name": "dydt", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "2y", "function_inputs": "", "post_user_response": false, "sort_order": 1.0, "expression_type": "EX"}, "pk": 10835}, {"model": "mitesting.expression", "fields": {"question": 565, "real_variables": true, "name": "ysol", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "C*e^(2t)", "function_inputs": "", "post_user_response": false, "sort_order": 2.0, "expression_type": "EX"}, "pk": 10836}, {"model": "mitesting.expression", "fields": {"question": 565, "real_variables": true, "name": "dxdt", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-3x(t)", "function_inputs": "", "post_user_response": false, "sort_order": 3.0, "expression_type": "EX"}, "pk": 10837}, {"model": "mitesting.expression", "fields": {"question": 565, "real_variables": true, "name": "xsol", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "C*e^(-3t)", "function_inputs": "", "post_user_response": false, "sort_order": 4.0, "expression_type": "EX"}, "pk": 10838}, {"model": "mitesting.expression", "fields": {"question": 565, "real_variables": true, "name": "dmdt", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "11m(t)", "function_inputs": "", "post_user_response": false, "sort_order": 5.0, "expression_type": "EX"}, "pk": 10839}, {"model": "mitesting.expression", "fields": {"question": 565, "real_variables": true, "name": "msol", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "C*e^(11t)", "function_inputs": "", "post_user_response": false, "sort_order": 6.0, "expression_type": "EX"}, "pk": 10840}, {"model": "mitesting.expression", "fields": {"question": 565, "real_variables": true, "name": "dvdt", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "v", "function_inputs": "", "post_user_response": false, "sort_order": 7.0, "expression_type": "EX"}, "pk": 10841}, {"model": "mitesting.expression", "fields": {"question": 565, "real_variables": true, "name": "vsol", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "C*e^t", "function_inputs": "", "post_user_response": false, "sort_order": 8.0, "expression_type": "EX"}, "pk": 10842}, {"model": "mitesting.expression", "fields": {"question": 565, "real_variables": true, "name": "m", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "m", "function_inputs": "", "post_user_response": false, "sort_order": -1.0, "expression_type": "FE"}, "pk": 10843}, {"model": "mitesting.expression", "fields": {"question": 565, "real_variables": true, "name": "x", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "x", "function_inputs": "", "post_user_response": false, "sort_order": -2.0, "expression_type": "FE"}, "pk": 10844}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "a", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(-10, 10, 1)", "function_inputs": "", "post_user_response": false, "sort_order": 1.0, "expression_type": "RN"}, "pk": 10918}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "b", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(-10, 10, 1)", "function_inputs": "", "post_user_response": false, "sort_order": 2.0, "expression_type": "RN"}, "pk": 10919}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "x", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "x,y,z,s,u,v,w", "function_inputs": "", "post_user_response": false, "sort_order": 3.0, "expression_type": "RE"}, "pk": 10920}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "x_e", "random_list_group": "a", "evaluate_level": 2, "parse_subscripts": false, "expression": "x_e,y_e,z_e,s_e,u_e,v_e,w_e", "function_inputs": "", "post_user_response": false, "sort_order": 4.0, "expression_type": "RE"}, "pk": 10921}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "quad_factored", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "x*(a*x+b)", "function_inputs": "x", "post_user_response": false, "sort_order": 1001.0, "expression_type": "FN"}, "pk": 10922}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "quad", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "expand(quad_factored(x))", "function_inputs": "x", "post_user_response": false, "sort_order": 1002.0, "expression_type": "FN"}, "pk": 10923}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "fun", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "quad(x)*exp(-x)", "function_inputs": "x", "post_user_response": false, "sort_order": 1003.0, "expression_type": "FN"}, "pk": 10924}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "a_nonzero", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "a", "function_inputs": "", "post_user_response": false, "sort_order": 1004.0, "expression_type": "CN"}, "pk": 10925}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "b_nonzero", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "b", "function_inputs": "", "post_user_response": false, "sort_order": 1005.0, "expression_type": "CN"}, "pk": 10926}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "fun_xe", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "fun(x_e)", "function_inputs": "", "post_user_response": false, "sort_order": 1006.0, "expression_type": "UT"}, "pk": 10927}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "quad_xe", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "quad(x_e)", "function_inputs": "", "post_user_response": false, "sort_order": 1007.0, "expression_type": "UT"}, "pk": 10928}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "quad_factored_xe", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "quad_factored(x_e)", "function_inputs": "", "post_user_response": false, "sort_order": 1008.0, "expression_type": "UT"}, "pk": 10929}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "E1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "0", "function_inputs": "", "post_user_response": false, "sort_order": 1009.0, "expression_type": "UT"}, "pk": 10930}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "E2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-b/a", "function_inputs": "", "post_user_response": false, "sort_order": 1010.0, "expression_type": "UT"}, "pk": 10931}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "fprime_sub", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "diff(fun(x),x)", "function_inputs": "x", "post_user_response": false, "sort_order": 1011.0, "expression_type": "FN"}, "pk": 10932}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "fprime", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "factor(fprime_sub(x))", "function_inputs": "x", "post_user_response": false, "sort_order": 1012.0, "expression_type": "FN"}, "pk": 10933}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "fprime_E1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "fprime(E1)", "function_inputs": "", "post_user_response": false, "sort_order": 1013.0, "expression_type": "UT"}, "pk": 10934}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "E1_stable", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "fprime_E1 < 0", "function_inputs": "", "post_user_response": false, "sort_order": 1014.0, "expression_type": "UT"}, "pk": 10935}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "fprime_E2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "fprime(E2)", "function_inputs": "", "post_user_response": false, "sort_order": 1015.0, "expression_type": "UT"}, "pk": 10936}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "E2_stable", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "fprime_E2 < 0", "function_inputs": "", "post_user_response": false, "sort_order": 1016.0, "expression_type": "UT"}, "pk": 10937}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "xmax", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "abs(E2)*1.3", "function_inputs": "", "post_user_response": false, "sort_order": 1017.0, "expression_type": "UT"}, "pk": 10938}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "xmin", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-xmax", "function_inputs": "", "post_user_response": false, "sort_order": 1018.0, "expression_type": "UT"}, "pk": 10939}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "min_abs_f_special_points", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "min(abs(fun(xmin)),abs(fun(xmax)),abs(fun((E1+E2)/2)))", "function_inputs": "", "post_user_response": false, "sort_order": 1019.0, "expression_type": "UT"}, "pk": 10940}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "fun_rescaled", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "fun(x)/min_abs_f_special_points*3", "function_inputs": "x", "post_user_response": false, "sort_order": 1020.0, "expression_type": "FN"}, "pk": 10941}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "Es", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "E1,E2", "function_inputs": "", "post_user_response": false, "sort_order": 1021.0, "expression_type": "ST"}, "pk": 10942}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "zeroindex", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "index(Es,E1)", "function_inputs": "", "post_user_response": false, "sort_order": 1022.0, "expression_type": "EX"}, "pk": 10943}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "stable_orig", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(E1_stable, E2_stable)", "function_inputs": "", "post_user_response": false, "sort_order": 1023.0, "expression_type": "EX"}, "pk": 10944}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "stable_sort", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(stable_orig[zeroindex],stable_orig[1-zeroindex])", "function_inputs": "", "post_user_response": false, "sort_order": 1024.0, "expression_type": "EX"}, "pk": 10945}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "stability", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "(if(stable_sort[0],stable,unstable),if(stable_sort[1],stable,unstable))", "function_inputs": "", "post_user_response": false, "sort_order": 1025.0, "expression_type": "EX"}, "pk": 10946}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "Es_unordered", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "Es", "function_inputs": "", "post_user_response": false, "sort_order": 1026.0, "expression_type": "UT"}, "pk": 10947}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "E1sort", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "Es[0]", "function_inputs": "", "post_user_response": false, "sort_order": 1027.0, "expression_type": "EX"}, "pk": 10948}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "E2sort", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "Es[1]", "function_inputs": "", "post_user_response": false, "sort_order": 1028.0, "expression_type": "EX"}, "pk": 10949}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "E1sort_stable", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "if(stable_sort[0],1,0)", "function_inputs": "", "post_user_response": false, "sort_order": 1029.0, "expression_type": "EX"}, "pk": 10950}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "E2sort_stable", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "if(stable_sort[1],1,0)", "function_inputs": "", "post_user_response": false, "sort_order": 1030.0, "expression_type": "EX"}, "pk": 10951}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "dir1", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "if(E1sort_stable,1,-1)", "function_inputs": "", "post_user_response": false, "sort_order": 1031.0, "expression_type": "EX"}, "pk": 10952}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "dir2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "if(E1sort_stable,-1,1)", "function_inputs": "", "post_user_response": false, "sort_order": 1032.0, "expression_type": "EX"}, "pk": 10953}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "dir3", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "if(E2sort_stable,-1,1)", "function_inputs": "", "post_user_response": false, "sort_order": 1033.0, "expression_type": "EX"}, "pk": 10954}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "two", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "2", "function_inputs": "", "post_user_response": false, "sort_order": 1034.0, "expression_type": "EX"}, "pk": 10955}, {"model": "mitesting.expression", "fields": {"question": 660, "real_variables": true, "name": "dx", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "abs(E2)/10", "function_inputs": "", "post_user_response": false, "sort_order": 1035.0, "expression_type": "EX"}, "pk": 10956}, {"model": "mitesting.expression", "fields": {"question": 218, "real_variables": true, "name": "one_minus_I", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "1-I", "function_inputs": "", "post_user_response": false, "sort_order": 2.0, "expression_type": "EX"}, "pk": 11127}, {"model": "mitesting.expression", "fields": {"question": 218, "real_variables": true, "name": "I", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "I", "function_inputs": "", "post_user_response": false, "sort_order": 1.0, "expression_type": "FE"}, "pk": 11128}, {"model": "mitesting.expression", "fields": {"question": 218, "real_variables": true, "name": "one_minus_I_t", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "1-I(t)", "function_inputs": "", "post_user_response": false, "sort_order": 3.0, "expression_type": "EX"}, "pk": 11129}, {"model": "mitesting.expression", "fields": {"question": 218, "real_variables": true, "name": "I_t", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "I(t)", "function_inputs": "", "post_user_response": false, "sort_order": 4.0, "expression_type": "EX"}, "pk": 11130}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "zero", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "0", "function_inputs": "", "post_user_response": false, "sort_order": 1.0, "expression_type": "EX"}, "pk": 11183}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "one", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "1", "function_inputs": "", "post_user_response": false, "sort_order": 2.0, "expression_type": "EX"}, "pk": 11184}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "minus_SI", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-S*I", "function_inputs": "", "post_user_response": false, "sort_order": 3.0, "expression_type": "EX"}, "pk": 11185}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "SI", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "S*I", "function_inputs": "", "post_user_response": false, "sort_order": 4.0, "expression_type": "EX"}, "pk": 11186}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "S", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "S", "function_inputs": "", "post_user_response": false, "sort_order": 5.0, "expression_type": "EX"}, "pk": 11187}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "I", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "I", "function_inputs": "", "post_user_response": false, "sort_order": 6.0, "expression_type": "EX"}, "pk": 11188}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "rhs_dI", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "S*I - 0.5 I", "function_inputs": "", "post_user_response": false, "sort_order": 7.0, "expression_type": "EX"}, "pk": 11189}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "rhs_dI_factored", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "I(S-0.5)", "function_inputs": "", "post_user_response": false, "sort_order": 8.0, "expression_type": "EX"}, "pk": 11190}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "S_greater_than_half", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "S > 0.5", "function_inputs": "", "post_user_response": false, "sort_order": 9.0, "expression_type": "EX"}, "pk": 11191}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "S_less_than_half", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "S < 0.5", "function_inputs": "", "post_user_response": false, "sort_order": 10.0, "expression_type": "EX"}, "pk": 11192}, {"model": "mitesting.expression", "fields": {"question": 609, "real_variables": true, "name": "half", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "0.5", "function_inputs": "", "post_user_response": false, "sort_order": 11.0, "expression_type": "EX"}, "pk": 11193}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "xmax", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "Kx*1.5", "function_inputs": "", "post_user_response": false, "sort_order": 1071.0, "expression_type": "EX"}, "pk": 11289}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "ymax", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "Ky*1.5", "function_inputs": "", "post_user_response": false, "sort_order": 1072.0, "expression_type": "EX"}, "pk": 11290}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "xmin", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-xmax*0.13", "function_inputs": "", "post_user_response": false, "sort_order": 1073.0, "expression_type": "EX"}, "pk": 11291}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "ymin", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "-ymax*0.06", "function_inputs": "", "post_user_response": false, "sort_order": 1074.0, "expression_type": "EX"}, "pk": 11292}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "equilibria_round", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "if(E4valid,equilibria4,equilibria3)", "function_inputs": "", "post_user_response": false, "sort_order": 1075.0, "expression_type": "UT"}, "pk": 11293}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "x_equals_zero", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "x=0", "function_inputs": "", "post_user_response": false, "sort_order": 1076.0, "expression_type": "EX"}, "pk": 11294}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "xnulleq2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "x + c*y=Kx", "function_inputs": "", "post_user_response": false, "sort_order": 1077.0, "expression_type": "EX"}, "pk": 11295}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "y_equals_zero", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "y=0", "function_inputs": "", "post_user_response": false, "sort_order": 1078.0, "expression_type": "EX"}, "pk": 11296}, {"model": "mitesting.expression", "fields": {"question": 617, "real_variables": true, "name": "ynulleq2", "random_list_group": "", "evaluate_level": 2, "parse_subscripts": false, "expression": "y + c*x=Ky", "function_inputs": "", "post_user_response": false, "sort_order": 1079.0, "expression_type": "EX"}, "pk": 11297}, {"model": "mitesting.sympycommandset", "fields": {"name": "Trigonometry functions", "default": false, "commands": "acosh, acos, acosh, acot, acoth, asin, asinh, atan, atan2, atanh, cos,  cosh, cot, coth, csc, sec, sin, sinh, tan, tanh"}, "pk": 1}, {"model": "mitesting.sympycommandset", "fields": {"name": "Exponential function and logarithm", "default": false, "commands": "exp,ln,log,e"}, "pk": 2}, {"model": "mitesting.sympycommandset", "fields": {"name": "Constants", "default": false, "commands": "pi,E,I"}, "pk": 3}, {"model": "mitesting.sympycommandset", "fields": {"name": "gcd", "default": false, "commands": "gcd"}, "pk": 4}, {"model": "mitesting.sympycommandset", "fields": {"name": "BooleansEq", "default": false, "commands": "And,Or,Xor,Not,Eq,Ne"}, "pk": 5}, {"model": "mitesting.sympycommandset", "fields": {"name": "minmax", "default": false, "commands": "Min,Max,min,max"}, "pk": 6}, {"model": "mitesting.sympycommandset", "fields": {"name": "sign", "default": false, "commands": "sign,"}, "pk": 7}, {"model": "mitesting.sympycommandset", "fields": {"name": "Mod", "default": false, "commands": "Mod"}, "pk": 8}, {"model": "mitesting.sympycommandset", "fields": {"name": "Derivative, diff", "default": false, "commands": "diff, Derivative"}, "pk": 9}, {"model": "mitesting.sympycommandset", "fields": {"name": "Abs", "default": false, "commands": "Abs, abs"}, "pk": 10}, {"model": "mitesting.sympycommandset", "fields": {"name": "round and evalf", "default": false, "commands": "round, evalf"}, "pk": 11}, {"model": "mitesting.sympycommandset", "fields": {"name": "sqrt", "default": false, "commands": "sqrt"}, "pk": 12}, {"model": "mitesting.sympycommandset", "fields": {"name": "rootssolve", "default": false, "commands": "roots, real_roots, roots_tuple, real_roots_tuple, root_number, real_root_number, solve"}, "pk": 13}, {"model": "mitesting.sympycommandset", "fields": {"name": "points and lines", "default": false, "commands": "Point, Line"}, "pk": 14}, {"model": "mitesting.sympycommandset", "fields": {"name": "floor and ceiling", "default": false, "commands": "floor, ceiling"}, "pk": 15}, {"model": "mitesting.sympycommandset", "fields": {"name": "fractions", "default": false, "commands": "fraction,numer,denom"}, "pk": 16}, {"model": "mitesting.sympycommandset", "fields": {"name": "index and count", "default": false, "commands": "index, count"}, "pk": 17}, {"model": "mitesting.sympycommandset", "fields": {"name": "smallest_factor", "default": false, "commands": "smallest_factor"}, "pk": 18}, {"model": "mitesting.sympycommandset", "fields": {"name": "infinity", "default": false, "commands": "oo"}, "pk": 19}, {"model": "mitesting.sympycommandset", "fields": {"name": "sum", "default": false, "commands": "sum"}, "pk": 20}, {"model": "mitesting.sympycommandset", "fields": {"name": "if, Piecewise", "default": false, "commands": "if, Piecewise"}, "pk": 21}, {"model": "mitesting.sympycommandset", "fields": {"name": "factor, expand, and collect", "default": false, "commands": "factor, expand, collect"}, "pk": 22}, {"model": "mitesting.sympycommandset", "fields": {"name": "len", "default": false, "commands": "len"}, "pk": 23}, {"model": "mitesting.sympycommandset", "fields": {"name": "Matrix", "default": false, "commands": "Matrix"}, "pk": 24}, {"model": "mitesting.sympycommandset", "fields": {"name": "Integral, integrate", "default": false, "commands": "Integral, integrate"}, "pk": 25}, {"model": "mitesting.sympycommandset", "fields": {"name": "Sum,summation", "default": false, "commands": "Sum,summation"}, "pk": 26}, {"model": "mitesting.sympycommandset", "fields": {"name": "Subs, DiffSubs", "default": false, "commands": "Subs, DiffSubs"}, "pk": 27}, {"model": "mitesting.sympycommandset", "fields": {"name": "is_number", "default": false, "commands": "is_number"}, "pk": 28}, {"model": "mitesting.sympycommandset", "fields": {"name": "scalar_multiple_deviation", "default": false, "commands": "scalar_multiple_deviation"}, "pk": 29}, {"model": "mitesting.sympycommandset", "fields": {"name": "I", "default": false, "commands": "I"}, "pk": 30}, {"model": "mitesting.sympycommandset", "fields": {"name": "map", "default": false, "commands": "map"}, "pk": 31}, {"model": "mitesting.sympycommandset", "fields": {"name": "cumsum", "default": false, "commands": "cumsum"}, "pk": 32}, {"model": "mitesting.sympycommandset", "fields": {"name": "median", "default": false, "commands": "median"}, "pk": 33}]