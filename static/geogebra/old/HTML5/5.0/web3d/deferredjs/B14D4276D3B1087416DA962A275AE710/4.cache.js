$wnd.web3d.runAsyncCallback4('function Idh(){}\nfunction heh(){heh=g4b;zdh=new Idh}\nfunction rph(c){$wnd.mwaw=new $wnd.WebMIDIAPIWrapper(true);var b=c;$wnd.mwaw.setMidiOutputSelect=function(){var a;for(a=0;a<$wnd.mwaw.devices.outputs.length;a++){b.rZ($wnd.mwaw.devices.outputs[a][m7i])}b.sZ();$wnd.mwaw.ports.out[0]=$wnd.mwaw.devices.outputs[b.b]};$wnd.mwaw.initMidi()}\nvar zdh;f4b(2242,1,xTi,Idh);_.Tg=function(){return \'webMidiAPIWrapperJs\'};_.Ug=function(){var a;a=new RKc;a.a+=\'/**\\n *  Copyright 2013 Ryoya KAWAI\\n *\\n *  Licensed under the Apache License, Version 2.0 (the "License");\\n *  you may not use this file except in compliance with the License.\\n *  You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n *  Unless required by applicable law or agreed to in writing, software\\n *  distributed under the License is distributed on an "AS IS" BASIS,\\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n *  See the License for the specific language governing permissions and\\n *  limitations under the License.\\n **/\\n\\nvar WebMIDIAPIWrapper = function( sysex ){\\n    this.midiAccess=null;\\n    this.ports={"in":[], "out":[]};\\n    this.devices={ };\\n    this.sysex=sysex;\\n    this.performanceNow=window.performance.now();\\n    this.lastStatusByte=null;\\n};\\n\\nWebMIDIAPIWrapper.prototype = {\\n    initMidi: function() {\\n        navigator.requestMIDIAccess({sysex: this.sysex}).then( this.scb.bind(this), this.ecb.bind(this) );\\n    },\\n    scb: function(access) {\\n        this.midiAccess = access;\\n        \\n        if (typeof this.midiAccess.inputs === "function") {\\n            this.devices.inputs=this.midiAccess.inputs();\\n            this.devices.outputs=this.midiAccess.outputs();\\n        } else {\\n            var inputIterator = this.midiAccess.inputs.values();\\n            this.devices.inputs = [];\\n            for (var o = inputIterator.next(); !o.done; o = inputIterator.next()) {\\n                this.devices.inputs.push(o.value);\\n            }\\n            var outputIterator = this.midiAccess.outputs.values();\\n            this.devices.outputs = [];\\n            for (var o = outputIterator.next(); !o.done; o = outputIterator.next()) {\\n                this.devices.outputs.push(o.value);\\n            }\\n        }\\n\\n        this.setMidiInputSelect.bind(this)();\\n        this.setMidiOutputSelect.bind(this)();\\n        // console.log("[OutputDevices] ", this.devices.outputs, "[InputDevices]", this.devices.inputs);\\n    },\\n    ecb: function(msg){\\n        // console.log("[ERROR] " + msg);\\n    },\\n    \\n    setMidiInputSelect: function() {\\n        // console.log("[ERROR] Set EventHandler : setMidiInputSelect");  \\n    },\\n    setMidiOutputSelect: function() {\\n        // console.log("[ERROR] Set EventHandler : setMidiOutputSelect");  \\n    },\\n\\n    setMidiInputToPort: function(selIdx, portNo, onmidimessage) {\\n        var portNo=0;\\n        this.ports.in[portNo]=this.devices.inputs[selIdx];\\n        this.ports.in[portNo].onmidimessage=onmidimessage.bind(this);\\n    },\\n    setMidiOutputToPort: function(selIdx, portNo) {\\n        var portNo=0;\\n        this.ports.out[portNo]=this.devices.outputs[selIdx];\\n        //this.setPitchBendValue(0, -8192, 8192, 0);\\n        this.setPitchBendValue(0, 0, 16383, 8192); // Apple DLS Synth\\n    },\\n    initializePerformanceNow: function() {\\n        this.performanceNow=window.performance.now();\\n    },\\n    _checkTyeof: function(type, obj) {\\n        var clas = Object.prototype.toString.call(obj).slice(8, -1);\\n        return obj !== undefined && obj !== null && clas === type;\\n    },\\n    _checkPortNo: function(portNo) {\\n        if(isNaN(portNo)===true) {\\n            // console.log("[ERROR] PortNo is NOT the type of number. ["+ portNo +"]");\\n            return false;\\n        }\\n        return parseInt(portNo ,10);\\n    },\\n    sendNoteOn: function(portNo, ch, note, velocity, time) {\\n        var portNo=this._checkPortNo(portNo);\\n        if(portNo===false) {\\n            // console.log("[ERROR] @sendNoteOn");\\n            return;\\n        }\\n        var now=this.performanceNow;\\n        var fb=parseInt("0x9" + ch.toString(16), 16);\\n        if(typeof time!=="number") {\\n            time=0;\\n        }\\n        var msg=[fb, note, velocity];\\n        this.ports.out[portNo].send(msg, now+time);\\n    },\\n    sendNoteOff: function(portNo, ch, note, velocity, time) {\\n        var portNo=this._checkPortNo(portNo);\\n        if(portNo===false) {\\n            // console.log("[ERROR] @sendNoteOn");\\n            return;\\n        }\\n        var now=this.performanceNow;\\n        var fb=parseInt("0x8" + ch.toString(16), 16);\\n        if(typeof time!=="number") {\\n            time=0;\\n        }\\n        var msg=[fb, note, velocity];\\n        this.ports.out[portNo].send(msg, now+time);\\n    },\\n    sendProgramChange: function(portNo, ch, programNo, time) {\\n        var portNo=this._checkPortNo(portNo);\\n        if(portNo===false) {\\n            // console.log("[ERROR] @sendNoteOn");\\n            return;\\n        }\\n        var now=this.performanceNow;\\n        var value = value < 0 ? 0 : value > 127 ? 127 : value;\\n        var fb=parseInt("0xc" + ch.toString(16), 16);\\n        if(typeof time!=="number") {\\n            time=0;\\n        }\\n        var msg=[fb, programNo];\\n        this.ports.out[portNo].send(msg, now+time);\\n    },\\n    setPitchBendValue: function(portNo, min, max, center) {\\n        this.ports.out[portNo].pitchBendValue={"min": parseInt(min), "max": parseInt(max), "center": parseInt(center)};\\n    },\\n    sendPitchBend: function(portNo, ch, value, time) {\\n        var portNo=this._checkPortNo(portNo);\\n        if(portNo===false) {\\n            // console.log("[ERROR] @sendNoteOn");\\n            return;\\n        }\\n        var now=this.performanceNow;\\n        var fb=parseInt("0xe" + ch.toString(16), 16);\\n        var value = value < this.ports.out[portNo].pitchBendValue.min ? this.ports.out[portNo].pitchBendValue.min : value > this.ports.out[portNo].pitchBendValue.max ? this.ports.out[portNo].pitchBendValue.max : value;\\n        var msb=(~~(value/128));\\n        var lsb=(value%128);\\n\\n        var msg=[fb, lsb, msb];\\n        this.ports.out[portNo].send(msg, now+time);\\n    },\\n    sendSustainStatus: function(portNo, ch, status, time) {\\n        var portNo=this._checkPortNo(portNo);\\n        if(portNo===false) {\\n            // console.log("[ERROR] @sendNoteOn");\\n            return;\\n        }\\n        var now=this.performanceNow;\\n        var fb=parseInt("0xb" + ch.toString(16), 16);\\n        var msg=[fb, 0x40, 0x00];\\n        switch(status) {\\n            case "on":\\n            msg=[fb, 0x40, 0x7f];\\n            break;\\n        }\\n        this.ports.out[portNo].send(msg, now+time);\\n    },\\n    sendModulationValue: function(portNo, ch, value, time) {\\n        var portNo=this._checkPortNo(portNo);\\n        if(portNo===false) {\\n            // console.log("[ERROR] @sendNoteOn");\\n            return;\\n        }\\n        var now=this.performanceNow;\\n        var fb=parseInt("0xb" + ch.toString(16), 16);\\n        var value = value < 0 ? 0 : value > 127 ? 127 : value;\\n        var msg=[fb, 0x01, value];\\n        this.ports.out[portNo].send(msg, now+time);\\n    },\\n    sendAllSoundOff: function(portNo, ch, time) {\\n        var portNo=this._checkPortNo(portNo);\\n        if(portNo===false) {\\n            // console.log("[ERROR] @sendNoteOn");\\n            return;\\n        }\\n        var now=this.performanceNow;\\n        var fb=parseInt("0xb" + ch.toString(16), 16);\\n        var msg=[ fb, 0x78, 0x00 ];\\n        this.ports.out[portNo].send(msg, now+time);\\n    },\\n    sendResetAllController: function(portNo, ch, time) {\\n        var portNo=this._checkPortNo(portNo);\\n        if(portNo===false) {\\n            // console.log("[ERROR] @sendNoteOn");\\n            return;\\n        }\\n        var now=this.performanceNow;\\n        var fb=parseInt("0xb" + ch.toString(16), 16);\\n        var msg=[ fb, 0x79, 0x00 ];\\n        this.ports.out[portNo].send(msg, now+time);\\n    },\\n    sendAllNoteOff: function(portNo, ch, time) {\\n        var portNo=this._checkPortNo(portNo);\\n        if(portNo===false) {\\n            // console.log("[ERROR] @sendNoteOn");\\n            return;\\n        }\\n        var now=this.performanceNow;\\n        var fb=parseInt("0xb" + ch.toString(16), 16);\\n        var msg=[ fb, 0x7b, 0x00 ];\\n        this.ports.out[portNo].send(msg, now+time);\\n    },\\n    sendRaw: function(portNo, msg, time) {\\n        var portNo=this._checkPortNo(portNo);\\n        if(portNo===false) {\\n            // console.log("[ERROR] @sendNoteOn");\\n            return;\\n        }\\n        var now=this.performanceNow;\\n        if(this._checkTyeof("array", msg)===true) {\\n            // console.log("[Error] SendRaw : msg must array." + msg);\\n            return;\\n        }\\n        this.ports.out[portNo].send(msg, now+time);\\n    },\\n    parseMIDIMessage: function(msg) {\\n        if(typeof msg!=="object") {\\n            return;\\n        }\\n\\n        var msg16=new Array();\\n        var event={ };\\n        var out={ };\\n        for(var i=0; i<msg.length; i++) {\\n            msg16.push(msg[i].toString(16));\\n        }\\n        var eventTypeByte=parseInt(msg[0], 16);\\n        if((msg[0] & 0xf0) == 0xf0) {\\n            // Systen Event\\n            if(msg[0]==0xf0) {\\n                event.type="SysEx";\\n                event.raw=msg;\\n            } else {\\n                // console.log("Not Supportted Message. ", msg);\\n            }\\n            out={\\n                "type": event.type,\\n                "data": event.raw,\\n                "event": event\\n            };\\n        } else {\\n            // Channel Event\\n            event.type="channel";\\n            event.raw=msg;\\n            // Not Supporting Running\\n            this.lastStatusByte=msg16[0]; // for Running Status\\n            event.statusNum=msg16[0].replace("0x", "").substr(0,1).toLowerCase();\\n            event.channel=parseInt((msg16[0].replace("0x", "").substr(1,1)),16);\\n            switch(event.statusNum) {\\n              case "8":\\n                event.subType="noteOff";\\n                event.noteNumber=msg[1];\\n                event.velocity=msg[2];\\n                break;\\n              case "9":\\n                event.subType="noteOn";\\n                event.noteNumber=msg[1];\\n                event.velocity=msg[2];\\n                // 0x9x 0xXX 0x00\\n                if(event.velocity==0) {\\n                    event.subType="noteOff";\\n                }\\n                break;\\n              case "a":\\n                event.subType="noteAftertouch";\\n                event.noteNumber=msg[1];\\n                event.amount=msg[2];\\n                break;\\n              case "b":\\n                event.subType="controller";\\n\\t\\t\\t\\t\\t      event.ctrlNo = msg[1];\\n\\t\\t\\t\\t\\t      event.value = msg[2];\\n                switch(event.ctrlNo) {\\n                  case 0x00:\\n                  case "0x00":\\n                    event.ctrlName="BankSelect";\\n                    event.valueType="MSB";\\n                    break;\\n                  case 0x20:\\n                  case "0x20":\\n                    event.ctrlName="BankSelect";\\n                    event.valueType="LSB";\\n                    break;\\n                  case 0x01:\\n                  case "0x01":\\n                    event.ctrlName="Modulation";\\n                    event.valueType="MSB";\\n                    break;\\n                  case 0x21:\\n                  case "0x21":\\n                    event.ctrlName="Modulation";\\n                    event.valueType="LSB";\\n                    break;\\n                  case 0x05:\\n                  case "0x05":\\n                    event.ctrlName="Portament";\\n                    event.valueType="MSB";\\n                    break;\\n                  case 0x25:\\n                  case "0x25":\\n                    event.ctrlName="Portament";\\n                    event.valueType="LSB";\\n                    break;\\n                  case 0x06:\\n                  case "0x06":\\n                    event.ctrlName="DataEntry";\\n                    event.valueType="MSB";\\n                    break;\\n                  case 0x26:\\n                  case "0x26":\\n                    event.ctrlName="DataEntry";\\n                    event.valueType="LSB";\\n                    break;\\n                  case 0x07:\\n                  case "0x07":\\n                    event.ctrlName="MainVolume";\\n                    event.valueType="MSB";\\n                    break;\\n                  case 0x27:\\n                  case "0x27":\\n                    event.ctrlName="MainVolume";\\n                    event.valueType="LSB";\\n                    break;\\n                  case 0x10:\\n                  case "0x10":\\n                    event.ctrlName="PanPot";\\n                    event.valueType="MSB";\\n                    break;\\n                  case 0x2a:\\n                  case "0x2a":\\n                    event.ctrlName="PanPot";\\n                    event.valueType="LSB";\\n                    break;\\n                  case 0x11:\\n                  case "0x11":\\n                    event.ctrlName="Expression";\\n                    event.valueType="MSB";\\n                    break;\\n                  case 0x2b:\\n                  case "0x2b":\\n                    event.ctrlName="Expression";\\n                    event.valueType="LSB";\\n                    break;\\n                  case 0x40:\\n                  case "0x40":\\n                    event.ctrlName="Hold";\\n                    event.ctrlStatus="Off";\\n                    if(event.value>=0x40) {\\n                        event.ctrlStatus="On";\\n                    }\\n                    break;\\n                  case 0x41:\\n                  case "0x41":\\n                    event.ctrlName="Portament";\\n                    event.ctrlStatus="Off";\\n                    if(event.value>=0x40) {\\n                        event.ctrlStatus="On";\\n                    }\\n                    break;\\n                  case 0x42:\\n                  case "0x42":\\n                    event.ctrlName="SosTenuto";\\n                    event.ctrlStatus="Off";\\n                    if(event.value>=0x40) {\\n                        event.ctrlStatus="On";\\n                    }\\n                    break;\\n                  case 0x43:\\n                  case "0x43":\\n                    event.ctrlName="SoftPedal";\\n                    event.ctrlStatus="Off";\\n                    if(event.value>=0x40) {\\n                        event.ctrlStatus="On";\\n                    }\\n                    break;\\n                  case 0x46:\\n                  case "0x46":\\n                    event.ctrlName="SoundController1";\\n                    break;\\n                  case 0x47:\\n                  case "0x47":\\n                    event.ctrlName="SoundController2";\\n                    break;\\n                  case 0x48:\\n                  case "0x48":\\n                    event.ctrlName="SoundController3";\\n                    break;\\n                  case 0x49:\\n                  case "0x49":\\n                    event.ctrlName="SoundController4";\\n                    break;\\n                  case 0x50:\\n                  case "0x50":\\n                    event.ctrlName="SoundController5";\\n                    break;\\n                  case 0x5b:\\n                  case "0x5b":\\n                    event.ctrlName="effectSendLevel1"; // SendLevel: Reberb \\n                    break;\\n                  case 0x5d:\\n                  case "0x5d":\\n                    event.ctrlName="effectSendLevel3"; // SendLevel: Chrus \\n                    break;\\n                  case 0x5e:\\n                  case "0x5e":\\n                    event.ctrlName="effectSendLevel4"; // [XG] ValiationEffect, [SC-88] SendLevel: Delay\\n                    break;\\n                  case 0x60:\\n                  case "0x60":\\n                    event.ctrlName="DataIncrement";\\n                    break;\\n                  case 0x61:\\n                  case "0x61":\\n                    event.ctrlName="DataDecrement";\\n                    break;\\n                  case 0x62:\\n                  case "0x62":\\n                    event.ctrlName="NRPN";\\n                    event.valueType="LSB";\\n                    break;\\n                  case 0x63:\\n                  case "0x63":\\n                    event.ctrlName="NRPN";\\n                    event.valueType="MSB";\\n                    break;\\n                  case 0x64:\\n                  case "0x64":\\n                    event.ctrlName="RPN";\\n                    event.valueType="LSB";\\n                    break;\\n                  case 0x65:\\n                  case "0x65":\\n                    event.ctrlName="RPN";\\n                    event.valueType="MSB";\\n                    break;\\n                  case 0x78:\\n                  case "0x78":\\n                    event.ctrlName="AllSoundOff";\\n                    break;\\n                  case 0x79:\\n                  case "0x79":\\n                    event.ctrlName="ResetAllController";\\n                    break;\\n           \';a.a+=\'       case 0x7b:\\n                  case "0x7b":\\n                    event.ctrlName="OmniOff";\\n                    break;\\n                  case 0x7c:\\n                  case "0x7c":\\n                    event.ctrlName="OmniOn";\\n                    break;\\n                  case 0x7e:\\n                  case "0x7e":\\n                    event.ctrlName="Mono";\\n                    break;\\n                  case 0x7f: \\n                  case "0x7f":\\n                    event.ctrlName="Poly";\\n                    break;\\n                default:\\n                    event.ctrlName="NotDefined";\\n                    break;\\n                }\\n                \\n                break;\\n              case "c":\\n          \\t    event.subType = \\\'programChange\\\';\\n\\t\\t\\t\\t\\t      event.programNumber = msg[1];\\n                break;\\n\\t\\t\\t\\t      case "d":\\n\\t\\t\\t\\t\\t      event.subType = \\\'channelAftertouch\\\';\\n\\t\\t\\t\\t\\t      event.amount = msg[1];\\n                break;\\n\\t\\t\\t\\t      case "e":\\n\\t\\t\\t\\t\\t      event.subType = \\\'pitchBend\\\';\\n                var msb=msg[2], lsb=msg[1];\\n                if( (msg[2]>>6).toString(2)=="1" ) {\\n                    event.value = -1*(((msb-64)<<7) + lsb +1) ;\\n                } else {\\n                    var bsMsb=msb<<7;\\n\\t\\t\\t\\t\\t          event.value = bsMsb + lsb;\\n                }\\n                break;\\n            default:\\n                // console.log("Not Supportted Message. ", msg);\\n                return;\\n                break;\\n            }\\n            out={\\n                "type": event.type,\\n                "subType": event.subType,\\n                "data" : event.raw,\\n                "event": event\\n            };\\n        }\\n        return out;\\n    }\\n};\\n\\n\';return a.a};var CFb=UHc(2242);f4b(4838,1,{});_.rZ=function(a){Fpg();IUg();!!GUg&&bsh(GUg,GUg.c,\'[MIDISOUNDW] Adding output: \'+a);this.c.lh(a)};_.sZ=function(){var a,b;Fpg();IUg();!!GUg&&bsh(GUg,GUg.c,\'[MIDISOUNDW] selectPort()\');for(a=0;a<this.c.q.length;a++){b=$yc(this.c,a);if(FJc(\'Microsoft GS Wavetable Synth\',b)||FJc(\'TiMidity port 0\',b)||FJc(\'Bus 1\',b)){this.b=a;zrg(\'[MIDISOUNDW] Selected output: \'+b+\'(\'+this.b+\')\');break}}};f4b(4839,1,Spj);_.Ye=function(){Fpg();IUg();!!GUg&&bsh(GUg,GUg.c,\'[MIDISOUNDW] WebMIDIAPIWrapper.js loading success\');kmh((heh(),zdh));this.a.a=true;rph(this.a)};rPi(Dk)(4);\n//# sourceURL=web3d-4.js\n')
